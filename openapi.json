{
  "openapi": "3.0.1",
  "info": {
    "title": "Rezdy API for suppliers",
    "description": "The Rezdy Supplier API allows querying availability, products, make and retrieve bookings, and much more for your own supplier account.\n\n# Introduction\n\nSince the API is based on REST principles, it's very easy to write and test applications. You can use your browser to access URLs, and you can use pretty much any HTTP client in any programming language to interact with the API. Features\n\n*   REST API\n*   Supports JSON for requests and responses\n*   Simple data model\n*   Secured by SSL and API Key\n*   Fast and highly available, hosted on Amazon Web Services\n\n## Do you need an API?\n\nAPIs are designed for programmers, so if you don't speak any computer language, we have solutions that should be easier for you to use. Rezdy provides a range of plugins for you to integrate on your website, that don't involve using our API directly. To learn more, check the integration plugins available in your Rezdy account, or [read this overview of our iframe plugins](https://support.rezdy.com/hc/en-us/articles/203692014-What-Are-the-Booking-Widget-Options)\n\n## Integration partners\n\nIf you'd like to build a new service around Rezdy's software, require additional APIs, or would like Rezdy to directly integrate with your company's software, <a href=\"mailto:support@rezdy.com?Subject=Rezdy API Request\">get in touch</a> with our team so we can review your project and discuss its feasibility.\n\n## Rezdy APIs\n\nRezdy offers different API products for different types of businesses. Make sure to choose the right one for your needs.\n\n**Rezdy API for agents**\n\nREST API for Rezdy agents and OTAs (online travel agents), providing functionality to resell suppliers products, including pulling shared products, availability and pricing from Rezdy, and pushing bookings and cancellations to Rezdy.\n\n[Rezdy API for agents specification](/rezdyapi/index-agent.html)\n\n**Rezdy API for suppliers**\n\nREST API for suppliers using Rezdy Booking Software provides functionality to manage their Rezdy inventory and booking capabilities.\n\n[Rezdy API for suppliers specification](/rezdyapi/index-supplier.html)\n\n**RezdyConnect (RC)**\n\nThe RezdyConnect API powers the supply side of the Rezdy Channel Manager tool. The API is designed for suppliers using other ticketing systems, allowing them to import and resell their products through Rezdy’s connected channels. Rezdy pulls availability and pricing, and pushes bookings and cancellations to the supplier’s booking system.\n\n[RezdyConnect specification](/rezdyconnect/index.html)\n\n**Rezdy Webhooks**\n\nWebhooks allow 3rd party applications to be notified or updated when certain events happen on Rezdy, by sending data to configured URLs.\n\n[Webhooks specification](/rezdywebhooks/index.html)\n\n\n# Overview\n\n## Specification format\n\nThis specification is built upon [OpenAPI Specification](https://swagger.io/specification/) version 3.0.x.\n\nThe examples in the text as well as request and response payloads, use preset data in Rezdy staging environment, and demo accounts with special read-only API Keys:\n* a supplier account `API specification demo supplier` with API key `5f4b36ff169047a4a5682cba7e07fea4`\n* an agent account `API specification demo agent` with API key `69f708868ddc45eaa1f9b9fad1ddeba5`\n\nYou can use the accounts to try any GET calls, however, POST, PUT and DELETE methods are blocked for this API key to preserve the data and will result in the following error\n\n```\n{\n    \"requestStatus\": {\n        \"success\": false,\n        \"error\": {\n            \"errorCode\": \"6\",\n            \"errorMessage\": \"Client not authorised\"\n        }\n    }\n}\n```\n\n## Versioning\n\nRezdy API is versioned and you must include the version in the URL you're calling. Our API is actively updated within the same version, but these are\nnon-breaking changes and therefore the version will not be updated. We will increase the version for any major breaking change. \n\nPlease check [the changelog](#section/Changelog) for details of changes.\n\nWe are currently on v1 of the Rezdy API. If, for example, you were accessing the Products endpoint, the URl should be structured as:\n\n```\nhttps://api.rezdy.com/v1/products\n```\n\nYou can also use /latest/ to automatically use the latest available version:\n\n```\nhttps://api.rezdy.com/latest/products\n```\n\n## Environments\n\nWe have **Staging** and **Production** environment. Use the Staging environment to test your integration to make sure it is\nready before connecting to the Production environment. Calls to the Rezdy Staging environment include payment\nprocessing through payment gateways are done against third-party sandbox environments.\n\n**Production and Staging environments are currently completely disconnected, accounts and other data are not replicated,\nthus you need to create a new account and generate a new API key for each environment.**\n\n|Environment|Application URL|API URL|API Documentation URL|\n| --- | --- | --- | --- |\n| Staging | [https://app.rezdy-staging.com](https://app.rezdy-staging.com) | [https://api.rezdy-staging.com](https://api.rezdy-staging.com) | [https://developers.rezdy-staging.com](https://developers.rezdy-staging.com/)|\n| Production | [https://app.rezdy.com](https://app.rezdy.com/) | [https://api.rezdy.com](https://api.rezdy.com/) | [https://developers.rezdy.com](https://developers.rezdy.com/)|\n\nWe release new updates to the Staging environment approximately one week before they are released to production, so there may be differences. These\ndifferences will be represented in the documentation available for each environment as outlined above. Check [the changelog](#section/Changelog) for details.\n\nFor simple integrations, it is easier to test using the production environment, booking only Test products from our `Rezdy Agent Certification` supplier.\n\nOn the Staging environment, you can activate our test supplier account with credit card number 4242424242424242 which will prevent\nthe account from expiring due to the trial ending.\n\n## Security\n\nAll requests must use HTTPS, the API is not available on non-SSL/TLS ports.\n\nWe do not allow Cross-Origin Resource Sharing (CORS), REST calls to Rezdy API should not be made directly from a browser. \n\nAll API calls require a valid API Key. It must be passed as a query parameter or HTTP header, with all requests, using the following format:\n\n```\nGET https://api.rezdy.com/v1/products?apiKey=XXXXXXXXXXXXXXXXXXXX\n```\n\nor\n\n```\nGET https://api.rezdy.com/v1/products\n\nHTTP headers:\napiKey: XXXXXXXXXXXXXXXXXXXX\n```\n\nTo obtain your API Key, please log in to your Rezdy Booking Software and send a request by going to the menu item Integrations > Rezdy API >\nRequest API Key. If you do not see this menu item, please contact <a href=\"mailto:support@rezdy.com?Subject=Rezdy API Key Request\">support@rezdy.com</a>\n\n**Keep API key confidential and do not publish it to any publicly available repository in a version control system.** Malicious bots are frequently scanning for such vulnerabilities.\n\n## Payload format \n\n### Media Types\nThe Rezdy API supports UTF-8 encoded JSON payload. You must include both Accept and Content-Type headers to your requests as follows:\n\n```\nContent-Type: application/json; charset=UTF-8\nAccept: application/json\n```\n\n### Response format\n\nAll responses will contain a \"requestStatus\" element. That element will tell you if your request was successful and may contain error or warning messages.\n\n\n*Successful request:*\n\n```\n{\n \"requestStatus\": {\n  \"success\": true,\n  \"version\": \"v1\"\n }\n}\n```\n\n*Request with error:*\n\n```\n{\n \"requestStatus\": {\n  \"success\": false,\n  \"error\": {\n   \"errorCode\": \"6\",\n   \"errorMessage\": \"Invalid API Key\"\n  }\n }\n}\n```\n\n### Pagination\n\nRequests that return multiple items are paginated to 100 items by default. You can control pagination by using the `offset` (default:`0`) and `limit`\n(default: `100`) query parameters. The custom limit may not exceed 100, except for specific endpoints if mentioned in their description.\n\n*For example:*\n\n```\nGET /products?offset=0&limit=100\nGET /products?offset=100&limit=100\nGET /products?offset=200&limit=100\n```\n\n### Dates format\n\nThere are 2 date formats in our API model.\n\nThe first one is [ISO8601 format](http://en.wikipedia.org/wiki/ISO_8601), and typically fields such as startTime, endTime, dateCreated, dateUpdated are formatted this way.\n\nThe other one is a supplier's localized date format, which is based on a supplier's timezone setup on Rezdy. Typically, used by fields startTimeLocal/endTimeLocal.\n\n**How to use them in API requests**\n\nThese two types are mostly exposed in pairs in the payloads or query parameters as startTime & startTimeLocal or endTime & endTimeLocal. For better convenience, you can choose which format to use. General rules of thumb are:\n\n1.  If a start time is required, at least one of the parameters startTime or startTimeLocal have to be specified. Similarly, for other date fields.\n2.  If both parameters startTime and startTimeLocal are specified in the request, the startTime has a higher priority, startTimeLocal will be simply ignored. Similarly, for other date fields.\n\n#### Local format\n\nLocal format does not contain timezone information, the format is yyyy-MM-dd HH:mm:ss, e.g.:\n\n``2014-10-30 09:00:00``\n\nUsing local date format is recommended, as there is no need to do any timezone conversions when displaying data such as local tour start time to an end user.\n\n#### ISO8601 format\n\nIf you use ISO8601 format, you have to convert times to the supplier’s timezone when you want to display dates and times for a tour. For example, if a supplier runs a tour on _30 Oct 2014_ at _9:00 AM_ in the _“Sydney/Australia”_ timezone, time in ISO8601 format returned by the API will be:\n\n```2014-10-29T22:00:00Z```\n\nThat’s because _2014-10-29T22:00:00Z_ is the same time as _2014-10-30T09:00:00+11:00._ You can send any of these formats in your API calls and they’re both valid and both represent the same timestamp.\n\nYou can retrieve the supplier’s timezone in `GET /products` calls (`Product.timezone`). Please be mindful of Daylight Savings Time when converting timestamps. You should always use the proper timezone (i.e. `Australia/Sydney`) instead of the time offset (`+10:00`) because the latter can vary during the year (i.e. Sydney is `+10:00` in winter and `+11:00` in summer)\n\n\n## Rate Limit\n\nAPI use is restricted to 100 calls per minute, per API Key. We may alter this limit based on usage patterns. If you reach your limit, you will receive an\nHTTP Status 406 response with message \"Too Many Requests\".\n\n## Caching\n\nTo provide the best experience to your customers and to avoid hitting the rate limits, you should implement some form of caching on your end rather than\ncalling the Rezdy API for each request. For example, a typical browsing + booking process could follow this caching strategy:\n\n| Customer action on your website | Rezdy API Call | Caching recommendation |\n| --- | --- | --- |\n| Browse product 1 | GET /products/{product1} | Cache for 24+ hours |\n| Check product 1 availability | GET /availability | Cache for 24 hours |\n| Browse product 2 | GET /products/{product2} | Cache for 24+ hours |\n| Check product 2 availability | GET /availability | Cache for 24 hours |\n| Add product 2 to shopping cart – Starts checkout | GET /availability | No Cache – confirms product is still available |\n| Completes checkout | POST /bookings | No Cache |\n\n## Error codes\n\nThe following error codes can be returned in the requestStatus object\n\n| Error code Meaning                                           | Details                                                                                                                                                 |\n|--------------------------------------------------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------|\n| 1\tUNKNOWN\t                                                   | Indicates an unknown error.                                                                                                                             |\n| 2\tNO_IMPLEMENTATION                                          | Indicates that the target API has no implementation for the request.                                                                                    |\n| 3\tBIZ_RULE                                                   | Indicates that the message has passed a low-level validation check, but that the business rules for the request message were not met.                   |\n| 4\tAUTHENTICATION                                             | Indicates that credentials are invalid                                                                                                                  |\n| 5\tAUTHENTICATION_TIMEOUT                                     | Indicates that the security credentials in the message have expired                                                                                     |\n| 6\tAUTHORIZATION                                              | Indicates that credentials are valid but not enough permissions to execute that call                                                                    |\n| 7\tPROTOCOL_VIOLATION                                         | Indicates that a request was sent within a message exchange that does not align to the message                                                          |\n| 8\tTRANSACTION_MODEL                                          | Indicates that the target business system does not support the intended transaction-oriented operation                                                  |\n| 9\tAUTHENTICAL_MODEL                                          | Indicates the type of authentication requested is not recognized                                                                                        |\n| 10\tMISSING_FIELD                                             | Indicates that an element or attribute that is required in by the schema (or required by agreement between trading partners) is missing from the message |\n| 11 AUTOMATED_PAYMENTS_PRICE_<br>TOO_LOW_TO_COVER_FEES        | Indicate that automated payment booking failed                                                                                                          |\n| 12 AUTOMATED_PAYMENTS_PRICE_<br>TOO_LOW_FOR_AGENT_COMMISSION | Indicate that automated payment booking failed                                                                                                          |\n| 13 PAYMENT_CARD_TYPE_DECLINED                                | Indicate that the card type is invalid                                                                                                                  |\n| 14 PAYMENT_CARD_TYPE_REJECTED                                | Indicate that the card type is invalid                                                                                                                  |\n| 15 PAYMENT_ERROR                                             | Indicate that payment information is invalid                                                                                                            |\n| 16 SINGLE_ORDER_LINE_ITEM_<br>ALLOWED                        | Indicate that only a single item per order can be booked for this supplier                                                                              |\n| 17 PAYMENT_REQUIRED_SCA_<br>ACTION                           | Indicates that the payment should be completed performing strong customer authentication (SCA)                                                          |\n| 18 MINIMUM_QUANTITY_REQUIRED                                 | Indicate that quantities are less than the minimal requirement                                                                                          |\n| 19 MAXIMUM_QUANTITY_REACHED                                  | Indicate that quantities are higher than the maximum requirement                                                                                        |\n| 20 DOWNSTREAM_ERROR                                          | Indicate downstream error                                                                                                                               |\n| 21 NOT_ENOUGH_SEATS_AVAILABLE                                | Indicate that there are not enough seats available for this session                                                                                     |\n| 22 SESSION_NOT_FOUND                                         | indicate that session doesn't find in our system                                                                                                        |\n| 23 PRODUCT_NOT_FOUND                                         | Indicate that product doesn't find in our system                                                                                                        |\n| 24 ORDER_NOT_FOUND                                           | Indicate that order doesn't find in our system                                                                                                          |\n| 25 ORDER_LINE_ITEM_NOT_FOUND                                 | Indicate that order line item doesn't find in our system                                                                                                |\n| 26 MIN_BOOK_AHEAD_START_TIME                                 | Indicate that the date of booking must be booked {n} duration before tour start                                                                         |\n| 27 MIN_BOOK_AHEAD_END_TIME                                   | Indicate that the date of booking must be booked {n} duration before tour end                                                                           |\n| 28 INVALID_CUSTOMER_EMAIL                                    | Indicate that the customer email address is not in a valid format                                                                                       |\n| 29 BLOCKED_EMAIL                                             | Indicate that the customer email address has been blocked                                                                                               |\n| 30 DOWNSTREAM_TIMEOUT                                        | Indicate that the source of the error is a timeout in communication with downstream services. You could retry this call later.                          |\n| 31 INTERNAL_ERROR                                            | Indicate that Rezdy failed to process a request because of an internal error                                                                            |\n| 32 INVALID_PRICE_OPTION                                      | Indicate that the price option used for a booking does not exist on the product                                                                         |\n| 33 REZDYCONNECT_EXTERNAL_SYSTEM                              | Indicate that external RezdyConnect system did not return mandatory data to finish operation.                                                           |\n| 34 OTHER_OPERATION_IN_PROGRESS                               | Indicate that currently there is a session update process running for received product code. You can retry this call shortly.                          |\n\n## Availability\n\nAPI real-time and historical uptime/availability details are available [here](http://stats.pingdom.com/xmfgte7a82cg/2576147).\n\nWe use a highly available architecture and hosting resources with Amazon Web Services. Our standard releases are transparent, therefore causing no\ndowntime, and are backwards-compatible unless it is a major version release (see versioning above). In case a maintenance period is required we will alert\nusers via in-app messages and announcements on our [support forum](https://support.rezdy.com/home) and our [Rezdy Ops Twitter](https://twitter.com/rezdy_ops) account.\n\n## API Limitations\n\nOur API is in active development with regular new endpoints and features being added to support more use cases. There are, however, some current limitations:\n\n*   **3D-Secure** authentication for payments processing is not yet supported in API, therefore Stripe payments (**StripeConnect, RezdyPay, Marketplace, and Automated payments**) to book EU suppliers' products may not work.\n*   Updating bookings is limited to status, customer & participant details. Updating products or dates is not supported.\n*   **Rental products, custom products with a price per duration or GIFT_CARD products, cannot be booked through the API** yet (see isApiBookingSupported field in [Product](#operation/getProduct) response model)\n*   **Return shuttle/Transfer product prices are not exposed through the Rezdy API, but products can be booked independently as 2x one-way products**.\n*   Availability limited per price option is not supported. These products can be booked but only the total availability per session is exposed.\n*   GIFT_CARD type products cannot be created or booked using the Rezdy API\n*   **We don't recommend doing immediate consecutive product updates, session creates, or session updates for the same product code, or a product code of a shared product.** This is due to the async session operation that is being triggered and limited to being scheduled once per product (shared products group) at a time. \n\n\n## Terminology\n\n**Supplier (Tour Operator)**\n\nA business supplying products for resale to agents channels or Rezdy marketplace (B2B) or using Rezdy booking software to sell them to end customers (B2C).\n\n*A supplier can also act as an agent and resell other suppliers' products. In that case, refer to Rezdy API specification for Agents* \n\n**Agent (Reseller)**\n\nA business reselling supplier products.\n\n**Product (Tour, Activity)**\n\nAn experience that a supplier is selling on Rezdy. \n\n**Booking (Order)**\n \nTransaction of selling a product or multiple products belonging to the same Rezdy supplier. Booking and order might be used interchangeably, but refer to the same entity across the specification. \n\n**Booking item (Order item)**\n\nA booking consist of a single or multiple items. Each item is linked to a single product, a single or no session (depending on product booking mode), and can have different quantities and tour participants.\n\n**Reservation**\n\nAn un-confirmed booking (A booking with orderStatus == `PROCESSING`) that temporarily holds availability.\n\n*At the moment reservations are not available in agent API.*\n\n**Session (Tour session)**\n\nA time slot when a product (tour or activity) is scheduled to run at. A session provides information such as start and end time, total capacity (`seats`), remaining capacity (`seatsAvailable`) and pricing (`priceOptions`).\n\n**Customer**\n\nAn entity representing information about an end customer who booked a product. A booking can have multiple items and each can have a list of participants based on the booked quantities, but only a single main customer per booking. \n\n**Participant**\n\nAn entity representing information about additional tour participants. A booking item is associated with a list of participants. \n\n*The first participant always represents the main customer. For your convenience Rezdy automatically copies information from customer entity into the booking first participant in booking requests*\n\n**Extra (Product extra)**\n\nAn additional item or service that can be booked together with a product. Extras do not have their own availability.\n\n**Booking field**\n\nA booking questions or information provided during a booking process. Booking fields can be stored on order level (a booking field per booking) or participant level (a booking field per participant). Booking fields can be mandatory or optional and may require a certain format.  \n\n*See [Using Booking Fields](#section/Typical-use-cases/Using-Booking-Fields) for details.*\n\n**Pickup**\n\nA list of pickup locations and additional pickup instructions that are associated with a product, that customers can choose from during booking.\n\n*See [Providing customer with pickups](#section/Typical-use-cases/Providing-customer-with-pickups) for details.*\n\n**Resource**\n\nAn entity such as tour guide, car, boat, etc. that can be associated with sessions. A resource limits session availability and can be shared across multiple sessions.\n\n**Coupon (Voucher, Promocode)**\n\nA discount that suppliers can offer for customers to apply for their product bookings. \n\n*At the moment coupons are not available in agent API.* \n\n**Manual payment**\n\nA booking payment that requires manual reconciliation between agent and supplier outside of Rezdy.\n\n*See [Bookig workflow](#section/Typical-use-cases/From-browsing-to-booking-flow) for details.*\n\n**Automated payment**\n\nA full booking payment that is required at the time of booking, and is automatically split and paid to supplier and agent.\n\n*See [Bookig workflow](#section/Typical-use-cases/From-browsing-to-booking-flow) for details.*\n\n**Marketplace**\n\nThe two-sided B2B platform provided by Rezdy where suppliers and resellers can search, connect and trade with one another. Only marketplace rate products are available on Rezdy marketplace and only automated payments can be used for marketplace bookings.\n\n**Marketplace rate**\n\nMarketplace rate allows suppliers to select products available for Rezdy marketplace and set up their commission amount.\n\n**Negotiated rate**\n\nNegotiated rate allows agents and suppliers to agree on a specific commission amount to be used for selected products for their bookings.\n\n**Category**\n\nProduct categorisation, which allows agents or suppliers to assign Rezdy products to logical groups.\n\n**Manifest**\n\nA functionality around tour participant manifest, such as check-in, no show flags.\n\n\n# Getting started\n\n## Account setup\n\nYou need to follow these steps to be able to use the Supplier API:\n\n1.  Create a supplier account on [https://app.rezdy.com](https://app.rezdy.com/), or on [https://app.rezdy-staging.com](https://app.rezdy-staging.com/) for testing purpose.\n2.  Create a product. The product should be set up with \"Fixed Dates and time\" scheduling mode.\n3.  Create sessions in your calendar. Sessions open availability for your product\n4.  To obtain your API Key, please send a request through Integrations > Rezdy API > Request API Key.\n5.  Read our [API Overview](#section/Overview), check out the typical use cases, examples, and endpoints specification below. Build your client and feel free to get in touch if you have any questions or if you’d like to discuss the implementation of our API services.\n\n## Generate API key\n\nYou have to request to obtain an initial API Key from our support team. Requests to generate an API key may take up to \"48\" hours to process. Once generated, the key will automatically appear on the Rezdy API page on the Integrations menu for immediate use. You can request your API key by logging into Rezdy and clicking:\n\n1. Integrations\n2. Rezdy API\n\n![API key](apiKey.png)\n\n# Typical use cases\n\n## From browsing to booking flow\n\nA typical use case for supplier integration with Rezdy API, is to facilitate Rezdy API data to build a booking site for your Rezdy products. These examples show the API requests and responses for a typical booking flow. It helps you understand the process to replicate the Rezdy booking form through the API.\n\nThat typically consists of the following steps:\n\n1. Load and cache your Rezdy product details, and refresh it regularly. [Search product](#operation/searchProducts)\n2. Load and cache Rezdy product availability, and refresh it regularly. [Search availability](#operation/checkAvailability)\n3. Build a checkout flow, which includes a real-time availability check of user selected product sessions and booking creation. [Create booking](#create-booking)\n4. Update booking with additional data such participant data, comments or customer pick location. [Update booking](#update-booking)\n5. Cancel a booking [Cancel booking](#cancel-booking)\n\n*Note: You can also act as an agent and book products of other suppliers, however the payloads are slightly different, therefore in such case follow Rezdy API for agents specification.*\n\n### Load product details\n\nAgents do not own any product. You must use the [GET /products](#operation/searchProducts) endpoint to load products that suppliers have shared. Product details include general pricing, description and photos. There are many attributes available on the service, allowing you to filter products by location, supplier, category, rate type, etc.\n\nWhen a customer browses to a specific product page on your website, you should show the product details including general pricing, description and photos using [GET /products](#operation/searchProducts) call.\n\nTo optimise the performance it is better to call search products and cache the retrieved products for at least 24 hours, depending on how often you tend to update your products content. Any search filters functionality should be implemented client side.\n\n**Example request:**\n\n```\nGET https://api.rezdy-staging.com/v1/products?apiKey=5f4b36ff169047a4a5682cba7e07fea4\n```\n\n**Example response:**\n\n```\n{\n    \"requestStatus\": {\n        \"success\": true,\n        \"version\": \"v1\"\n    },\n    \"products\": [\n        {\n            \"productType\": \"ACTIVITY\",\n            \"name\": \"Double dive with sharks\",\n            \"shortDescription\": \"Double dive with grey nurse or leopard sharks, depending on the season.\",\n            \"description\": \"Double dive with grey nurse or leopard sharks, depending on the season. Boat dive with a snack provided during the break between the dives. The dive site is suitable for open water divers.\",\n            \"productCode\": \"PWQF1Y\",\n            \"internalCode\": \"DIVING\",\n            \"supplierId\": 13398,\n            \"supplierAlias\": \"apispecificationdemosupplierdonotedit\",\n            \"supplierName\": \"API specification demo supplier (DO NOT EDIT)\",\n            \"timezone\": \"Australia/Sydney\",\n            \"advertisedPrice\": 200.0,\n            \"priceOptions\": [\n                {\n                    \"price\": 250.0,\n                    \"label\": \"Adult\",\n                    \"id\": 929159,\n                    \"seatsUsed\": 1,\n                    \"productCode\": \"PWQF1Y\"\n                },\n                {\n                    \"price\": 200.0,\n                    \"label\": \"Student\",\n                    \"id\": 929160,\n                    \"seatsUsed\": 1,\n                    \"productCode\": \"PWQF1Y\"\n                }\n            ],\n            \"currency\": \"AUD\",\n            \"unitLabel\": \"Participant\",\n            \"unitLabelPlural\": \"Participants\",\n            \"quantityRequired\": true,\n            \"quantityRequiredMin\": 1,\n            \"quantityRequiredMax\": 50,\n            \"images\": [\n                {\n                    \"id\": 22650,\n                    \"itemUrl\": \"https://img.rezdy-staging.com/PRODUCT_IMAGE/13398/DSCN8351.jpg\",\n                    \"thumbnailUrl\": \"https://img.rezdy-staging.com/PRODUCT_IMAGE/13398/DSCN8351_tb.jpg\",\n                    \"mediumSizeUrl\": \"https://img.rezdy-staging.com/PRODUCT_IMAGE/13398/DSCN8351_med.jpg\",\n                    \"largeSizeUrl\": \"https://img.rezdy-staging.com/PRODUCT_IMAGE/13398/DSCN8351_lg.jpg\"\n                },\n                {\n                    \"id\": 22651,\n                    \"itemUrl\": \"https://img.rezdy-staging.com/PRODUCT_IMAGE/13398/DSCN8378.jpg\",\n                    \"thumbnailUrl\": \"https://img.rezdy-staging.com/PRODUCT_IMAGE/13398/DSCN8378_tb.jpg\",\n                    \"mediumSizeUrl\": \"https://img.rezdy-staging.com/PRODUCT_IMAGE/13398/DSCN8378_med.jpg\",\n                    \"largeSizeUrl\": \"https://img.rezdy-staging.com/PRODUCT_IMAGE/13398/DSCN8378_lg.jpg\"\n                },\n                {\n                    \"id\": 22652,\n                    \"itemUrl\": \"https://img.rezdy-staging.com/PRODUCT_IMAGE/13398/DSCN1387.jpg\",\n                    \"thumbnailUrl\": \"https://img.rezdy-staging.com/PRODUCT_IMAGE/13398/DSCN1387_tb.jpg\",\n                    \"mediumSizeUrl\": \"https://img.rezdy-staging.com/PRODUCT_IMAGE/13398/DSCN1387_med.jpg\",\n                    \"largeSizeUrl\": \"https://img.rezdy-staging.com/PRODUCT_IMAGE/13398/DSCN1387_lg.jpg\"\n                },\n                {\n                    \"id\": 22653,\n                    \"itemUrl\": \"https://img.rezdy-staging.com/PRODUCT_IMAGE/13398/DSCN1402.jpg\",\n                    \"thumbnailUrl\": \"https://img.rezdy-staging.com/PRODUCT_IMAGE/13398/DSCN1402_tb.jpg\",\n                    \"mediumSizeUrl\": \"https://img.rezdy-staging.com/PRODUCT_IMAGE/13398/DSCN1402_med.jpg\",\n                    \"largeSizeUrl\": \"https://img.rezdy-staging.com/PRODUCT_IMAGE/13398/DSCN1402_lg.jpg\"\n                }\n            ],\n            \"bookingMode\": \"INVENTORY\",\n            \"charter\": false,\n            \"terms\": \"\",\n            \"extras\": [\n                {\n                    \"name\": \"Underwater camera rental\",\n                    \"description\": \"An underwater camera rental for the dive. Choice of GoPro or Nikon Coolpix AW130. Select the number of cameras up to the number of participants, that you would like to rent for this booking.\",\n                    \"price\": 15.0,\n                    \"extraPriceType\": \"ANY\"\n                }\n            ],\n            \"bookingFields\": [\n                {\n                    \"label\": \"First Name\",\n                    \"requiredPerParticipant\": false,\n                    \"requiredPerBooking\": true,\n                    \"visiblePerParticipant\": true,\n                    \"visiblePerBooking\": true,\n                    \"fieldType\": \"String\"\n                },\n                {\n                    \"label\": \"Last Name\",\n                    \"requiredPerParticipant\": false,\n                    \"requiredPerBooking\": true,\n                    \"visiblePerParticipant\": true,\n                    \"visiblePerBooking\": true,\n                    \"fieldType\": \"String\"\n                },\n                {\n                    \"label\": \"Mobile\",\n                    \"requiredPerParticipant\": false,\n                    \"requiredPerBooking\": true,\n                    \"visiblePerParticipant\": false,\n                    \"visiblePerBooking\": true,\n                    \"fieldType\": \"Phone\"\n                },\n                {\n                    \"label\": \"Email\",\n                    \"requiredPerParticipant\": false,\n                    \"requiredPerBooking\": true,\n                    \"visiblePerParticipant\": false,\n                    \"visiblePerBooking\": true,\n                    \"fieldType\": \"String\"\n                },\n                {\n                    \"label\": \"Special Requirements\",\n                    \"requiredPerParticipant\": false,\n                    \"requiredPerBooking\": false,\n                    \"visiblePerParticipant\": false,\n                    \"visiblePerBooking\": true,\n                    \"fieldType\": \"String\"\n                },\n                {\n                    \"label\": \"Certification level\",\n                    \"requiredPerParticipant\": false,\n                    \"requiredPerBooking\": false,\n                    \"visiblePerParticipant\": true,\n                    \"visiblePerBooking\": false,\n                    \"fieldType\": \"String\"\n                },\n                {\n                    \"label\": \"Certification number\",\n                    \"requiredPerParticipant\": false,\n                    \"requiredPerBooking\": false,\n                    \"visiblePerParticipant\": true,\n                    \"visiblePerBooking\": false,\n                    \"fieldType\": \"String\"\n                },\n                {\n                    \"label\": \"Certification agency\",\n                    \"requiredPerParticipant\": false,\n                    \"requiredPerBooking\": false,\n                    \"visiblePerParticipant\": true,\n                    \"visiblePerBooking\": false,\n                    \"listOptions\": \"PADI\\r\\nSSI\\r\\nSDI\",\n                    \"fieldType\": \"List\"\n                }\n            ],\n            \"latitude\": -28.6113488,\n            \"longitude\": 153.629085,\n            \"confirmMode\": \"AUTOCONFIRM\",\n            \"confirmModeMinParticipants\": 0,\n            \"commissionIncludesExtras\": false,\n            \"cancellationPolicyDays\": 7,\n            \"dateCreated\": \"2021-08-30T23:49:55Z\",\n            \"minimumNoticeMinutes\": 1440,\n            \"durationMinutes\": 180,\n            \"dateUpdated\": \"2021-09-13T04:13:35Z\",\n            \"pickupId\": 475,\n            \"locationAddress\": {\n                \"addressLine\": \"Julien rocks\",\n                \"postCode\": \"\",\n                \"city\": \"Byron Bay\",\n                \"state\": \"\",\n                \"countryCode\": \"au\",\n                \"latitude\": -28.6113488,\n                \"longitude\": 153.629085\n            },\n            \"languages\": [\n                \"en_au\"\n            ],\n            \"tags\": [\n                \"TYPE:Activity\"\n            ],\n            \"waitListingEnabled\": false,\n            \"isApiBookingSupported\": true\n        }\n    ]\n}\n```\n\nThe response includes a few important attributes that you will need to make a booking:\n\n*   **Price options**: You can see there are 2 price options, with different labels (Adult, Student). When you make a booking you should send the exact same label in the Quantity.optionLabel attribute. You do not need to store or send priceOption Ids.\n*   **Booking Fields**: This is a list of the various fields suppliers require when making a booking. Some fields can be required once per booking and should be added to the Booking.fields[] array. Others can be required once per participant and should be added to the BookingItem[].participants[].fields[] array for each participant.\n\n\n### Check availability\n\nWhen a customer wants to check availability for a specific product, you can call the  [GET /availability](#operation/checkAvailability) endpoint to load availability.\n\n**Example Request**\n\n```GET https://api.rezdy-staging.com/v1/availability?apiKey=5f4b36ff169047a4a5682cba7e07fea4&productCode=PWQF1Y&startTimeLocal=2025-10-01 00:00:00&endTimeLocal=2025-10-03 00:00:00```\n\nThis loads all the available sessions for product with code PF6B25 for the whole month of November 2014 in the supplier’s local timezone.\n\nIt is possible to load availability for multiple products in a single request. Simply add multiple productCode attributes to the request:\n\n```GET https://api.rezdy-staging.com/v1/availability?apiKey=5f4b36ff169047a4a5682cba7e07fea4&productCode=P00TNX&productCode=PWQF1Y&startTimeLocal=2025-10-01 00:00:00&endTimeLocal=2025-10-03 00:00:00```\n\n\nWe recommend using startTimeLocal and endTimeLocal attributes, instead of startTime and endTime. These older attributes required you to send the timezone as part of your request.\n\n```GET https://api.rezdy-staging.com/v1/availability?apiKey=5f4b36ff169047a4a5682cba7e07fea4&productCode=P00TNX&productCode=PWQF1Y&startTime=2025-10-01T00:00:00%2B11:00&endTime=2025-10-03T00:00:00%2B11:00```\n\n**Example Response**\n\n```\n{\n    \"requestStatus\": {\n        \"success\": true,\n        \"version\": \"v1\"\n    },\n    \"sessions\": [\n        {\n            \"id\": 2788078,\n            \"productCode\": \"PWQF1Y\",\n            \"startTime\": \"2021-09-30T23:00:00Z\",\n            \"endTime\": \"2021-10-01T02:00:00Z\",\n            \"startTimeLocal\": \"2021-10-01 09:00:00\",\n            \"endTimeLocal\": \"2021-10-01 12:00:00\",\n            \"allDay\": false,\n            \"seats\": 50,\n            \"seatsAvailable\": 48,\n            \"priceOptions\": [\n                {\n                    \"price\": 250.0,\n                    \"label\": \"Adult\",\n                    \"id\": 929159,\n                    \"seatsUsed\": 1,\n                    \"productCode\": \"PWQF1Y\"\n                },\n                {\n                    \"price\": 200.0,\n                    \"label\": \"Student\",\n                    \"id\": 929160,\n                    \"seatsUsed\": 1,\n                    \"productCode\": \"PWQF1Y\"\n                }\n            ]\n        },\n        {\n            \"id\": 2788381,\n            \"productCode\": \"PWQF1Y\",\n            \"startTime\": \"2021-10-01T23:00:00Z\",\n            \"endTime\": \"2021-10-02T02:00:00Z\",\n            \"startTimeLocal\": \"2021-10-02 09:00:00\",\n            \"endTimeLocal\": \"2021-10-02 12:00:00\",\n            \"allDay\": false,\n            \"seats\": 50,\n            \"seatsAvailable\": 50,\n            \"priceOptions\": [\n                {\n                    \"price\": 250.0,\n                    \"label\": \"Adult\",\n                    \"id\": 929159,\n                    \"seatsUsed\": 1,\n                    \"productCode\": \"PWQF1Y\"\n                },\n                {\n                    \"price\": 200.0,\n                    \"label\": \"Student\",\n                    \"id\": 929160,\n                    \"seatsUsed\": 1,\n                    \"productCode\": \"PWQF1Y\"\n                }\n            ]\n        }\n    ]\n}\n```\n\nImportant information here is:\n\n*   **startTimeLocal**: This is the localized session time you need to send when making a booking for a specific session.\n*   **seatsAvailable**: This is the number of seats available for that specific session.\n*   **startTime**: It is also possible to use timezone-independent session start time for the product booking. However, only one of the fields startTime or startTimeLocal can be used in the booking request, therefore it is up to you to choose which way is more convenient for your client-side code. See the [Dates format](#dates-format) section for details.\n\n\n### Create booking\n\nNow when you built and cached products and availability with price, the next step is a checkout flow.\n\nWhen a customer selects a specific time and checks out, you should verify real-time availability of the chosen session. Similarly, as the step above, except startTimeLocal and endTimeLocal will be set as the customer's chosen time. In the example we assume customer selecting a tour starting at 9:00 am local time on the 1st of October.\n\n```\nGET https://api.rezdy-staging.com/v1/availability?apiKey=5f4b36ff169047a4a5682cba7e07fea4&productCode=PWQF1Y&startTimeLocal=2025-10-01 09:00:00&endTimeLocal=2025-10-01 09:00:00\n```\n\nIf the seats are still available, you can create a booking in Rezdy by calling the **[POST /bookings](#operation/createBooking)** endpoint.\n\nThe following request creates a simple booking for 1 Adult for the product we previously loaded. It’s a $250 booking for November 3rd at 9:00AM in Sydney, with a manually processed payment recorded. That means you charged the customer outside Rezdy, on your own website/gateway. You record that payment in the booking for a record keeping purpose only, but Rezdy will not process any payment in this case.\n\n**Example Request**\n```\nPOST https://api.rezdy-staging.com/v1/bookings?apiKey=5f4b36ff169047a4a5682cba7e07fea4\n```\n```\n{\n    \"customer\": {\n        \"firstName\": \"Rick\",\n        \"lastName\": \"Sanchez\",\n        \"phone\": \"+61484123456\"\n    },\n    \"items\": [\n        {\n            \"productCode\": \"PWQF1Y\",\n            \"startTimeLocal\": \"2025-10-01 09:00:00\",\n            \"quantities\": [\n                {\n                    \"optionLabel\": \"Adult\",\n                    \"value\": 1\n                }\n            ]\n        }\n    ],\n    \"payments\": [\n        {\n            \"amount\": 250,\n            \"type\": \"CASH\",\n            \"recipient\": \"SUPPLIER\",\n            \"label\": \"Paid in cash to API specification demo company\"\n        }\n    ]\n}\n```\n\n### Update booking\n\n**[PUT /bookings](#operation/updateBooking)** endpoint allows you to amend or provide additional information to an existing booking.\n\nThe example below updates the comments, customer pickup location and participant booking fields.\n\n**Example Request**\n```\nPUT: https://api.rezdy-staging.com/v1/bookings/R0A1D6U?apiKey=5f4b36ff169047a4a5682cba7e07fea4\n```\n```\n{\n    \"comments\": \"Here come comments that are visible to you, but not to customers\",\n    \"orderNumber\": \"R0A1D6U\",\n    \"status\": \"CONFIRMED\",\n    \"supplierId\": 13398,\n    \"supplierName\": \"API specification demo supplier (DO NOT EDIT)\",\n    \"supplierAlias\": \"apispecificationdemosupplierdonotedit\",\n    \"customer\": {\n        \"id\": 29857,\n        \"firstName\": \"Rick\",\n        \"lastName\": \"Sanchez\",\n        \"name\": \"Rick Sanchez\",\n        \"phone\": \"+61484123456\"\n    },\n    \"items\": [\n        {\n            \"pickupLocation\": {\n                \"locationName\": \"Divers hotel\"\n            },\n            \"productName\": \"Double dive with sharks\",\n            \"productCode\": \"PWQF1Y\",\n            \"startTime\": \"2025-09-30T23:00:00Z\",\n            \"endTime\": \"2025-10-01T02:00:00Z\",\n            \"startTimeLocal\": \"2025-10-01 09:00:00\",\n            \"endTimeLocal\": \"2025-10-01 12:00:00\",\n            \"quantities\": [\n                {\n                    \"optionLabel\": \"Adult\",\n                    \"optionPrice\": 250.0,\n                    \"value\": 1\n                }\n            ],\n            \"totalQuantity\": 1,\n            \"amount\": 250.0,\n            \"extras\": [],\n            \"participants\": [\n                {\n                    \"fields\": [\n                        {\n                            \"label\": \"First Name\",\n                            \"value\": \"Rick\"\n                        },\n                        {\n                            \"label\": \"Last Name\",\n                            \"value\": \"Sanchez\"\n                        },\n                        {\n                            \"label\": \"Certification level\",\n                            \"value\": \"Open Water\"\n                        },\n                        {\n                            \"label\": \"Certification number\",\n                            \"value\": \"123456798\"\n                        },\n                        {\n                            \"label\": \"Certification agency\",\n                            \"value\": \"PADI\"\n                        }\n                    ]\n                }\n            ],\n            \"subtotal\": 250.0\n        }\n    ],\n    \"totalAmount\": 250.0,\n    \"totalCurrency\": \"AUD\",\n    \"totalPaid\": 250.0,\n    \"totalDue\": 0.0,\n    \"dateCreated\": \"2021-09-17T01:03:34Z\",\n    \"dateConfirmed\": \"2021-09-17T01:03:34.298Z\",\n    \"datePaid\": \"2021-09-17T01:03:34.298Z\",\n    \"payments\": [\n        {\n            \"type\": \"CASH\",\n            \"amount\": 250.0,\n            \"currency\": \"AUD\",\n            \"date\": \"2021-09-17T01:03:34.303Z\",\n            \"label\": \"Paid in cash to API specification demo company\",\n            \"recipient\": \"SUPPLIER\"\n        }\n    ],\n    \"fields\": [\n        {\n            \"label\": \"Barcode\",\n            \"value\": \"R0A1D6U\"\n        }\n    ],\n    \"source\": \"API\",\n    \"vouchers\": [],\n    \"barcodeType\": \"QR_CODE\"\n}\n```\n\n### Cancel booking\n\nTo cancel a booking use **[DELETE /bookings](#operation/cancelBooking)** endpoint as in example below with an empty request body.\n\n**Example Request**\n```\nDELETE https://api.rezdy-staging.com/v1/bookings/R0A1D6U?apiKey=5f4b36ff169047a4a5682cba7e07fea4\n```\n\n## 2 steps booking\n\nTwo steps booking flow is useful for minimising availability errors during a customer checkout, thereby achieving a better customer experience.\n\nTypical flow with 2 steps booking process follow these steps:\n\n1. **create a reservation**: call Rezdy API to create a reservation (an order with `PROCESSING` status) upon a customer cart checkout. This will create an order, which holds reserved product's session's availability for at least 60 minutes or until cancelled. \n1. **confirm/cancel it**: process customer information or payment in your portal. Once done, call Rezdy to confirm the booking (set status to `CONFIRMED`). Alternatively, cancel the reservation to free the availability when checkout process was abandoned or failed. If it's not done manually, Rezdy will do so after 60 minutes.  \n\nExample requests to do a 2 steps booking are similar to a standard create and update booking, the only difference is how we set a field  `status`\n\nCreate a reservation - a booking in the `PROCESSING` status:\n\n```\nPOST https://api.rezdy.com/v1/bookings/?apiKey=69f708868ddc45eaa1f9b9fad1ddeba5\n```\n\n```\n{\n\t\"status\": \"PROCESSING\", \n\t\"customer\": {\n    ...\t\n}\n```\n\n\nConfirm a reservation - update the booking `RKM1ULT` to `CONFIRMED` status:\n\n```\nPUT https://api.rezdy.com/v1/bookings/RKM1ULT/?apiKey=69f708868ddc45eaa1f9b9fad1ddeba5\n```\n\n```\n{\n\t\"status\": \"CONFIRMED\", \n\t\"customer\": {\n    ...\t\n}\n```\n\n*Note: If a product `confirmMode` is not set as `AUTOCONFIRM` the resulting order status might not be `CONFIRMED`. An order can end up with a `PENDING_SUPPLIER` status. Another case is, if the used payment option requires customer to process a payment in a third party provider, such as PayPal. In such case the status will be `PENDING_CUSTOMER`* \n\nAlternatively, to free up the reserved availability, update a booking `RKM1ULT` to `CANCELLED` or `ABANDONED_CART` status, the later option will cause the order to be hidden from UI screens:\n\n```\nPUT https://api.rezdy.com/v1/bookings/RKM1ULT/?apiKey=69f708868ddc45eaa1f9b9fad1ddeba5\n```\n\n```\n{\n\t\"status\": \"CANCELLED\", \n\t\"customer\": {\n    ...\t\n}\n```\n\n## RezdyPay payment processing\n\nRezdyPay payment gateway uses Stripe as an underlying payment provider to process payments though Rezdy platform account, setting your Stripe account as a charge destination using Stripe Charge API. Therefore, you will need to implement an extra call directly to Stripe, before calling Rezdy Booking API. \n\n### Charge flow\n\nUse the following **2 calls booking flow:**\n\n**1. Request a Stripe card token**, by sending the customer’s credit card details directly from the customer's browser to Stripe.\n\nYou must use a client-side library ([Checkout](https://stripe.com/docs/payments/checkout), [Elements](https://stripe.com/docs/payments/elements), or [mobile libraries](https://stripe.com/docs/payments/accept-a-payment?platform=ios)) to perform this process, client-side. You must NOT use the Stripe API. Use Rezdy’s Stripe publishable key (see below) in your request, for the token to be generated on Rezdy’s account. The card is not charged at this stage.\n\nRezdy’s Stripe publishable keys are:\n\n```\nStaging environment: pk_test_51KW8A8ItvA6u4On8YM6AE95ytcqBr0LeRBEEFw4f5MDQPTDBWVt2TAWXhfynCn7NUVwaGc2eP431DNCkmfMaB0AF00firEVJ58  \nProduction environment: pk_live_51H4gSPHO6p5n6bFnuGRLb84FCiptIUAwmgYaBubvp5A09HujFx54ExvLkXOufEcqrHsaCWvnmZfO33efkIFVbpIv00PkoJDRDA  \n```\n\n*Staging environment keys are usable on api.rezdy-staging.com. Production environment key must be used on api.rezdy.com.*\n\n**2. Call [POST /bookings](#operation/createBooking) service**, but do not include any booking payments data. You must instead send a creditCard.cardToken parameter that is Stripe’s generated token (id field from Stripe’s API response). Rezdy will confirm the booking, consume the token by processing the payment and record payment on the booking object.\n\n```\n{    \n    ...\n    \"creditCard\": {\n        \"cardToken\": \"tok_1234zczx9xyzbkBzxcNoabcdef\"\n    }\n    ...\n}\n\n```\n\n## Supporting different booking Modes\n\nThere are 3 modes how a product tours can be scheduled in Rezdy, they are called booking modes. It's necessary to take into account the differences between them, for displaying a product availability and making a booking using public API.\n\nThese 3 booking modes are: \n\n1.  `NO_DATE` Do not ask for any date (I.e. open tickets valid 6 months from purchase date) \n2.  `DATE_ENQUIRY` Require a date but the customer can choose any. There's no availability check. \n3.  `INVENTORY` Require pre-populated availability (date+time) \n\n### NO_DATE\n\nIn case of the NO_DATE products, there is no need to specify booking date and time in a booking request. (However there won't be an error if the startTime or startTimeLocal is specified in a booking request, it just won't be used)\n\nWe generate a fake session for the NO_DATE products into `GET /availability` response, the session startTimeLocal will be midnight and there will be always 999 seats available:\n\n```\n\"startTimeLocal\": \"2016-07-01 00:00:00\",  \n\"seats\": 999,  \n``` \n\n### DATE_ENQUIRY\n\nFor the DATE_ENQUIRY products, the booking date and time is required, however there can be any booking date specified. For a booking time, it's a bit more tricky. Those products can be configured to accept `any time` or just `predefined` times. How to recognize, if `any time` is accepted? \n\nWe generate a session for DATE_ENQUIRY products into `GET /availability` response. If the product accept the `any time` booking, the session startTimeLocal will be a midnight - 00:00:00 time. Otherwise there will be a session for each predefined time.\n\nAvailability response - the DATE_ENQUIRY product, which accepts any time booking:\n\n``` \n\"startTimeLocal\": \"2016-06-01 00:00:00\",  \n\"seats\": 999,  \n``` \n\nAvailability response - the DATE_ENQUIRY product with predefined list of booking times (7:00 and 9:00 a.m.):\n\n``` \n{\n    \"startTimeLocal\": \"2016-05-31 07:00:00\",  \n    \"seats\": 999,  \n    ...\n},  \n{ \n    \"startTimeLocal\": \"2016-05-31 09:00:00\",  \n    \"seats\": 999,  \n    ...\n}\n``` \n\n### INVENTORY\n\nThis mode is used by most of the products. It means the availability is defined by scheduled sessions. The booking date and time have to match a session startTime.\n\n`GET /availability` response of INVENTORY mode products, will contain the list of scheduled sessions with a start time and seats available as the supplier scheduled:\n\n```   \n\"startTimeLocal\": \"2016-07-01 09:00:00\",  \n\"seats\": 20,  \n``` \n\n## Providing customer with pickups\n\nOnce a pickup is configured for a certain product, the product detail will contain a field pickupId. The Id value is not required for further use in other API calls (it's for the future purpose), for now on it just means the pickups are configured for this product.\n\nFor example:\n\n```\nhttps://api.rezdy-staging.com/v1/products/marketplace?apiKey=69f708868ddc45eaa1f9b9fad1ddeba5&search=PWQF1Y \n```\nRESPONSE:  \n```\n{  \n  \"requestStatus\": {  \n    \"success\": true,  \n    \"version\": \"v1\"  \n  },  \n  \"products\": [  \n    {  \n      \"productCode\": \"PWQF1Y\",  \n      \"pickupId\": 475,  \n...  \n```\n\nTo retrieve configured pickup for the product, with a list of all pickup location, call the service method below:  \n\n```\nhttps://api.rezdy-staging.com/v1/products/PWQF1Y/pickups?apiKey=69f708868ddc45eaa1f9b9fad1ddeba5\n```\nRESPONSE:  \n\n```\n{\n    \"requestStatus\": {\n        \"success\": true,\n        \"version\": \"v1\"\n    },\n    \"pickupLocations\": [\n        {\n            \"locationName\": \"Divers hotel\",\n            \"address\": \"Cape Byron, Byron Bay NSW, Australia\",\n            \"latitude\": -28.6473671,\n            \"longitude\": 153.601977,\n            \"minutesPrior\": 30,\n            \"additionalInstructions\": \"Please be ready 15 minute before the pickup time in the hotel lobby area.\"\n        },\n        {\n            \"locationName\": \"Seaside hostel\",\n            \"address\": \"Main Beach, Byron Bay NSW, Australia\",\n            \"latitude\": -28.6412831,\n            \"longitude\": 153.6166691,\n            \"minutesPrior\": 20,\n            \"additionalInstructions\": \"Please be ready 15 minute before the pickup time in front of the hostel.\"\n        }\n    ]\n}\n```  \n\nTo specify a pickup location for a booking, you just need to send one locationName field value of one of the locations from pickupLocations list.  \n\n```\nPOST https://api.rezdy-staging.com/v1/bookings?apiKey=69f708868ddc45eaa1f9b9fad1ddeba5\n```\n\nREQUEST:  \n\n```\n{  \n    \"items\":  \n    [  \n        {  \n            \"productCode\": \"PWQF1Y\",  \n            \"startTimeLocal\": \"2025-08-11 14:00:00\",  \n            \"quantities\":  \n            [  \n                {  \n                    \"optionLabel\": \"Adult\",  \n                    \"value\": \"1\"  \n                }  \n            ],  \n            \"pickupLocation\":  \n            {  \n                \"locationName\": \"Divers hotel\"  \n            }  \n        }  \n    ]\n    ... \n}  \n```\n\nSystem will store the pickup location, calculate pickup time and return the pickup instructions.  \n\nRESPONSE:  \n```\n{  \n  \"requestStatus\": {  \n    \"success\": true,  \n    \"version\": \"v1\"  \n  },  \n  \"booking\": {  \n    \"orderNumber\": \"R3MPR7Z\",  \n    ...  \n    \"items\": [  \n      {  \n        \"productName\": \"DEMO - One day SCUBA diving\",  \n        \"productCode\": \"PKVT0E\",  \n        \"startTime\": \"2016-07-11T04:00:00Z\",  \n        ....  \n        \"pickupLocation\": {  \n          \"locationName\": \"Maroubra Beach\",  \n          \"address\": \"Maroubra Beach, New South Wales, Australia\",  \n          \"pickupTime\": \"2016-07-11 13:05:00\",  \n          \"pickupInstructions\": \"In front of the Maroubra seal surfing club building.\\r\\nPlease be ready 15 minutes before pickup time.\"  \n        }  \n      }  \n    ],  \n    ....  \n```\n\nIt is also possible to specify a custom pickup location (should be discussed with the product supplier if this option is feasible):  \n\nREQUEST:\n```  \n{  \n    \"items\":  \n    [  \n        {  \n            \"productCode\": \"PWQF1Y\",  \n            \"startTimeLocal\": \"2025-08-11 14:00:00\",  \n            \"quantities\":  \n            [  \n                {  \n                    \"optionLabel\": \"Adult\",  \n                    \"value\": \"1\"  \n                }  \n            ],  \n            \"pickupLocation\":  \n            {  \n                \"locationName\": \"Hotel by the sea\"  \n            }  \n        }  \n    ]\n    ... \n}  \n```\n\nIn this case system stores the pickup location (naturally, it can't calculate the other fields like pickup time or address) and returns the custom pickup location instructions (if specified by the supplier).  \n\nRESPONSE:  \n\n```\n{  \n  \"requestStatus\": {  \n    \"success\": true,  \n    \"version\": \"v1\"  \n  },  \n  \"booking\": {  \n    \"orderNumber\": \"R3MPR7Z\",  \n    ...  \n    \"items\": [  \n      {  \n        \"productName\": \"DEMO - One day SCUBA diving\",  \n        \"productCode\": \"PKVT0E\",  \n        \"startTime\": \"2016-07-11T04:00:00Z\",  \n        ....  \n        \"pickupLocation\": {  \n            \"locationName\": \"Hotel by the sea\",\n            \"pickupInstructions\": \"Call us on +61123456 to arrange a pickup from a custom pickup request not listed among the pickup locations.\\r\\nPlease be ready 15 minute before the pickup time.\"  \n        }  \n      }  \n    ],  \n    .... \n```\n\n## Using Booking Fields\n\nPlease note that we are now enforcing validations on Booking Fields that are being sent through our API. \nNot only the mandatory fields, but also the format matching their type. \n\n### Booking Field Types\n\nEvery booking field has a certain type (see `bookingFields.fieldType`) and their value has to be formatted accordingly. \nAn exception is a string, when the booking field value is a free text. \n\nThe bookingFields.fieldType is one of:\n\n* String\n* Phone\n* List\n* Date\n* Boolean\n\nThe following booking field types need to have specific values.\n\n#### Boolean\nThis field must contain a boolean value. Accepted values are 1, 0, TRUE, FALSE, YES, NO (case insensitive matching) \n```\n{\n    \"label\": \"I agree to receive marketing emails\",\n    \"value\": \"true\"\n}\n```\n\n#### Date\nThis field must be a ISO-8601 date only format yyyy-MM-dd e.g. 1991-01-01\n```\n{\n    \"label\": \"Date of Birth\",\n    \"value\": \"1991-01-01\"\n}\n```\n\n#### Phone\nThis field must be in an international format +41 44 668 18 00, or E164 format +41446681800\n```\n{\n    \"label\": \"Mobile\",\n    \"value\": \"+61484123456\"\n}\n```\n\n#### List\n\nList types need to match one of the predefined values, common list types are the following:\n\n##### Country\nThis field must be in ISO 3166-1 alpha-2 codes format e.g. Australia -> au, United States -> us (case insensitive matching) \n```\n{\n    \"label\": \"Country\",\n    \"value\": \"AU\"\n}\n```\n\n##### Gender\nValid genders that are accepted through our API will be: MALE and FEMALE. (case insensitive matching) \n```\n{\n    \"label\": \"Gender\",\n    \"value\": \"MALE\"\n}\n```\n\n##### Title\nValid titles that are accepted through our API will be: MR, MS, MRS, MISS. (case insensitive matching) \n```\n{\n    \"label\": \"Title\",\n    \"value\": \"MISS\"\n}\n```\n\n## Suppressing customer notification emails\n\nYou are able to suppress Rezdy's notifications to customers when creating or cancelling a booking. You can then send emails & SMS from your own system instead.\n\nTo disable them, send the flag ```\"sendNotifications\" = \"false\"``` in the booking object in ```POST /bookings``` e.g.:\n\n```\n{\n\t\"customer\": {},\n\t\"items\": [],\n\t\"sendNotifications\": false\n}\n```\n\nThe flag is only used per request and is not stored.\n\nTo suppress notifications when cancelling a booking, you must set it as query parameter in the cancellation request:\n\n```\nDELETE /bookings/{orderNumber}?sendNotifications=false\n```\n\nIt is not possible to disable Rezdy's notifications to suppliers and agents. Only the customer notifications can be disabled.\n\nNote: Rezdy emails may include QR codes (if enabled by supplier), which suppliers can use to check-in  participants using our mobile apps, see ([QR Code Scanner ](https://support.rezdy.com/hc/en-us/articles/229332747-New-Release-10-Sep-2016-QR-Code-Scanner-and-Check-In-Improvements)). If you decide to use your own emails, the booking QR code should be included in the e-mails. The QR code is the Rezdy orderNumber.\n\n## API and Widgets integration\n\nThe Rezdy API does not expose internal product Ids. You can only use Rezdy-generated product codes, which always start with P, e.g. **PVGNQX**. However, booking forms use internal product Ids in booking page URLs and widgets, e.g. https://demo-booking-form.rezdy.com/124318/amazing-day-tour\n\nIf you need to load product data from the API and then link to the booking form for checkout, you can use the product codes. These 2 URLs will load the same page:\n\n[https://demo-booking-form.rezdy.com/124318/amazing-day-tour](https://demo-booking-form.rezdy.com/124318/amazing-day-tour)\n\n[https://demo-booking-form.rezdy.com/view/PVGNQX](https://demo-booking-form.rezdy.com/view/PVGNQX)\n\nYou can therefore use API product codes for booking form product pages, by using this url:\n\n```\nhttps://{alias}.rezdy.com/view/{productCode}\n```\n\n\n\n# Changelog\n\n## Released changes:\n\n### 2023-03-31\n\nAdded new [error codes](#section/Overview/Error-codes)\n\n### 2022-08-29\n\nIn order to support automated commissions payout via Stripe recipient only account, RezdyPay on staging environment has switched to a new US-based Stripe test account, and the Stripe publishable key for staging environment has changed. The key for production environment remains the same.\n\n```\nStaging environment: pk_test_51KW8A8ItvA6u4On8YM6AE95ytcqBr0LeRBEEFw4f5MDQPTDBWVt2TAWXhfynCn7NUVwaGc2eP431DNCkmfMaB0AF00firEVJ58\n```\n\n### 2021-08-30\n\nRezdy API specification split into agent and supplier portal. \n\n### 2021-01-03\n\nRezdyPay payment gateway has been upgraded and Rezdy uses a new Stripe platform account, to process automated payment bookings, or manual payment bookings with credit card charged though RezdyPay. As a result, new publishable keys need to be used to create a Stripe token.\n\n```\nStaging environment: pk_test_5nODbTMiGQCMOHg0Nt5LzQUV00CcWuIksX  \nProduction environment: pk_live_51H4gSPHO6p5n6bFnuGRLb84FCiptIUAwmgYaBubvp5A09HujFx54ExvLkXOufEcqrHsaCWvnmZfO33efkIFVbpIv00PkoJDRDA  \n```\n\nMore details are in [RezdyPay payments processing](#section/Typical-use-cases/RezdyPay-payment-processing) article\n\n### 2021-01-28\n* New product `isApiBookingSupported` field has been added to [Product](#operation/getProduct) response model.\n\nIt provides a convenient way to find out if a product booking is supported via API. Some product types or pricing types or their combinations are not supported in API. If you are planning to implement a booking flow via API, you should filter out the products, if the value of this field is set as `false`.\n\n### 2020-11-17\n* Order level barcodes are now supported, this will always be present as an element in the ``fields`` attribute of the [Booking](#tag/Bookings) model.\n```\n{\n    \"orderNumber\": \"R12345\",\n    ...\n    \"fields\": [\n        {\n            \"label\": \"Barcode\",\n            \"value\": \"6000125341\"\n        }\n    ]\n}\n```\n\n\n### 2020-11-02\n* POST /products/{productCode} and PUT /products/{productCode} can now create \"Hidden\" booking fields. Hidden booking fields will not be shown to the customer during the booking and are intended for internal use.\n* See [Create Product Request](#operation/createProduct) and [Update Product Request](#operation/updateProduct)\n\n### 2020-09-24\n\n* POST /products/{productCode} and PUT /products/{productCode} now has the ability to determine how to output barcodes when a booking is created for that product. This can be achieved by populating the ``barcodeOutputType`` field. Current values support are:\n    * ``PARTICIPANT``: Barcodes will be generated per participant when the product has been booked\n    * ``ORDER``: Barcodes will be generated only for the order when the product has been booked\n* See [ResponseProduct](#operation/getProduct) for more field description\n\n\n### 2020-08-24\n\n*  GET /bookings/{orderNumber} now returns ``barcodeType`` which specifies the format in which the booking barcodes are in. Rezdy supports ``\"TEXT\", \"QR_CODE\", \"CODE_39\", \"CODE_128\", \"EAN_8\", \"EAN_13\", \"ITF\"``.\n\n### 2020-06-16\n\n*  A booking reseller and a supplier can use PUT /bookings/{orderNumber} to update resellerReference and pickup locationName fields\n\n### 2020-04-02\n\n* Updating product price options are now possible through the PUT /products/{productCode} endpoint\n\n### 2020-02-10\n\n* RezdyConnect specification is no longer part of Public API, it has been upgraded and moved to [RezdyConnect (2.0.0)](https://developers.rezdy.com/rezdyconnect/index.html) portal\n\n### 2019-10-30\n\n* Product update service now supports internalCode update\n\n### 2019-09-30\n\n*   [Bookings search](#operation/searchBookings) by resellerReference field\n\n### 2019-08-28\n\n*   Agents are allowed to update resellerReference field in PUT /bookings/{orderNumber}\n\n### 2019-07-04\n* Added an article describing booking flow for [RezdyPay payments bookings](#section/Typical-use-cases/RezdyPay-payment-processing)\n\n### 2019-07-03\n* Api key can be send as HTTP header named apiKey instead of a query parameter e.g. ``apiKey: abcd123``\n\n### 2019-03-28\n* New fields have been exposed in Product responses including:\n    * qrCodeType\n    * waitListingEnabled\n* See [ResponseProduct](#operation/getProduct) for more field description\n\n### 2019-02-29\n\n*   We are introducing a new Staging environment and deprecating our Test environment api.rezdy-test.com.\n    We encourage usage of the new Staging environment which will be more stable than the old test environment and will\n    soon support data replication from our Production environment.\n\n    * Login: https://app.rezdy-staging.com\n    * API root URL: https://api.rezdy-staging.com\n    * API spec.: https://developers.rezdy-staging.com\n\n    See Environments section in [API overview](#section/Overview) for details\n\n### 2019-02-25\n*  Booking search service now supports filtering by date created\n   Please note that the createdSince parameter has been deprecated. Use minDateCreated to include bookings that were created after or on this date.\n   Use maxDateCreated to include bookings that were created before or on this date.\n*  Booking responses will now show Supplier Alias and Agent Alias.\n\n### 2018-11-29\n*\tBooking search service now includes bookings in PROCESSING status in the result list.\n     The PROCESSING status can be used in a supplier's API integration for 2 steps booking process, when a temporal reservation is created to hold availability.\n     The PROCESSING bookings are normally released after 60 minutes, if they are not confirmed.\n\n### 2018-11-28\n*\tNew Extra CRUD endpoint and service. A product now can have Extras added to it.\n\n### 2018-11-20\n\n*\tNew product configurations supported in the product create service, including custom booking field types and product fixed price.\n     See updated [Create products article](#operation/createProduct)\n\n### 2018-10-15\n\n* You should now use the same Stripe publishable key for all currencies, when generating tokens for automated payments.\n  We will accept old keys until at least until 30 November 2018, but please migrate to the new keys below:\n\n  TEST: pk_test_wGcSehTxQDTLoMRVl6Gv45zy  \n  PROD: pk_live_zKs28ywqmpH5K6Vz9moNGwiM\n\n### 2018-08-22\n\n*\tNew fields supported in product update service including confirmMode, confirmModeMinParticipants, minimumNoticeMinutes, durationMinutes\n\n### 2018-07-16\n\n*\tNew endpoints for [creating](#operation/createPickupList), [updating](#operation/updatePickupList) and [retrieving](#operation/getPickupList) pickup lists accompanied by a new [PickupList](#operation/getPickupList) model\n*\tAdded support for setting a pickup for a product through creating and updating products. To add a pickup list to a product simply:\n     *\t1. Create a pick up list\n     *\t2. Specify the pickupId in [ProductCreateRequest](#operation/createProduct) and [ProductUpdateRequest](#operation/updateProduct)\n*\tAll taxes and fees applied to a booking item will be now exposed through the totalItemTax field as part of the Booking \"items\" field.\n*\tAdded support for taxes/fees associated with a specific product. This field is available through [get product](#operation/getProduct)\n\n### 2018-06-21\n\n*\tValidation for booking field types such as Date of birth, Country, Gender, Title, Marketing are now enforced. Those values that do not comply will not be saved, but rather be appended to the booking comments.\n     See [the expected booking fields format](#operation/createBooking)\n\n### 2018-06-20\n\n*\tProduct cancellationPolicyDays field will now only be shown for marketplace products.\n*\tProduct cancellationPolicyDays for products that are shared between agents with AUTOMATED payments will still be shown\n\n### 2018-06-06\n\n*\tNew product tag filters for search marketplace products **(Check Agent API Portal)**. The product tags are part of the product model and can be retrieved via product search/get services.\n\n### 2018-01-29\n\n*   New endpoints for suppliers to manage [product rates](#tag/Rates)\n\n### 2017-12-14\n\n*   Product update service now supports updating product terms & conditions\n\n### 2017-11-15\n\n*   New field resellerReference added to booking object. It is designed to hold the booking number in an agent system, when it is different from the Rezdy booking number.\n\n### 2017-10-04\n\n*   New endpoints for suppliers to get and set [RezdyConnect configuration for a specific product](/rezdyconnect/index.html)\n*   Added _visible_ query parameter to GET /categories to filter public/private categories\n\n### 2017-10-01\n\n*   Test API endpoints have changed to be more consistent with our production environment:\n    *   old URL: https://api-test.rezdy.com\n    *   new URL: https://api.rezdy-test.com\n*   In accordance with Stripe's PCI Compliance requirements, Stripe tokens generated to process Automated payments must use a client-side library. You must use [Checkout](https://stripe.com/docs/payments/checkout), [Elements](https://stripe.com/docs/payments/elements), or [mobile libraries](https://stripe.com/docs/payments/accept-a-payment?platform=ios) to perform this process, client-side. Tokens generated via API will no longer be accepted.\n\n### 2017-09-29\n\n*   Allow PUT /bookings/{orderNumber} to update resellerComments field\n\n### 2017-01-19\n\n*   Added services to create and update products:\n    *   create a product: POST /products\n    *   delete a product: DELETE /products/{productCode}\n    *   add a product image: POST /products/{productCode}/images\n    *   delete a product image: DELETE /products/{productCode}/images/{imageId}\n\n    More details in this [article](#operation/createProduct).\n\n*   Added information about visible – optional product booking fields: \"visiblePerParticipant\": true|false, \"visiblePerBooking\": true|false to [BookingFields](#tag/Products) model\n*   Booking update, for manual payment bookings. Currently, these fields can be updated using the API:\n    *   customer – all customer data can be updated\n    *   \"per order\" booking fields – all values can be updated, added or deleted\n    *   \"per participant\" booking fields – all values can be updated, added or deleted\n    *   order status – only supplier’s for suppliers\n\n    More details in this [article](#operation/createProduct).\n\n### 2016-12-12\n\n*   Search products by languages\n\n### 2016-11-01\n\n*   Supplier’s promocodes and vouchers redemption supported in a booking request and quote calculation\n\n### 2016-10-17\n\n*   Added new field commissionIncludesExtras to [Product](#tag/Products) – Flag if agent receive commission from extras, or not\n\n### 2016-09-28\n\n*   Support for agent payments **(Check Agent API Portal)** for automated payments agents bookings – all payments in the booking request, will reduce the agent commission.\n*   Support for agent price override **(Check Agent API Portal)** for automated payments agents bookings – if the item amount is specified, the agent commission is adjusted by the difference between the catalog and agent price.\n\n### 2016-09-26\n\n*   Added product additionalInformation to [Product](#tag/Products) data model – Additional information for the product, that should be sent after a booking is completed (i.e. by email) to the customer. Useful for integration, when manual control of the entire customer booking experience is wanted, and the automatic confirmation e-mail from Rezdy had been suppressed.\n\n### 2016-09-13\n\n*   Automated payments agents bookings, now show Commission without Rezdy Fee in the response.\n\n### 2016-09-01\n\n*   sendNotifications field is now supported in DELETE /bookings/{orderNumber} too\n*   added new search parameter updatedSince to GET /bookings – Only load bookings updated after this time\n\n### 2016-08-22\n\n*   Added new fields to show links between Vouchers and Orders.\n    *   GET /bookings shows the voucher numbers + statuses, that were generated when the order was created and created gift card.\n    *   GET /vouchers shows the \"source\" order of the voucher.\n\n### 2016-06-22\n\n*   Removed the \"3 months max range\" rule when requesting availability.\n*   Default pagination limit increased to 100 instead of 30 in all search services using pagination\n\n### 2016-05-24\n\n*   [Pickups](#operation/getProductPickupLocations) support:\n    *   Added new service method GET /products/{productCode}/pickups to list pickup locations.\n    *   Added pickupLocation to [BookingItem](#operation/createBooking) data model, to specify the pickup location name when creating a booking and display pickup address, time and instructions in the booking response.\n*   Added product locationAddress to [Product](#tag/Products) data model.\n\n### 2016-04-27\n\n*   Added new fields value and valueType to [Voucher](#operation/getVoucher) data model.\n\n### 2016-04-04\n\n*   TRANSFER product types without return can be booked through the Public API\n\n### 2016-02-22\n\n*   Added new Company endpoint with service:\n    *   GET /companies/{companyAlias} – Retrieve Company details by it’s alias\n*   Added minimumNoticeMinutes field to [Product](#tag/Products) data model – Minimum book ahead interval for the product in minutes.\n\n### 2016-02-15\n\n*   Added new Resources endpoint with services:\n    *   GET /resources – Retrieve all supplier resources.\n    *   GET /resources/session –  Retrieve resources assigned to the session.\n    *   GET /resources/{resourceId}/sessions – Retrieves all sessions for a specified resource within the start/end datetime range.\n    *   PUT /resources/{resourceId}/session/{sessionId} –  Add a  resource to a session.\n    *   DELETE /resources/{resourceId}/session/{sessionId} – Removes a resource from a session.\n\n*   New service methods in Manifest endpoint:\n    *   PUT /manifest/checkinSession – Store Check-in / No show flag for everyone in a specified session.\n    *   PUT /manifest/checkinOrderSession – Place Check-in a / No show flag for the specified order item.\n    *   DELETE /manifest/checkinSession – Remove Check-in / No show flag from everyone in the whole session.\n    *   DELETE /manifest/checkinOrderSession – Remove Check-in / No show flag for the specified order item.\n\n*   Added duration fields to [Product](#tag/Products) data model\n*   Support of orderStatus field in supplier’s [Booking ](#operation/createBooking)request\n\n### 2016-02-01\n\n*   Added localized date/time fields: startTimeLocal and endTimeLocal can be used to search and display availability in the supplier’s timezone.\n*   Added new fields to [Product](#tag/Products) data model: dateCreated and dateUpdated. Also added updatedSince attribute to GET /products/marketplace **(Check Agent API Portal)** endpoint\n*   Added new fields to [Product](#tag/Products) data model when calling GET /products/marketplace **(Check Agent API Portal)** as an agent: cancellationPolicyDays. This is only used for Automated Payments (agentPaymentType = PAYOUTS)\n*   Added search by supplierAlias to GET /products/marketplace **(Check Agent API Portal)** endpoint\n*   Added automatic refund when canceling an Automated payments booking\n\n### 2015-11-23\n\n*   Added support for DATE_ENQUIRY and NO_DATE booking modes for /availability and /bookings calls. When calling /availability for these products, one session per day will always be returned.\n*   Added new fields to [Product](#tag/Products) data model:  confirmModeMinParticipants\n*   Added new fields to [Product](#tag/Products) data model when calling GET /products/marketplace **(Check Agent API Portal)** as an agent: agentPaymentType, maxCommissionPercent, maxCommissionNetRate\n\n### 2015-07-27 – Marketplace release\n\n*   The API service /products/partners has been deprecated and replaced by a new service /products/marketplace **(Check Agent API Portal)** with many more filters.\n*   Some constants were renamed, especially Order source PARTNERS to MARKETPLACE_PREF_RATE, and COMMUNITY to MARKETPLACE.\n\n### 2015-07-13\n\n*   Added support for multiple product codes to the [GET /availability](#operation/checkAvailability) endpoint. Use \"&productCode=P11111&productCode=P22222&productCode=P33333\" to request availability for multiple products in the same request\n\n### 2015-06-10\n\n*   Added images to Extras\n\n### 2015-04-20\n\n*   New endpoint to validate a booking and calculate totals before it’s created: [POST /bookings/quote](#operation/quoteBooking)\n*   Added support for Credit Card payments to the [POST /bookings](#operation/createBooking) endpoint\n*   Fixed incorrect min/max quantities for DOUBLE, TRIPLE and QUAD price options\n\n### 2015-03-30\n\n*   Fix an issue with FREE_SALE products. They now always return 999 seats and seats available\n*   Fix offset and limit not working for the [GET /categories/{id}/products](#operation/getCategoryProducts) endpoint\n*   Added support for Product codes in Rezdy-hosted booking forms. The following URLs now load the same page:\n    *   https://rezdydemo.rezdy.com/35867/demo-sydney-bike-tour\n    *   https://rezdydemo.rezdy.com/view/PVO39Z\n\n### 2015-03-16\n\n*   Fix an issue with mandatory fields required \"once per booking\".\n\n### 2015-03-02\n\n*   Added currency attribute to products\n\n### 2015-02-02\n\n*   Fix group price options. Use correct label and show min/max participant values for each group price.\n\n### 2015-01-19\n\n*   New Category endpoint to load categories and products within categories. 3 new services are available:\n    *   GET /categories\n    *   GET /categories/{categoryId}\n    *   GET /categories/{categoryId}/products\n\n### 2014-12-17\n\n*   Added new attributes to filter the [GET /bookings](#operation/getBooking) results. You can now filter by product, booked date, and only load new bookings created since a set date.\n\n##2014-12-01\n\n*   Added validation and fixed issues with product Extras when making a new booking\n\n### 2014-11-17\n\n*   Order source has been deprecated for new booking requests. Bookings created by API will now always have source=API. Availability will always be checked for API bookings and minimum bookahead rules will always be enforced. Mandatory fields will not be enforced for supplier bookings.\n*   You can now use Booking.sendNotifications (true/false, default true) to control if automated notifications should be sent to the customer or not when making a new booking through the API.\n*   New Availability endpoints for suppliers: Create/Delete/Update availability\n*   Added pagination to calls that return multiple items. Defaults to 30 results, max 100 per request\n\n### 2014-11-03\n\n*   Added timezone to Product resource (Product.timezone)\n*   Added supplier general terms and conditions to Product resource (Product.generalTerms)\n*   New Booking endpoint: DELETE /bookings/{orderNumber} will cancel a booking\n*   Updated documentation\n\n### 2014-07-15\n\n*   Added supplierId attribute to /products/partners to filter products by supplier\n*   Simplify price option and quantity mapping when making bookings\n*   Added confirmation mode to Product resource (Product.confirmMode)\n",
    "termsOfService": "https://www.rezdy.com/terms-of-use/",
    "version": "1.0.0",
    "x-logo": {
      "url": "logo.png",
      "href": "/../..",
      "altText": "Rezdy logo"
    }
  },
  "servers": [
    {
      "url": "https://api.rezdy.com",
      "description": "Rezdy API"
    },
    {
      "url": "https://api.rezdy-staging.com",
      "description": "Rezdy API Staging environment"
    }
  ],
  "tags": [
    {
      "name": "Bookings",
      "description": "Booking service to list, create and cancel bookings."
    },
    {
      "name": "Categories",
      "description": "Category service to retrieve category details and their products."
    },
    {
      "name": "Customers",
      "description": "Customer service to list, create and delete customers."
    },
    {
      "name": "Rates",
      "description": "Service to retrieve rate details and their products."
    },
    {
      "name": "Vouchers",
      "description": "Service to retrieve voucher details."
    }
  ],
  "paths": {
    "/v1/availability": {
      "get": {
        "tags": [
          "Availability",
          "agent",
          "supplier"
        ],
        "summary": "Search availability",
        "description": "This service returns availability information for a specific date range. The service response contains a list of sessions, including their availability and pricing details.<br>\n<p>Pricing in the session can be different than the pricing of the products, in a case of a dynamic pricing when a supplier overrides a price for a specific session or a ticket type.</p>\n<p>In case of multiple products sharing this session, a session will contain price overrides for all of the shared products. Therefore it is necessary to filer only the price options matching the chosen product code on the client side, when displaying available price options to a customer.</p>\n",
        "operationId": "checkAvailability",
        "parameters": [
          {
            "name": "productCode",
            "in": "query",
            "description": "Product code in format P12345. You can request multiple products `productCode=P11111&productCode=P22222&productCode=P33333`, which belong to a single supplier.",
            "required": true,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "example": "P12345"
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "Start time in `ISO 8601` format. It is required to have either startTime or startTimeLocal to define the start of the time window.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "2014-03-01T00:00:00Z"
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "End time in `ISO 8601` format. It is required to have either endTime or endTimeLocal to define the end of the time window.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "2014-03-01T00:00:00Z"
          },
          {
            "name": "startTimeLocal",
            "in": "query",
            "description": "Start time in supplier's local timezone, format is `yyyy-MM-dd HH:mm:ss`, for example `2014-03-01 00:00:00`. Local times are not supported when querying multiple products from different suppliers. It is required to have either startTime or startTimeLocal to define the start of the time window.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endTimeLocal",
            "in": "query",
            "description": "End time in supplier's local timezone, format is `yyyy-MM-dd HH:mm:ss`, for example `2014-04-01 00:00:00`. Local times are not supported when querying multiple products from different suppliers. It is required to have either endTime or endTimeLocal to define the end of the time window.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "minAvailability",
            "in": "query",
            "description": "only load availability for that quantity",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit how many results are returned per request. Maximum is 100, which is also the default, when not specified.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset of the first result to return. Default to 0.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSessionList"
                },
                "examples": {
                  "Product's `PWQF1Y` 2 days availability": {
                    "description": "Get 2 days of product `PWQF1Y` availability: `https://api.rezdy-staging.com/v1/availability?apiKey=69f708868ddc45eaa1f9b9fad1ddeba5&productCode=PWQF1Y&startTimeLocal=2025-10-01 00:00:00&endTimeLocal=2025-10-03 00:00:00`",
                    "value": {
                      "requestStatus": {
                        "success": true,
                        "version": "v1"
                      },
                      "sessions": [
                        {
                          "id": 2788078,
                          "productCode": "PWQF1Y",
                          "startTime": "2025-09-30T23:00:00Z",
                          "endTime": "2025-10-01T02:00:00Z",
                          "startTimeLocal": "2025-10-01 09:00:00",
                          "endTimeLocal": "2025-10-01 12:00:00",
                          "allDay": false,
                          "seats": 50,
                          "seatsAvailable": 50,
                          "priceOptions": [
                            {
                              "price": 250,
                              "label": "Adult",
                              "id": 929159,
                              "seatsUsed": 1,
                              "productCode": "PWQF1Y"
                            },
                            {
                              "price": 200,
                              "label": "Student",
                              "id": 929160,
                              "seatsUsed": 1,
                              "productCode": "PWQF1Y"
                            }
                          ]
                        },
                        {
                          "id": 2788381,
                          "productCode": "PWQF1Y",
                          "startTime": "2025-10-01T23:00:00Z",
                          "endTime": "2025-10-02T02:00:00Z",
                          "startTimeLocal": "2025-10-02 09:00:00",
                          "endTimeLocal": "2025-10-02 12:00:00",
                          "allDay": false,
                          "seats": 50,
                          "seatsAvailable": 50,
                          "priceOptions": [
                            {
                              "price": 250,
                              "label": "Adult",
                              "id": 929159,
                              "seatsUsed": 1,
                              "productCode": "PWQF1Y"
                            },
                            {
                              "price": 200,
                              "label": "Student",
                              "id": 929160,
                              "seatsUsed": 1,
                              "productCode": "PWQF1Y"
                            }
                          ]
                        }
                      ]
                    }
                  },
                  "Multiple products (`PWQF1Y`, `P00TNX`) 2 days availability": {
                    "description": "Get multiple products (`PWQF1Y`, `P00TNX`) 2 days availability: `https://api.rezdy-staging.com/v1/availability?apiKey=69f708868ddc45eaa1f9b9fad1ddeba5&productCode=P00TNX&productCode=PWQF1Y&startTime=2025-08-01T00:00:00%2B11:00&endTime=2025-09-01T00:00:00%2B11:00`",
                    "value": {
                      "requestStatus": {
                        "success": true,
                        "version": "v1"
                      },
                      "sessions": [
                        {
                          "productCode": "P00TNX",
                          "startTime": "2025-07-30T14:00:00Z",
                          "endTime": "2025-07-31T14:00:00Z",
                          "startTimeLocal": "2025-07-31 00:00:00",
                          "endTimeLocal": "2025-08-01 00:00:00",
                          "allDay": false,
                          "seats": 999,
                          "seatsAvailable": 0,
                          "priceOptions": [
                            {
                              "price": 30,
                              "label": "Adult",
                              "id": 929162,
                              "seatsUsed": 1,
                              "productCode": "P00TNX"
                            },
                            {
                              "price": 15,
                              "label": "Child",
                              "id": 929161,
                              "seatsUsed": 1,
                              "productCode": "P00TNX"
                            }
                          ]
                        },
                        {
                          "productCode": "P00TNX",
                          "startTime": "2025-07-31T14:00:00Z",
                          "endTime": "2025-08-01T14:00:00Z",
                          "startTimeLocal": "2025-08-01 00:00:00",
                          "endTimeLocal": "2025-08-02 00:00:00",
                          "allDay": false,
                          "seats": 999,
                          "seatsAvailable": 0,
                          "priceOptions": [
                            {
                              "price": 30,
                              "label": "Adult",
                              "id": 929162,
                              "seatsUsed": 1,
                              "productCode": "P00TNX"
                            },
                            {
                              "price": 15,
                              "label": "Child",
                              "id": 929161,
                              "seatsUsed": 1,
                              "productCode": "P00TNX"
                            }
                          ]
                        },
                        {
                          "productCode": "P00TNX",
                          "startTime": "2025-08-01T14:00:00Z",
                          "endTime": "2025-08-02T14:00:00Z",
                          "startTimeLocal": "2025-08-02 00:00:00",
                          "endTimeLocal": "2025-08-03 00:00:00",
                          "allDay": false,
                          "seats": 999,
                          "seatsAvailable": 0,
                          "priceOptions": [
                            {
                              "price": 30,
                              "label": "Adult",
                              "id": 929162,
                              "seatsUsed": 1,
                              "productCode": "P00TNX"
                            },
                            {
                              "price": 15,
                              "label": "Child",
                              "id": 929161,
                              "seatsUsed": 1,
                              "productCode": "P00TNX"
                            }
                          ]
                        },
                        {
                          "productCode": "P00TNX",
                          "startTime": "2025-08-02T14:00:00Z",
                          "endTime": "2025-08-03T14:00:00Z",
                          "startTimeLocal": "2025-08-03 00:00:00",
                          "endTimeLocal": "2025-08-04 00:00:00",
                          "allDay": false,
                          "seats": 999,
                          "seatsAvailable": 0,
                          "priceOptions": [
                            {
                              "price": 30,
                              "label": "Adult",
                              "id": 929162,
                              "seatsUsed": 1,
                              "productCode": "P00TNX"
                            },
                            {
                              "price": 15,
                              "label": "Child",
                              "id": 929161,
                              "seatsUsed": 1,
                              "productCode": "P00TNX"
                            }
                          ]
                        },
                        {
                          "productCode": "P00TNX",
                          "startTime": "2025-08-03T14:00:00Z",
                          "endTime": "2025-08-04T14:00:00Z",
                          "startTimeLocal": "2025-08-04 00:00:00",
                          "endTimeLocal": "2025-08-05 00:00:00",
                          "allDay": false,
                          "seats": 999,
                          "seatsAvailable": 0,
                          "priceOptions": [
                            {
                              "price": 30,
                              "label": "Adult",
                              "id": 929162,
                              "seatsUsed": 1,
                              "productCode": "P00TNX"
                            },
                            {
                              "price": 15,
                              "label": "Child",
                              "id": 929161,
                              "seatsUsed": 1,
                              "productCode": "P00TNX"
                            }
                          ]
                        },
                        {
                          "productCode": "P00TNX",
                          "startTime": "2025-08-04T14:00:00Z",
                          "endTime": "2025-08-05T14:00:00Z",
                          "startTimeLocal": "2025-08-05 00:00:00",
                          "endTimeLocal": "2025-08-06 00:00:00",
                          "allDay": false,
                          "seats": 999,
                          "seatsAvailable": 0,
                          "priceOptions": [
                            {
                              "price": 30,
                              "label": "Adult",
                              "id": 929162,
                              "seatsUsed": 1,
                              "productCode": "P00TNX"
                            },
                            {
                              "price": 15,
                              "label": "Child",
                              "id": 929161,
                              "seatsUsed": 1,
                              "productCode": "P00TNX"
                            }
                          ]
                        },
                        {
                          "productCode": "P00TNX",
                          "startTime": "2025-08-05T14:00:00Z",
                          "endTime": "2025-08-06T14:00:00Z",
                          "startTimeLocal": "2025-08-06 00:00:00",
                          "endTimeLocal": "2025-08-07 00:00:00",
                          "allDay": false,
                          "seats": 999,
                          "seatsAvailable": 0,
                          "priceOptions": [
                            {
                              "price": 30,
                              "label": "Adult",
                              "id": 929162,
                              "seatsUsed": 1,
                              "productCode": "P00TNX"
                            },
                            {
                              "price": 15,
                              "label": "Child",
                              "id": 929161,
                              "seatsUsed": 1,
                              "productCode": "P00TNX"
                            }
                          ]
                        },
                        {
                          "productCode": "P00TNX",
                          "startTime": "2025-08-06T14:00:00Z",
                          "endTime": "2025-08-07T14:00:00Z",
                          "startTimeLocal": "2025-08-07 00:00:00",
                          "endTimeLocal": "2025-08-08 00:00:00",
                          "allDay": false,
                          "seats": 999,
                          "seatsAvailable": 0,
                          "priceOptions": [
                            {
                              "price": 30,
                              "label": "Adult",
                              "id": 929162,
                              "seatsUsed": 1,
                              "productCode": "P00TNX"
                            },
                            {
                              "price": 15,
                              "label": "Child",
                              "id": 929161,
                              "seatsUsed": 1,
                              "productCode": "P00TNX"
                            }
                          ]
                        },
                        {
                          "productCode": "P00TNX",
                          "startTime": "2025-08-07T14:00:00Z",
                          "endTime": "2025-08-08T14:00:00Z",
                          "startTimeLocal": "2025-08-08 00:00:00",
                          "endTimeLocal": "2025-08-09 00:00:00",
                          "allDay": false,
                          "seats": 999,
                          "seatsAvailable": 0,
                          "priceOptions": [
                            {
                              "price": 30,
                              "label": "Adult",
                              "id": 929162,
                              "seatsUsed": 1,
                              "productCode": "P00TNX"
                            },
                            {
                              "price": 15,
                              "label": "Child",
                              "id": 929161,
                              "seatsUsed": 1,
                              "productCode": "P00TNX"
                            }
                          ]
                        },
                        {
                          "productCode": "P00TNX",
                          "startTime": "2025-08-08T14:00:00Z",
                          "endTime": "2025-08-09T14:00:00Z",
                          "startTimeLocal": "2025-08-09 00:00:00",
                          "endTimeLocal": "2025-08-10 00:00:00",
                          "allDay": false,
                          "seats": 999,
                          "seatsAvailable": 0,
                          "priceOptions": [
                            {
                              "price": 30,
                              "label": "Adult",
                              "id": 929162,
                              "seatsUsed": 1,
                              "productCode": "P00TNX"
                            },
                            {
                              "price": 15,
                              "label": "Child",
                              "id": 929161,
                              "seatsUsed": 1,
                              "productCode": "P00TNX"
                            }
                          ]
                        },
                        {
                          "productCode": "P00TNX",
                          "startTime": "2025-08-09T14:00:00Z",
                          "endTime": "2025-08-10T14:00:00Z",
                          "startTimeLocal": "2025-08-10 00:00:00",
                          "endTimeLocal": "2025-08-11 00:00:00",
                          "allDay": false,
                          "seats": 999,
                          "seatsAvailable": 0,
                          "priceOptions": [
                            {
                              "price": 30,
                              "label": "Adult",
                              "id": 929162,
                              "seatsUsed": 1,
                              "productCode": "P00TNX"
                            },
                            {
                              "price": 15,
                              "label": "Child",
                              "id": 929161,
                              "seatsUsed": 1,
                              "productCode": "P00TNX"
                            }
                          ]
                        },
                        {
                          "productCode": "P00TNX",
                          "startTime": "2025-08-10T14:00:00Z",
                          "endTime": "2025-08-11T14:00:00Z",
                          "startTimeLocal": "2025-08-11 00:00:00",
                          "endTimeLocal": "2025-08-12 00:00:00",
                          "allDay": false,
                          "seats": 999,
                          "seatsAvailable": 0,
                          "priceOptions": [
                            {
                              "price": 30,
                              "label": "Adult",
                              "id": 929162,
                              "seatsUsed": 1,
                              "productCode": "P00TNX"
                            },
                            {
                              "price": 15,
                              "label": "Child",
                              "id": 929161,
                              "seatsUsed": 1,
                              "productCode": "P00TNX"
                            }
                          ]
                        },
                        {
                          "productCode": "P00TNX",
                          "startTime": "2025-08-11T14:00:00Z",
                          "endTime": "2025-08-12T14:00:00Z",
                          "startTimeLocal": "2025-08-12 00:00:00",
                          "endTimeLocal": "2025-08-13 00:00:00",
                          "allDay": false,
                          "seats": 999,
                          "seatsAvailable": 0,
                          "priceOptions": [
                            {
                              "price": 30,
                              "label": "Adult",
                              "id": 929162,
                              "seatsUsed": 1,
                              "productCode": "P00TNX"
                            },
                            {
                              "price": 15,
                              "label": "Child",
                              "id": 929161,
                              "seatsUsed": 1,
                              "productCode": "P00TNX"
                            }
                          ]
                        },
                        {
                          "productCode": "P00TNX",
                          "startTime": "2025-08-12T14:00:00Z",
                          "endTime": "2025-08-13T14:00:00Z",
                          "startTimeLocal": "2025-08-13 00:00:00",
                          "endTimeLocal": "2025-08-14 00:00:00",
                          "allDay": false,
                          "seats": 999,
                          "seatsAvailable": 0,
                          "priceOptions": [
                            {
                              "price": 30,
                              "label": "Adult",
                              "id": 929162,
                              "seatsUsed": 1,
                              "productCode": "P00TNX"
                            },
                            {
                              "price": 15,
                              "label": "Child",
                              "id": 929161,
                              "seatsUsed": 1,
                              "productCode": "P00TNX"
                            }
                          ]
                        },
                        {
                          "productCode": "P00TNX",
                          "startTime": "2025-08-13T14:00:00Z",
                          "endTime": "2025-08-14T14:00:00Z",
                          "startTimeLocal": "2025-08-14 00:00:00",
                          "endTimeLocal": "2025-08-15 00:00:00",
                          "allDay": false,
                          "seats": 999,
                          "seatsAvailable": 0,
                          "priceOptions": [
                            {
                              "price": 30,
                              "label": "Adult",
                              "id": 929162,
                              "seatsUsed": 1,
                              "productCode": "P00TNX"
                            },
                            {
                              "price": 15,
                              "label": "Child",
                              "id": 929161,
                              "seatsUsed": 1,
                              "productCode": "P00TNX"
                            }
                          ]
                        },
                        {
                          "productCode": "P00TNX",
                          "startTime": "2025-08-14T14:00:00Z",
                          "endTime": "2025-08-15T14:00:00Z",
                          "startTimeLocal": "2025-08-15 00:00:00",
                          "endTimeLocal": "2025-08-16 00:00:00",
                          "allDay": false,
                          "seats": 999,
                          "seatsAvailable": 0,
                          "priceOptions": [
                            {
                              "price": 30,
                              "label": "Adult",
                              "id": 929162,
                              "seatsUsed": 1,
                              "productCode": "P00TNX"
                            },
                            {
                              "price": 15,
                              "label": "Child",
                              "id": 929161,
                              "seatsUsed": 1,
                              "productCode": "P00TNX"
                            }
                          ]
                        },
                        {
                          "productCode": "P00TNX",
                          "startTime": "2025-08-15T14:00:00Z",
                          "endTime": "2025-08-16T14:00:00Z",
                          "startTimeLocal": "2025-08-16 00:00:00",
                          "endTimeLocal": "2025-08-17 00:00:00",
                          "allDay": false,
                          "seats": 999,
                          "seatsAvailable": 0,
                          "priceOptions": [
                            {
                              "price": 30,
                              "label": "Adult",
                              "id": 929162,
                              "seatsUsed": 1,
                              "productCode": "P00TNX"
                            },
                            {
                              "price": 15,
                              "label": "Child",
                              "id": 929161,
                              "seatsUsed": 1,
                              "productCode": "P00TNX"
                            }
                          ]
                        },
                        {
                          "productCode": "P00TNX",
                          "startTime": "2025-08-16T14:00:00Z",
                          "endTime": "2025-08-17T14:00:00Z",
                          "startTimeLocal": "2025-08-17 00:00:00",
                          "endTimeLocal": "2025-08-18 00:00:00",
                          "allDay": false,
                          "seats": 999,
                          "seatsAvailable": 0,
                          "priceOptions": [
                            {
                              "price": 30,
                              "label": "Adult",
                              "id": 929162,
                              "seatsUsed": 1,
                              "productCode": "P00TNX"
                            },
                            {
                              "price": 15,
                              "label": "Child",
                              "id": 929161,
                              "seatsUsed": 1,
                              "productCode": "P00TNX"
                            }
                          ]
                        },
                        {
                          "productCode": "P00TNX",
                          "startTime": "2025-08-17T14:00:00Z",
                          "endTime": "2025-08-18T14:00:00Z",
                          "startTimeLocal": "2025-08-18 00:00:00",
                          "endTimeLocal": "2025-08-19 00:00:00",
                          "allDay": false,
                          "seats": 999,
                          "seatsAvailable": 0,
                          "priceOptions": [
                            {
                              "price": 30,
                              "label": "Adult",
                              "id": 929162,
                              "seatsUsed": 1,
                              "productCode": "P00TNX"
                            },
                            {
                              "price": 15,
                              "label": "Child",
                              "id": 929161,
                              "seatsUsed": 1,
                              "productCode": "P00TNX"
                            }
                          ]
                        },
                        {
                          "productCode": "P00TNX",
                          "startTime": "2025-08-18T14:00:00Z",
                          "endTime": "2025-08-19T14:00:00Z",
                          "startTimeLocal": "2025-08-19 00:00:00",
                          "endTimeLocal": "2025-08-20 00:00:00",
                          "allDay": false,
                          "seats": 999,
                          "seatsAvailable": 0,
                          "priceOptions": [
                            {
                              "price": 30,
                              "label": "Adult",
                              "id": 929162,
                              "seatsUsed": 1,
                              "productCode": "P00TNX"
                            },
                            {
                              "price": 15,
                              "label": "Child",
                              "id": 929161,
                              "seatsUsed": 1,
                              "productCode": "P00TNX"
                            }
                          ]
                        },
                        {
                          "productCode": "P00TNX",
                          "startTime": "2025-08-19T14:00:00Z",
                          "endTime": "2025-08-20T14:00:00Z",
                          "startTimeLocal": "2025-08-20 00:00:00",
                          "endTimeLocal": "2025-08-21 00:00:00",
                          "allDay": false,
                          "seats": 999,
                          "seatsAvailable": 0,
                          "priceOptions": [
                            {
                              "price": 30,
                              "label": "Adult",
                              "id": 929162,
                              "seatsUsed": 1,
                              "productCode": "P00TNX"
                            },
                            {
                              "price": 15,
                              "label": "Child",
                              "id": 929161,
                              "seatsUsed": 1,
                              "productCode": "P00TNX"
                            }
                          ]
                        },
                        {
                          "productCode": "P00TNX",
                          "startTime": "2025-08-20T14:00:00Z",
                          "endTime": "2025-08-21T14:00:00Z",
                          "startTimeLocal": "2025-08-21 00:00:00",
                          "endTimeLocal": "2025-08-22 00:00:00",
                          "allDay": false,
                          "seats": 999,
                          "seatsAvailable": 0,
                          "priceOptions": [
                            {
                              "price": 30,
                              "label": "Adult",
                              "id": 929162,
                              "seatsUsed": 1,
                              "productCode": "P00TNX"
                            },
                            {
                              "price": 15,
                              "label": "Child",
                              "id": 929161,
                              "seatsUsed": 1,
                              "productCode": "P00TNX"
                            }
                          ]
                        },
                        {
                          "productCode": "P00TNX",
                          "startTime": "2025-08-21T14:00:00Z",
                          "endTime": "2025-08-22T14:00:00Z",
                          "startTimeLocal": "2025-08-22 00:00:00",
                          "endTimeLocal": "2025-08-23 00:00:00",
                          "allDay": false,
                          "seats": 999,
                          "seatsAvailable": 0,
                          "priceOptions": [
                            {
                              "price": 30,
                              "label": "Adult",
                              "id": 929162,
                              "seatsUsed": 1,
                              "productCode": "P00TNX"
                            },
                            {
                              "price": 15,
                              "label": "Child",
                              "id": 929161,
                              "seatsUsed": 1,
                              "productCode": "P00TNX"
                            }
                          ]
                        },
                        {
                          "productCode": "P00TNX",
                          "startTime": "2025-08-22T14:00:00Z",
                          "endTime": "2025-08-23T14:00:00Z",
                          "startTimeLocal": "2025-08-23 00:00:00",
                          "endTimeLocal": "2025-08-24 00:00:00",
                          "allDay": false,
                          "seats": 999,
                          "seatsAvailable": 0,
                          "priceOptions": [
                            {
                              "price": 30,
                              "label": "Adult",
                              "id": 929162,
                              "seatsUsed": 1,
                              "productCode": "P00TNX"
                            },
                            {
                              "price": 15,
                              "label": "Child",
                              "id": 929161,
                              "seatsUsed": 1,
                              "productCode": "P00TNX"
                            }
                          ]
                        },
                        {
                          "productCode": "P00TNX",
                          "startTime": "2025-08-23T14:00:00Z",
                          "endTime": "2025-08-24T14:00:00Z",
                          "startTimeLocal": "2025-08-24 00:00:00",
                          "endTimeLocal": "2025-08-25 00:00:00",
                          "allDay": false,
                          "seats": 999,
                          "seatsAvailable": 0,
                          "priceOptions": [
                            {
                              "price": 30,
                              "label": "Adult",
                              "id": 929162,
                              "seatsUsed": 1,
                              "productCode": "P00TNX"
                            },
                            {
                              "price": 15,
                              "label": "Child",
                              "id": 929161,
                              "seatsUsed": 1,
                              "productCode": "P00TNX"
                            }
                          ]
                        },
                        {
                          "productCode": "P00TNX",
                          "startTime": "2025-08-24T14:00:00Z",
                          "endTime": "2025-08-25T14:00:00Z",
                          "startTimeLocal": "2025-08-25 00:00:00",
                          "endTimeLocal": "2025-08-26 00:00:00",
                          "allDay": false,
                          "seats": 999,
                          "seatsAvailable": 0,
                          "priceOptions": [
                            {
                              "price": 30,
                              "label": "Adult",
                              "id": 929162,
                              "seatsUsed": 1,
                              "productCode": "P00TNX"
                            },
                            {
                              "price": 15,
                              "label": "Child",
                              "id": 929161,
                              "seatsUsed": 1,
                              "productCode": "P00TNX"
                            }
                          ]
                        },
                        {
                          "productCode": "P00TNX",
                          "startTime": "2025-08-25T14:00:00Z",
                          "endTime": "2025-08-26T14:00:00Z",
                          "startTimeLocal": "2025-08-26 00:00:00",
                          "endTimeLocal": "2025-08-27 00:00:00",
                          "allDay": false,
                          "seats": 999,
                          "seatsAvailable": 0,
                          "priceOptions": [
                            {
                              "price": 30,
                              "label": "Adult",
                              "id": 929162,
                              "seatsUsed": 1,
                              "productCode": "P00TNX"
                            },
                            {
                              "price": 15,
                              "label": "Child",
                              "id": 929161,
                              "seatsUsed": 1,
                              "productCode": "P00TNX"
                            }
                          ]
                        },
                        {
                          "productCode": "P00TNX",
                          "startTime": "2025-08-26T14:00:00Z",
                          "endTime": "2025-08-27T14:00:00Z",
                          "startTimeLocal": "2025-08-27 00:00:00",
                          "endTimeLocal": "2025-08-28 00:00:00",
                          "allDay": false,
                          "seats": 999,
                          "seatsAvailable": 0,
                          "priceOptions": [
                            {
                              "price": 30,
                              "label": "Adult",
                              "id": 929162,
                              "seatsUsed": 1,
                              "productCode": "P00TNX"
                            },
                            {
                              "price": 15,
                              "label": "Child",
                              "id": 929161,
                              "seatsUsed": 1,
                              "productCode": "P00TNX"
                            }
                          ]
                        },
                        {
                          "productCode": "P00TNX",
                          "startTime": "2025-08-27T14:00:00Z",
                          "endTime": "2025-08-28T14:00:00Z",
                          "startTimeLocal": "2025-08-28 00:00:00",
                          "endTimeLocal": "2025-08-29 00:00:00",
                          "allDay": false,
                          "seats": 999,
                          "seatsAvailable": 0,
                          "priceOptions": [
                            {
                              "price": 30,
                              "label": "Adult",
                              "id": 929162,
                              "seatsUsed": 1,
                              "productCode": "P00TNX"
                            },
                            {
                              "price": 15,
                              "label": "Child",
                              "id": 929161,
                              "seatsUsed": 1,
                              "productCode": "P00TNX"
                            }
                          ]
                        },
                        {
                          "productCode": "P00TNX",
                          "startTime": "2025-08-28T14:00:00Z",
                          "endTime": "2025-08-29T14:00:00Z",
                          "startTimeLocal": "2025-08-29 00:00:00",
                          "endTimeLocal": "2025-08-30 00:00:00",
                          "allDay": false,
                          "seats": 999,
                          "seatsAvailable": 0,
                          "priceOptions": [
                            {
                              "price": 30,
                              "label": "Adult",
                              "id": 929162,
                              "seatsUsed": 1,
                              "productCode": "P00TNX"
                            },
                            {
                              "price": 15,
                              "label": "Child",
                              "id": 929161,
                              "seatsUsed": 1,
                              "productCode": "P00TNX"
                            }
                          ]
                        },
                        {
                          "productCode": "P00TNX",
                          "startTime": "2025-08-29T14:00:00Z",
                          "endTime": "2025-08-30T14:00:00Z",
                          "startTimeLocal": "2025-08-30 00:00:00",
                          "endTimeLocal": "2025-08-31 00:00:00",
                          "allDay": false,
                          "seats": 999,
                          "seatsAvailable": 0,
                          "priceOptions": [
                            {
                              "price": 30,
                              "label": "Adult",
                              "id": 929162,
                              "seatsUsed": 1,
                              "productCode": "P00TNX"
                            },
                            {
                              "price": 15,
                              "label": "Child",
                              "id": 929161,
                              "seatsUsed": 1,
                              "productCode": "P00TNX"
                            }
                          ]
                        },
                        {
                          "productCode": "P00TNX",
                          "startTime": "2025-08-30T14:00:00Z",
                          "endTime": "2025-08-31T14:00:00Z",
                          "startTimeLocal": "2025-08-31 00:00:00",
                          "endTimeLocal": "2025-09-01 00:00:00",
                          "allDay": false,
                          "seats": 999,
                          "seatsAvailable": 0,
                          "priceOptions": [
                            {
                              "price": 30,
                              "label": "Adult",
                              "id": 929162,
                              "seatsUsed": 1,
                              "productCode": "P00TNX"
                            },
                            {
                              "price": 15,
                              "label": "Child",
                              "id": 929161,
                              "seatsUsed": 1,
                              "productCode": "P00TNX"
                            }
                          ]
                        }
                      ]
                    }
                  },
                  "'No date' Product's `P00TNX` 2 days availability": {
                    "description": "Get 2 days of product `P00TNX`, with no date required scheduling mode. Service generates mocked-up sessions, daily from midnight local time spanning though the whole day with 999 seats always available: `https://api.rezdy-staging.com/v1/availability?apiKey=69f708868ddc45eaa1f9b9fad1ddeba5&productCode=P00TNX&startTimeLocal=2025-10-01 09:00:00&endTimeLocal=2025-10-02 09:00:00`",
                    "value": {
                      "requestStatus": {
                        "success": true,
                        "version": "v1"
                      },
                      "sessions": [
                        {
                          "productCode": "P00TNX",
                          "startTime": "2025-09-30T14:00:00Z",
                          "endTime": "2025-10-01T14:00:00Z",
                          "startTimeLocal": "2025-10-01 00:00:00",
                          "endTimeLocal": "2025-10-02 00:00:00",
                          "allDay": false,
                          "seats": 999,
                          "seatsAvailable": 999,
                          "priceOptions": [
                            {
                              "price": 30,
                              "label": "Adult",
                              "id": 929162,
                              "seatsUsed": 1,
                              "productCode": "P00TNX"
                            },
                            {
                              "price": 15,
                              "label": "Child",
                              "id": 929161,
                              "seatsUsed": 1,
                              "productCode": "P00TNX"
                            }
                          ]
                        },
                        {
                          "productCode": "P00TNX",
                          "startTime": "2025-10-01T14:00:00Z",
                          "endTime": "2025-10-02T14:00:00Z",
                          "startTimeLocal": "2025-10-02 00:00:00",
                          "endTimeLocal": "2025-10-03 00:00:00",
                          "allDay": false,
                          "seats": 999,
                          "seatsAvailable": 999,
                          "priceOptions": [
                            {
                              "price": 30,
                              "label": "Adult",
                              "id": 929162,
                              "seatsUsed": 1,
                              "productCode": "P00TNX"
                            },
                            {
                              "price": 15,
                              "label": "Child",
                              "id": 929161,
                              "seatsUsed": 1,
                              "productCode": "P00TNX"
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Availability",
          "supplier"
        ],
        "summary": "Create availability",
        "description": "Create a new session - creates availability for a specific startTime. Sessions can be created only for INVENTORY mode\nproducts.<br>\nThe endTime, if not specified, will be calculated based on selected product default duration, and the current product\nprice options will be used (if not specified). Does not support resources yet<br>\n<p>Response is the newly created Session</p>",
        "operationId": "createAvailability",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SessionCreateRequest"
              },
              "examples": {
                "create a session": {
                  "description": "create a session",
                  "value": {
                    "productCode": "PWQF1Y",
                    "startTimeLocal": "2026-11-01 14:00:00",
                    "seats": 10,
                    "priceOptions": [
                      {
                        "price": 199,
                        "label": "Adult"
                      }
                    ]
                  }
                },
                "create a whole day session": {
                  "description": "create a whole day session",
                  "value": {
                    "productCode": "PWQF1Y",
                    "startTimeLocal": "2026-11-01 00:00:00",
                    "seats": 10,
                    "allDay": true,
                    "priceOptions": [
                      {
                        "price": 199,
                        "label": "Adult"
                      }
                    ]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "newly created Session",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSession"
                }
              }
            }
          }
        }
      }
    },
    "/v1/availability/batch": {
      "post": {
        "tags": [
          "Availability",
          "supplier"
        ],
        "summary": "Update availability batch",
        "description": "Batch Update availability for a specific product and time period.  \nThis will update availability for all the sessions that start in that time range. <br>\nProduct code is optional, all sessions for all products will be updated if it is empty.\nYou can use this service to blackout periods (I.e. set availability to 0 for a full day).\n\nMaximum range is one week.\n\nThis can only update sessions from products with InventoryMode = SESSION_SEATS. \n```\n{ \n    startTime: 2014-11-11T00:00:00Z, \n    endTime: 2014-11-11T23:59:59Z, \n    productCode: P123456, \n    seatsAvailable: 0 \n} \n```\nOR \n```\n{ \n    startTime: 2014-11-11T00:00:00Z, \n    endTime: 2014-11-11T23:59:59Z, \n    productCode: P123456, \n    seats: 30 \n} \n```\nOR \n```\n{ \n    startTime: 2014-11-11T00:00:00Z, \n    endTime: 2014-11-11T23:59:59Z, \n    productCode: P123456, \n    priceOptions: [ \n       { \n         price: 90, \n         label: Adult \n       } \n     ] \n} \n```\n \nIf you send `seatsAvailable`, sessions will be updated for the current availability to become this number. <br>\n\nIf you send `seats`, the total seats capacity of sessions will be updated, regardless of how many are already booked. <br>\n\nIf you send both, only `seatsAvailable` will be used. <br>\nIf you send priceOptions, they will override the default price options of the existing session.\n",
        "operationId": "batchUpdateAvailability",
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/SessionUpdateBatchRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SessionUpdateBatchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "List of updated sessions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSessionList"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSessionList"
                }
              }
            }
          }
        }
      }
    },
    "/v1/availability/product/{productCode}/startTimeLocal/{startTimeLocal}": {
      "put": {
        "tags": [
          "Availability",
          "supplier"
        ],
        "summary": "Update availability",
        "description": "Update availability a session starting at a specific local date time",
        "operationId": "updateAvailabilityStartingAt",
        "parameters": [
          {
            "name": "startTimeLocal",
            "in": "path",
            "description": "Session to update local start time",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productCode",
            "in": "path",
            "description": "Product session",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SessionUpdateRequest"
              },
              "examples": {
                "update seats available": {
                  "description": "update seats available",
                  "value": {
                    "seatsAvailable": 5
                  }
                },
                "update total seats": {
                  "description": "update total seats",
                  "value": {
                    "seats": 5
                  }
                },
                "update session price": {
                  "description": "update session price",
                  "value": {
                    "priceOptions": [
                      {
                        "price": 149,
                        "label": "Adult"
                      }
                    ]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Updated session",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSession"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSession"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Availability",
          "supplier"
        ],
        "summary": "Delete availability",
        "description": "Delete a single session starting at a specific local date time",
        "operationId": "deleteSessionStartingAt",
        "parameters": [
          {
            "name": "startTimeLocal",
            "in": "path",
            "description": "Session to delete local start time",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productCode",
            "in": "path",
            "description": "Product session",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Request status",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseNoData"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseNoData"
                }
              }
            }
          }
        }
      }
    },
    "/v1/bookings": {
      "get": {
        "tags": [
          "agent",
          "supplier",
          "Bookings"
        ],
        "summary": "Search bookings",
        "description": "Search bookings in your account",
        "operationId": "searchBookings",
        "parameters": [
          {
            "name": "orderStatus",
            "in": "query",
            "description": "Order status to filter results",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "PROCESSING",
                "NEW",
                "ON_HOLD",
                "PENDING_SUPPLIER",
                "PENDING_CUSTOMER",
                "CONFIRMED",
                "CANCELLED",
                "ABANDONED_CART"
              ]
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "String to search for. It will be searched in Order number, Customer name, Agent code and payment transaction codes (I.e. voucher Code).",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productCode",
            "in": "query",
            "description": "Product code, to only load bookings for a specific product. Multiple values allowed: &productCode=P11111&productCode=P22222",
            "required": false,
            "schema": {
              "uniqueItems": true,
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "example": "P12345"
          },
          {
            "name": "minTourStartTime",
            "in": "query",
            "description": "Only load bookings with a booked time that starts on or after this time. This is not the booking creation date, it is the booked date. `ISO 8601` format",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "2014-03-01T00:00:00Z"
          },
          {
            "name": "maxTourStartTime",
            "in": "query",
            "description": "Only load bookings with a booked time that starts before or on this time. This is not the booking creation date, it is the booked date. `ISO 8601` format",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "2014-03-01T00:00:00Z"
          },
          {
            "name": "updatedSince",
            "in": "query",
            "description": "Only load bookings updated after this time. `ISO 8601` format. When an order is created, the dateCreated field is set to the current date and the dateUpdated field is empty. <br/>Thus using updatedSince will return results of orders that have been updated since the specified date/time, but will not include orders that have been created and not updated.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "2014-03-01T00:00:00Z"
          },
          {
            "name": "minDateCreated",
            "in": "query",
            "description": "Only load bookings created on or after this date, whether they have been updated or not. `ISO 8601` format",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "2014-03-01T00:00:00Z"
          },
          {
            "name": "maxDateCreated",
            "in": "query",
            "description": "Only load bookings created on or before this date, whether they have been updated or not. `ISO 8601` format.",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "2014-03-01T00:00:00Z"
          },
          {
            "name": "resellerReference",
            "in": "query",
            "description": "Only load bookings with specified resellerReference",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "How many results are returned per request. Maximum is 100, which also a default, when not specified.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset of the first result to return.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBookingList"
                },
                "examples": {
                  "Search confirmed bookings": {
                    "description": "Search confirmed bookings: `https://api.rezdy-staging.com/v1/bookings?apiKey=69f708868ddc45eaa1f9b9fad1ddeba5&orderStatus=CONFIRMED`",
                    "value": {
                      "requestStatus": {
                        "success": true,
                        "version": "v1"
                      },
                      "bookings": [
                        {
                          "orderNumber": "RX1N6HC",
                          "status": "CONFIRMED",
                          "supplierId": 13398,
                          "supplierName": "API specification demo supplier (DO NOT EDIT)",
                          "supplierAlias": "apispecificationdemosupplierdonotedit",
                          "resellerId": 13399,
                          "resellerName": "API specification demo agent (DO NOT EDIT)",
                          "resellerAlias": "apispecificationdemoagentdonotedit",
                          "customer": {
                            "id": 29650,
                            "firstName": "Rick",
                            "lastName": "Sanchez",
                            "name": "Rick Sanchez",
                            "phone": "+61484123456"
                          },
                          "items": [
                            {
                              "productName": "Double dive with sharks",
                              "productCode": "PWQF1Y",
                              "startTime": "2025-09-04T23:00:00Z",
                              "endTime": "2025-09-05T02:00:00Z",
                              "startTimeLocal": "2025-09-05 09:00:00",
                              "endTimeLocal": "2025-09-05 12:00:00",
                              "quantities": [
                                {
                                  "optionLabel": "Adult",
                                  "optionPrice": 250,
                                  "value": 1
                                }
                              ],
                              "totalQuantity": 1,
                              "amount": 250,
                              "extras": [],
                              "participants": [
                                {
                                  "fields": [
                                    {
                                      "label": "First Name",
                                      "value": "Rick"
                                    },
                                    {
                                      "label": "Last Name",
                                      "value": "Sanchez"
                                    },
                                    {
                                      "label": "Certification level"
                                    },
                                    {
                                      "label": "Certification number"
                                    },
                                    {
                                      "label": "Certification agency"
                                    }
                                  ]
                                }
                              ],
                              "subtotal": 250,
                              "pickupLocation": {
                                "locationName": "Hotel by the sea",
                                "pickupInstructions": "Call us on +61123456 to arrange a pickup from a custom pickup request not listed among the pickup locations.\r\nPlease be ready 15 minute before the pickup time."
                              }
                            }
                          ],
                          "totalAmount": 250,
                          "totalCurrency": "AUD",
                          "totalPaid": 250,
                          "totalDue": 0,
                          "dateCreated": "2025-09-03T00:00:04Z",
                          "dateConfirmed": "2025-09-03T00:00:04Z",
                          "datePaid": "2025-09-03T00:00:04Z",
                          "payments": [
                            {
                              "type": "CASH",
                              "amount": 250,
                              "currency": "AUD",
                              "date": "2025-09-03T00:00:04Z",
                              "label": "Paid in cash to API specification demo company",
                              "recipient": "RESELLER"
                            }
                          ],
                          "fields": [
                            {
                              "label": "Barcode",
                              "value": "RX1N6HC"
                            }
                          ],
                          "source": "MARKETPLACE_PREF_RATE",
                          "resellerSource": "API",
                          "sourceChannel": "APISPECIFICATIONDEMOAGENTDONOTEDIT",
                          "commission": 25,
                          "vouchers": [],
                          "barcodeType": "QR_CODE"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "agent",
          "supplier",
          "Bookings"
        ],
        "summary": "Create booking",
        "description": "Create a new booking. Many of payload fields are not required and will be calculated if not specified. Please check the example request payloads for different booking scenarios.",
        "operationId": "createBooking",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Booking create"
              },
              "examples": {
                "Create booking all features supplier": {
                  "description": "Example of creating a booking with API features including pickup, extras, order and participant level booking fields, comments, discount coupon, participant level barcodes",
                  "value": {
                    "comments": "Here come comments that are visible to you, but not to customers",
                    "customer": {
                      "firstName": "Rick",
                      "lastName": "Sanchez",
                      "phone": "+61484123456",
                      "email": "ricksanchez@test.com"
                    },
                    "items": [
                      {
                        "productCode": "PWQF1Y",
                        "startTimeLocal": "2025-10-01 09:00:00",
                        "quantities": [
                          {
                            "optionLabel": "Adult",
                            "value": 2
                          }
                        ],
                        "extras": [
                          {
                            "name": "Underwater camera rental",
                            "quantity": 1
                          }
                        ],
                        "participants": [
                          {
                            "fields": [
                              {
                                "label": "First Name",
                                "value": "Rick"
                              },
                              {
                                "label": "Last Name",
                                "value": "Sanchez"
                              },
                              {
                                "label": "Certification level",
                                "value": "Open Water"
                              },
                              {
                                "label": "Certification number",
                                "value": "123456798"
                              },
                              {
                                "label": "Certification agency",
                                "value": "PADI"
                              },
                              {
                                "label": "Barcode",
                                "value": "123"
                              }
                            ]
                          },
                          {
                            "fields": [
                              {
                                "label": "First Name",
                                "value": "Morty"
                              },
                              {
                                "label": "Last Name",
                                "value": "Smith"
                              },
                              {
                                "label": "Certification level",
                                "value": "Rescue Diver"
                              },
                              {
                                "label": "Certification number",
                                "value": "111222333"
                              },
                              {
                                "label": "Certification agency",
                                "value": "SDI"
                              },
                              {
                                "label": "Barcode",
                                "value": "456"
                              }
                            ]
                          }
                        ]
                      }
                    ],
                    "fields": [
                      {
                        "label": "Special Requirements",
                        "value": "Gluten free lunch for Morty"
                      }
                    ],
                    "pickupLocation": {
                      "locationName": "Divers hotel"
                    },
                    "payments": [
                      {
                        "amount": 515,
                        "type": "CASH",
                        "label": "Paid in cash to API specification demo"
                      }
                    ]
                  },
                  "x-tag": "supplier"
                },
                "Manual payment booking, cash payment": {
                  "description": "Example of creating a manual payment booking with minimalistic payload",
                  "value": {
                    "customer": {
                      "firstName": "Rick",
                      "lastName": "Sanchez",
                      "phone": "+61484123456"
                    },
                    "items": [
                      {
                        "productCode": "PWQF1Y",
                        "startTimeLocal": "2025-10-01 09:00:00",
                        "quantities": [
                          {
                            "optionLabel": "Adult",
                            "value": 1
                          }
                        ]
                      }
                    ],
                    "payments": [
                      {
                        "amount": 250,
                        "type": "CASH",
                        "label": "Paid in cash to API specification demo company"
                      }
                    ]
                  }
                },
                "Manual payment booking, RezdyPay charge": {
                  "description": "Manual payment booking with payment charged using RezdyPay payment gateway",
                  "value": {
                    "customer": {
                      "firstName": "Rick",
                      "lastName": "Sanchez",
                      "phone": "+61484123456"
                    },
                    "items": [
                      {
                        "productCode": "PWQF1Y",
                        "startTimeLocal": "2025-10-01 09:00:00",
                        "quantities": [
                          {
                            "optionLabel": "Adult",
                            "value": 1
                          }
                        ]
                      }
                    ],
                    "creditCard": {
                      "cardToken": "tok_123QWERTYUIOPasdfghjkl"
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Created booking",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBooking"
                },
                "examples": {
                  "Create booking all features supplier": {
                    "description": "Example of creating a booking with API features including pickup, extras, order and participant level booking fields, comments, discount coupon, participant level barcodes",
                    "value": {
                      "requestStatus": {
                        "success": true,
                        "version": "v1"
                      },
                      "booking": {
                        "orderNumber": "RSQ6K2F",
                        "status": "CONFIRMED",
                        "supplierId": 13398,
                        "supplierName": "API specification demo supplier (DO NOT EDIT)",
                        "supplierAlias": "apispecificationdemosupplierdonotedit",
                        "customer": {
                          "id": 29769,
                          "firstName": "Rick",
                          "lastName": "Sanchez",
                          "name": "Rick Sanchez",
                          "email": "ricksanchez@test.com",
                          "phone": "+61484123456"
                        },
                        "items": [
                          {
                            "productName": "Double dive with sharks",
                            "productCode": "PWQF1Y",
                            "startTime": "2025-09-30T23:00:00Z",
                            "endTime": "2025-10-01T02:00:00Z",
                            "startTimeLocal": "2025-10-01 09:00:00",
                            "endTimeLocal": "2025-10-01 12:00:00",
                            "quantities": [
                              {
                                "optionLabel": "Adult",
                                "optionPrice": 250,
                                "value": 2
                              }
                            ],
                            "totalQuantity": 2,
                            "amount": 500,
                            "extras": [
                              {
                                "name": "Underwater camera rental",
                                "price": 15,
                                "extraPriceType": "ANY",
                                "quantity": 1
                              }
                            ],
                            "participants": [
                              {
                                "fields": [
                                  {
                                    "label": "First Name",
                                    "value": "Rick"
                                  },
                                  {
                                    "label": "Last Name",
                                    "value": "Sanchez"
                                  },
                                  {
                                    "label": "Barcode",
                                    "value": "RSQ6K2F*79309"
                                  },
                                  {
                                    "label": "Certification level",
                                    "value": "Open Water"
                                  },
                                  {
                                    "label": "Certification number",
                                    "value": "123456798"
                                  },
                                  {
                                    "label": "Certification agency",
                                    "value": "PADI"
                                  },
                                  {
                                    "label": "Barcode",
                                    "value": "123"
                                  }
                                ]
                              },
                              {
                                "fields": [
                                  {
                                    "label": "First Name",
                                    "value": "Morty"
                                  },
                                  {
                                    "label": "Last Name",
                                    "value": "Smith"
                                  },
                                  {
                                    "label": "Barcode",
                                    "value": "RSQ6K2F*79308"
                                  },
                                  {
                                    "label": "Certification level",
                                    "value": "Rescue Diver"
                                  },
                                  {
                                    "label": "Certification number",
                                    "value": "111222333"
                                  },
                                  {
                                    "label": "Certification agency",
                                    "value": "SDI"
                                  },
                                  {
                                    "label": "Barcode",
                                    "value": "456"
                                  }
                                ]
                              }
                            ],
                            "subtotal": 515,
                            "pickupLocation": {
                              "pickupInstructions": "Call us on +61123456 to arrange a pickup from a custom pickup request not listed among the pickup locations.\r\nPlease be ready 15 minute before the pickup time."
                            }
                          }
                        ],
                        "totalAmount": 515,
                        "totalCurrency": "AUD",
                        "totalPaid": 515,
                        "totalDue": 0,
                        "dateCreated": "2021-09-20T04:56:34Z",
                        "dateConfirmed": "2021-09-20T04:56:33.562Z",
                        "datePaid": "2021-09-20T04:56:33.562Z",
                        "comments": "Here come comments that are visible to you, but not to customers",
                        "payments": [
                          {
                            "type": "CASH",
                            "amount": 515,
                            "currency": "AUD",
                            "date": "2021-09-20T04:56:33.566Z",
                            "label": "Paid in cash to API specification demo",
                            "recipient": "SUPPLIER"
                          }
                        ],
                        "fields": [
                          {
                            "label": "Barcode",
                            "value": "RSQ6K2F"
                          },
                          {
                            "label": "Special Requirements",
                            "value": "Gluten free lunch for Morty"
                          }
                        ],
                        "source": "API",
                        "vouchers": [],
                        "barcodeType": "QR_CODE"
                      }
                    },
                    "x-tag": "supplier"
                  },
                  "Manual payment booking, cash payment": {
                    "description": "Example of creating a manual payment booking with minimalistic payload",
                    "value": {
                      "requestStatus": {
                        "success": true,
                        "version": "v1"
                      },
                      "booking": {
                        "orderNumber": "RKM1ULT",
                        "status": "CONFIRMED",
                        "supplierId": 13398,
                        "supplierName": "API specification demo supplier (DO NOT EDIT)",
                        "supplierAlias": "apispecificationdemosupplierdonotedit",
                        "resellerId": 13399,
                        "resellerName": "API specification demo agent (DO NOT EDIT)",
                        "resellerAlias": "apispecificationdemoagentdonotedit",
                        "customer": {
                          "id": 29692,
                          "firstName": "Rick",
                          "lastName": "Sanchez",
                          "name": "Rick Sanchez",
                          "phone": "+61484123456"
                        },
                        "items": [
                          {
                            "productName": "Double dive with sharks",
                            "productCode": "PWQF1Y",
                            "startTime": "2025-09-30T23:00:00Z",
                            "endTime": "2025-10-01T02:00:00Z",
                            "startTimeLocal": "2025-10-01 09:00:00",
                            "endTimeLocal": "2025-10-01 12:00:00",
                            "quantities": [
                              {
                                "optionLabel": "Adult",
                                "optionPrice": 250,
                                "value": 1
                              }
                            ],
                            "totalQuantity": 1,
                            "amount": 250,
                            "extras": [],
                            "participants": [
                              {
                                "fields": [
                                  {
                                    "label": "First Name",
                                    "value": "Rick"
                                  },
                                  {
                                    "label": "Last Name",
                                    "value": "Sanchez"
                                  },
                                  {
                                    "label": "Certification level"
                                  },
                                  {
                                    "label": "Certification number"
                                  },
                                  {
                                    "label": "Certification agency"
                                  }
                                ]
                              }
                            ],
                            "subtotal": 250
                          }
                        ],
                        "totalAmount": 250,
                        "totalCurrency": "AUD",
                        "totalPaid": 250,
                        "totalDue": 0,
                        "dateCreated": "2025-09-09T02:14:12Z",
                        "dateConfirmed": "2025-09-09T02:14:12.094Z",
                        "datePaid": "2025-09-09T02:14:12.091Z",
                        "payments": [
                          {
                            "type": "CASH",
                            "amount": 250,
                            "currency": "AUD",
                            "date": "2025-09-09T02:14:12.099Z",
                            "label": "Paid in cash to API specification demo company",
                            "recipient": "RESELLER"
                          }
                        ],
                        "fields": [
                          {
                            "label": "Barcode",
                            "value": "RKM1ULT"
                          }
                        ],
                        "source": "MARKETPLACE_PREF_RATE",
                        "resellerSource": "API",
                        "sourceChannel": "APISPECIFICATIONDEMOAGENTDONOTEDIT",
                        "commission": 25,
                        "vouchers": [],
                        "barcodeType": "QR_CODE"
                      }
                    }
                  },
                  "Manual payment booking, RezdyPay charge": {
                    "description": "Manual payment booking with payment charged using RezdyPay payment gateway",
                    "value": {
                      "requestStatus": {
                        "success": true,
                        "version": "v1"
                      },
                      "booking": {
                        "orderNumber": "RGM7VN1",
                        "status": "CONFIRMED",
                        "supplierId": 13398,
                        "supplierName": "API specification demo supplier (DO NOT EDIT)",
                        "supplierAlias": "apispecificationdemosupplierdonotedit",
                        "resellerId": 13399,
                        "resellerName": "API specification demo agent (DO NOT EDIT)",
                        "resellerAlias": "apispecificationdemoagentdonotedit",
                        "customer": {
                          "id": 29771,
                          "firstName": "Rick",
                          "lastName": "Sanchez",
                          "name": "Rick Sanchez",
                          "phone": "+61484123456"
                        },
                        "items": [
                          {
                            "productName": "Double dive with sharks",
                            "productCode": "PWQF1Y",
                            "startTime": "2025-09-30T23:00:00Z",
                            "endTime": "2025-10-01T02:00:00Z",
                            "startTimeLocal": "2025-10-01 09:00:00",
                            "endTimeLocal": "2025-10-01 12:00:00",
                            "quantities": [
                              {
                                "optionLabel": "Adult",
                                "optionPrice": 250,
                                "value": 1
                              }
                            ],
                            "totalQuantity": 1,
                            "amount": 250,
                            "extras": [],
                            "participants": [
                              {
                                "fields": [
                                  {
                                    "label": "First Name",
                                    "value": "Rick"
                                  },
                                  {
                                    "label": "Last Name",
                                    "value": "Sanchez"
                                  },
                                  {
                                    "label": "Certification level"
                                  },
                                  {
                                    "label": "Certification number"
                                  },
                                  {
                                    "label": "Certification agency"
                                  }
                                ]
                              }
                            ],
                            "subtotal": 250,
                            "pickupLocation": {
                              "pickupInstructions": "Call us on +61123456 to arrange a pickup from a custom pickup request not listed among the pickup locations.\r\nPlease be ready 15 minute before the pickup time."
                            }
                          }
                        ],
                        "totalAmount": 250,
                        "totalCurrency": "AUD",
                        "totalPaid": 250,
                        "totalDue": 0,
                        "dateCreated": "2025-09-14T00:32:18Z",
                        "dateConfirmed": "2025-09-14T00:32:18.128Z",
                        "datePaid": "2025-09-14T00:32:20.76Z",
                        "payments": [
                          {
                            "type": "CREDITCARD",
                            "amount": 250,
                            "currency": "AUD",
                            "date": "2025-09-14T00:32:20.702Z",
                            "label": "REZDY_STRIPE: pi_3JZPZOH6OlZMtMyG03qjDOX5",
                            "recipient": "RESELLER"
                          }
                        ],
                        "fields": [
                          {
                            "label": "Barcode",
                            "value": "RGM7VN1"
                          }
                        ],
                        "source": "MARKETPLACE_PREF_RATE",
                        "resellerSource": "API",
                        "sourceChannel": "APISPECIFICATIONDEMOAGENTDONOTEDIT",
                        "commission": 25,
                        "vouchers": [],
                        "paymentOption": "CREDITCARD",
                        "barcodeType": "QR_CODE"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/bookings/quote": {
      "post": {
        "tags": [
          "agent",
          "supplier",
          "Bookings"
        ],
        "summary": "Quote booking",
        "description": "Get a quote for a booking. Use this service to validate your Booking object before making the actual booking.  \nBusiness rules will be validated, and all amounts and totals will be populated.  \nIt is not a Booking: It does not have any status or booking number. A Quote does not reserve any seat.  ",
        "operationId": "quoteBooking",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Booking update"
              },
              "examples": {
                "Quote booking": {
                  "description": "Example of quote a manual payment booking with minimalistic payload",
                  "value": {
                    "customer": {
                      "firstName": "Rick",
                      "lastName": "Sanchez",
                      "phone": "+61484123456"
                    },
                    "items": [
                      {
                        "productCode": "PWQF1Y",
                        "startTimeLocal": "2025-10-01 09:00:00",
                        "quantities": [
                          {
                            "optionLabel": "Adult",
                            "value": 1
                          }
                        ]
                      }
                    ],
                    "pickupLocation": {
                      "locationName": "Divers hotel"
                    },
                    "payments": [
                      {
                        "amount": 250,
                        "type": "CASH",
                        "label": "Paid in cash to API specification demo company"
                      }
                    ]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Quote booking",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBooking"
                },
                "examples": {
                  "Quote booking": {
                    "description": "Quote booking",
                    "value": {
                      "requestStatus": {
                        "success": true,
                        "version": "v1"
                      },
                      "booking": {
                        "supplierId": 13398,
                        "supplierName": "API specification demo supplier (DO NOT EDIT)",
                        "supplierAlias": "apispecificationdemosupplierdonotedit",
                        "resellerId": 13399,
                        "resellerName": "API specification demo agent (DO NOT EDIT)",
                        "resellerAlias": "apispecificationdemoagentdonotedit",
                        "customer": {
                          "firstName": "Rick",
                          "lastName": "Sanchez",
                          "name": "Rick Sanchez",
                          "phone": "+61484123456"
                        },
                        "items": [
                          {
                            "productName": "Double dive with sharks",
                            "productCode": "PWQF1Y",
                            "startTime": "2025-09-30T23:00:00Z",
                            "endTime": "2025-10-01T02:00:00Z",
                            "startTimeLocal": "2025-10-01 09:00:00",
                            "endTimeLocal": "2025-10-01 12:00:00",
                            "quantities": [
                              {
                                "optionLabel": "Adult",
                                "optionPrice": 250,
                                "value": 1
                              }
                            ],
                            "totalQuantity": 1,
                            "amount": 250,
                            "extras": [],
                            "participants": [
                              {
                                "fields": [
                                  {
                                    "label": "First Name",
                                    "value": "Rick"
                                  },
                                  {
                                    "label": "Last Name",
                                    "value": "Sanchez"
                                  },
                                  {
                                    "label": "Certification level"
                                  },
                                  {
                                    "label": "Certification number"
                                  },
                                  {
                                    "label": "Certification agency"
                                  }
                                ]
                              }
                            ],
                            "subtotal": 250,
                            "pickupLocation": {
                              "pickupInstructions": "Call us on +61123456 to arrange a pickup from a custom pickup request not listed among the pickup locations.\r\nPlease be ready 15 minute before the pickup time."
                            }
                          }
                        ],
                        "totalAmount": 250,
                        "totalCurrency": "AUD",
                        "totalPaid": 250,
                        "totalDue": 0,
                        "payments": [
                          {
                            "type": "CASH",
                            "amount": 250,
                            "label": "Paid in cash to API specification demo agent",
                            "recipient": "RESELLER"
                          }
                        ],
                        "fields": [
                          {
                            "label": "Barcode"
                          }
                        ],
                        "source": "MARKETPLACE_PREF_RATE",
                        "resellerSource": "API",
                        "commission": 25,
                        "vouchers": [],
                        "barcodeType": "QR_CODE"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/bookings/{orderNumber}": {
      "get": {
        "tags": [
          "agent",
          "supplier",
          "Bookings"
        ],
        "summary": "Get booking",
        "description": "Load an existing booking by Order Number",
        "operationId": "getBooking",
        "parameters": [
          {
            "name": "orderNumber",
            "in": "path",
            "description": "Order number to search",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "R123456"
          }
        ],
        "responses": {
          "default": {
            "description": "Get booking",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBooking"
                },
                "examples": {
                  "Get booking `RKM1ULT`": {
                    "description": "Get booking `RKM1ULT`: `https://api.rezdy-staging.com/v1/bookings/RKM1ULT?apiKey=69f708868ddc45eaa1f9b9fad1ddeba5`",
                    "value": {
                      "requestStatus": {
                        "success": true,
                        "version": "v1"
                      },
                      "booking": {
                        "orderNumber": "RKM1ULT",
                        "status": "CONFIRMED",
                        "supplierId": 13398,
                        "supplierName": "API specification demo supplier (DO NOT EDIT)",
                        "supplierAlias": "apispecificationdemosupplierdonotedit",
                        "resellerId": 13399,
                        "resellerName": "API specification demo agent (DO NOT EDIT)",
                        "resellerAlias": "apispecificationdemoagentdonotedit",
                        "customer": {
                          "id": 29692,
                          "firstName": "Rick",
                          "lastName": "Sanchez",
                          "name": "Rick Sanchez",
                          "phone": "+61484123456"
                        },
                        "items": [
                          {
                            "productName": "Double dive with sharks",
                            "productCode": "PWQF1Y",
                            "startTime": "2025-09-30T23:00:00Z",
                            "endTime": "2025-10-01T02:00:00Z",
                            "startTimeLocal": "2025-10-01 09:00:00",
                            "endTimeLocal": "2025-10-01 12:00:00",
                            "quantities": [
                              {
                                "optionLabel": "Adult",
                                "optionPrice": 250,
                                "value": 1
                              }
                            ],
                            "totalQuantity": 1,
                            "amount": 250,
                            "extras": [],
                            "participants": [
                              {
                                "fields": [
                                  {
                                    "label": "First Name",
                                    "value": "Rick"
                                  },
                                  {
                                    "label": "Last Name",
                                    "value": "Sanchez"
                                  },
                                  {
                                    "label": "Certification level"
                                  },
                                  {
                                    "label": "Certification number"
                                  },
                                  {
                                    "label": "Certification agency"
                                  }
                                ]
                              }
                            ],
                            "subtotal": 250,
                            "pickupLocation": {
                              "pickupInstructions": "Call us on +61123456 to arrange a pickup from a custom pickup request not listed among the pickup locations.\r\nPlease be ready 15 minute before the pickup time."
                            }
                          }
                        ],
                        "totalAmount": 250,
                        "totalCurrency": "AUD",
                        "totalPaid": 250,
                        "totalDue": 0,
                        "dateCreated": "2025-09-09T02:14:12Z",
                        "dateConfirmed": "2025-09-09T02:14:12Z",
                        "datePaid": "2025-09-09T02:14:12Z",
                        "payments": [
                          {
                            "type": "CASH",
                            "amount": 250,
                            "currency": "AUD",
                            "date": "2025-09-09T02:14:12Z",
                            "label": "Paid in cash to API specification demo agent",
                            "recipient": "RESELLER"
                          }
                        ],
                        "fields": [
                          {
                            "label": "Barcode",
                            "value": "RKM1ULT"
                          }
                        ],
                        "source": "MARKETPLACE_PREF_RATE",
                        "resellerSource": "API",
                        "sourceChannel": "APISPECIFICATIONDEMOAGENTDONOTEDIT",
                        "commission": 25,
                        "vouchers": [],
                        "barcodeType": "QR_CODE"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "agent",
          "supplier",
          "Bookings"
        ],
        "summary": "Update booking",
        "description": "When implementing booking update take into consideration below:\n\n- only certain fields can currently be updated using API\n- only manual payment bookings can be updated\n- update booking in API triggers webhooks and e-mail notifications in the same way as the order update through UI\n- good practice is to retrieve the full booking object either from create or get booking response, update the necessary fields and pass it whole back to the booking update service. In the future we might support updates of additional fields e.g. add and delete of participants. If you don't send the participants array in the request, we will recognize it as the participants deletion and remove the participant from the existing order\n- order of the items in arrays have to be preserved for the following fields \"items\", \"participants\", since no ids are exposed in the API and thus are matched based on the position in the array again the existing booking object\n- agent can update supplier orders only if the supplier allow them to *edit orders* when sharing their products\n\nThe service method does not support a partial update, **full booking object, as it was retrieved from the booking create or search services**, has to be send back to the request payload.\n Otherwise, the properties or relations which <i>are currently supported (see below)</i> and they are not sent, will be deleted. \n **Order of the items in arrays have to be preserved for the following fields 'items', 'participants'.**\n \n**Currently supported** fields are:\n\n- Booking.customer - all customer data can be updated\n- Booking.field - all 'per booking' booking fields values\n- Booking.item.participant.field - all 'per participant' booking fields values\n- Booking.resellerComments - both the booking agent and the supplier can update the booking resellerComments\n- Booking.resellerReference - both the booking agent and the supplier can update the booking resellerReference\n- Booking.items.pickupLocation.locationName - both the booking agent and the supplier can update the booking pickup location\n\nFor the sample requests provided in the right panel, consider the booking object below being retrieved from a POST order or GET order methods:\n\n```\n{\n\t\"requestStatus\": {\n\t\t\"success\": true,\n\t\t\"version\": \"v1\"\n\t},\n\t\"booking\": {\n\t\t\"orderNumber\": \"RSKCJ1K\",\n\t\t\"status\": \"CONFIRMED\",\n\t\t\"supplierId\": 61,\n\t\t\"supplierName\": \"SUPPLIER_PREMIUM_AU\",\n\t\t\"customer\": {\n\t\t\t\"id\": 2,\n\t\t\t\"firstName\": \"Dusan\",\n\t\t\t\"lastName\": \"Zahoransky\",\n\t\t\t\"name\": \"Dusan Zahoransky\",\n\t\t\t\"email\": \"sample@test.com\"\n\t\t},\n\t\t\"items\": [\n\t\t\t{\n\t\t\t\t\"productName\": \"activity i session seats pp adult 100f\",\n\t\t\t\t\"productCode\": \"P123456\",\n\t\t\t\t\"startTime\": \"2017-01-19T09:00:00Z\",\n\t\t\t\t\"endTime\": \"2017-01-19T11:00:00Z\",\n\t\t\t\t\"startTimeLocal\": \"2017-01-19 20:00:00\",\n\t\t\t\t\"endTimeLocal\": \"2017-01-19 22:00:00\",\n\t\t\t\t\"quantities\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"optionLabel\": \"Adult\",\n\t\t\t\t\t\t\"optionPrice\": 100,\n\t\t\t\t\t\t\"value\": 1\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"totalQuantity\": 1,\n\t\t\t\t\"amount\": 100,\n\t\t\t\t\"extras\": [\n\t\t\t\t],\n\t\t\t\t\"participants\": [\n\t\t\t\t\t{\n\t\t\t\t\t\t\"fields\": [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"label\": \"First Name\",\n\t\t\t\t\t\t\t\t\"value\": \"Janko\",\n\t\t\t\t\t\t\t\t\"requiredPerParticipant\": false,\n\t\t\t\t\t\t\t\t\"requiredPerBooking\": false,\n\t\t\t\t\t\t\t\t\"visiblePerParticipant\": false,\n\t\t\t\t\t\t\t\t\"visiblePerBooking\": false\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"label\": \"Last Name\",\n\t\t\t\t\t\t\t\t\"value\": \"Hrasko\",\n\t\t\t\t\t\t\t\t\"requiredPerParticipant\": false,\n\t\t\t\t\t\t\t\t\"requiredPerBooking\": false,\n\t\t\t\t\t\t\t\t\"visiblePerParticipant\": false,\n\t\t\t\t\t\t\t\t\"visiblePerBooking\": false\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t\"subtotal\": 100,\n\t\t\t\t\"vouchers\": [\n\t\t\t\t]\n\t\t\t}\n\t\t],\n\t\t\"totalAmount\": 100,\n\t\t\"totalCurrency\": \"AUD\",\n\t\t\"totalPaid\": 0,\n\t\t\"totalDue\": 100,\n\t\t\"dateCreated\": \"2017-01-19T03:36:18.462Z\",\n\t\t\"dateConfirmed\": \"2017-01-19T03:36:18.462Z\",\n\t\t\"payments\": [\n\t\t],\n\t\t\"fields\": [\n\t\t\t{\n\t\t\t\t\"label\": \"Special Requirements\",\n\t\t\t\t\"value\": \"No meat meal option\",\n\t\t\t\t\"requiredPerParticipant\": false,\n\t\t\t\t\"requiredPerBooking\": false,\n\t\t\t\t\"visiblePerParticipant\": false,\n\t\t\t\t\"visiblePerBooking\": false\n\t\t\t}\n\t\t],\n\t\t\"source\": \"API\",\n\t\t\"vouchers\": [\n\t\t]\n\t}\n}\n```",
        "operationId": "updateBooking",
        "parameters": [
          {
            "name": "orderNumber",
            "in": "path",
            "description": "order number of the booking",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Booking update"
              },
              "examples": {
                "Update internal info": {
                  "description": "Update internal info",
                  "value": "TODO",
                  "x-tag": "supplier"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBooking"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBooking"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "agent",
          "supplier",
          "Bookings"
        ],
        "summary": "Cancel booking",
        "description": "Cancel an existing booking and send notifications about the cancellation. In case of an Automated Payment booking, will also refund payment.",
        "operationId": "cancelBooking",
        "parameters": [
          {
            "name": "orderNumber",
            "in": "path",
            "description": "Order number to cancel",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "R123456"
          },
          {
            "name": "sendNotifications",
            "in": "query",
            "description": "Flag to control if a booking confirmation email should be send to the customer after this booking is canceled. Default (if not specified) is true.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Cancel booking",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseBooking"
                },
                "examples": {
                  "Cancel booking `RKM1ULT`": {
                    "description": "Get booking `RKM1ULT`: `https://api.rezdy-staging.com/v1/bookings/RKM1ULT?apiKey=69f708868ddc45eaa1f9b9fad1ddeba5`",
                    "value": {
                      "requestStatus": {
                        "success": true,
                        "warning": {
                          "warningMessage": "This order is already cancelled"
                        },
                        "version": "v1"
                      },
                      "booking": {
                        "orderNumber": "RKQ0687",
                        "status": "CANCELLED",
                        "supplierId": 13398,
                        "supplierName": "API specification demo supplier (DO NOT EDIT)",
                        "supplierAlias": "apispecificationdemosupplierdonotedit",
                        "resellerId": 13399,
                        "resellerName": "API specification demo agent (DO NOT EDIT)",
                        "resellerAlias": "apispecificationdemoagentdonotedit",
                        "customer": {
                          "id": 29665,
                          "firstName": "Rick",
                          "lastName": "Sanchez",
                          "name": "Rick Sanchez",
                          "phone": "+61484123456"
                        },
                        "items": [
                          {
                            "productName": "Double dive with sharks",
                            "productCode": "PWQF1Y",
                            "startTime": "2025-09-30T23:00:00Z",
                            "endTime": "2025-10-01T02:00:00Z",
                            "startTimeLocal": "2025-10-01 09:00:00",
                            "endTimeLocal": "2025-10-01 12:00:00",
                            "quantities": [
                              {
                                "optionLabel": "Adult",
                                "optionPrice": 250,
                                "value": 1
                              }
                            ],
                            "totalQuantity": 1,
                            "amount": 250,
                            "extras": [],
                            "participants": [
                              {
                                "fields": [
                                  {
                                    "label": "First Name",
                                    "value": "Rick"
                                  },
                                  {
                                    "label": "Last Name",
                                    "value": "Sanchez"
                                  },
                                  {
                                    "label": "Certification level",
                                    "value": "Open Water"
                                  },
                                  {
                                    "label": "Certification number",
                                    "value": "123456798"
                                  },
                                  {
                                    "label": "Certification agency",
                                    "value": "PADI"
                                  }
                                ]
                              }
                            ],
                            "subtotal": 250,
                            "pickupLocation": {
                              "locationName": "Divers hotel",
                              "address": "Cape Byron, Byron Bay NSW, Australia",
                              "pickupTime": "2025-10-01 08:30:00",
                              "pickupInstructions": "Please be ready 15 minute before the pickup time in the hotel lobby area.\r\nPlease be ready 15 minute before the pickup time."
                            }
                          }
                        ],
                        "totalAmount": 250,
                        "totalCurrency": "AUD",
                        "totalPaid": 250,
                        "totalDue": 0,
                        "dateCreated": "2025-09-07T00:21:22Z",
                        "dateUpdated": "2025-09-09T03:57:02Z",
                        "dateConfirmed": "2025-09-07T00:21:22Z",
                        "datePaid": "2025-09-07T00:21:22Z",
                        "payments": [
                          {
                            "type": "CASH",
                            "amount": 250,
                            "currency": "AUD",
                            "date": "2025-09-07T00:21:22Z",
                            "label": "Paid in cash to API specification demo agent",
                            "recipient": "RESELLER"
                          }
                        ],
                        "fields": [
                          {
                            "label": "Barcode",
                            "value": "RKQ0687"
                          }
                        ],
                        "source": "MARKETPLACE_PREF_RATE",
                        "resellerSource": "API",
                        "sourceChannel": "APISPECIFICATIONDEMOAGENTDONOTEDIT",
                        "resellerComments": "Here come agent comments that are visible to both booking agent and supplier",
                        "commission": 25,
                        "vouchers": [],
                        "barcodeType": "QR_CODE"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/categories": {
      "get": {
        "tags": [
          "agent",
          "Categories",
          "supplier"
        ],
        "summary": "Search categories",
        "description": "Load all categories matching a search string. If the search string is empty, all categories will be returned.\nThis will only return categories that belong to the company identified from the request's apiKey.",
        "operationId": "searchCategories",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "String to search for. It will be searched in category name ",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "visible",
            "in": "query",
            "description": "Return only public categories if it is set to true, only private if it is set to false, or both if it not set.",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit how many results are returned per request. Maximum is 100, which is also the default, when not specified.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset of the first result to return. Default to 0.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Search categories",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseCategoryList"
                },
                "examples": {
                  "Search categories": {
                    "description": "Search categories: `https://api.rezdy-staging.com/v1/categories?apiKey=69f708868ddc45eaa1f9b9fad1ddeba5`",
                    "value": {
                      "requestStatus": {
                        "success": true,
                        "version": "v1"
                      },
                      "categories": [
                        {
                          "id": 9091,
                          "name": "Demo supplier products",
                          "description": "",
                          "visible": true,
                          "image": {
                            "id": 22654,
                            "itemUrl": "https://img.rezdy-staging.com/PRODUCT_IMAGE/13398/IMG_5098__1_.jpg",
                            "thumbnailUrl": "https://img.rezdy-staging.com/PRODUCT_IMAGE/13398/IMG_5098__1__tb.jpg",
                            "mediumSizeUrl": "https://img.rezdy-staging.com/PRODUCT_IMAGE/13398/IMG_5098__1__med.jpg",
                            "largeSizeUrl": "https://img.rezdy-staging.com/PRODUCT_IMAGE/13398/IMG_5098__1__lg.jpg"
                          },
                          "categorySeoTags": [
                            {
                              "attrKey": "noindex",
                              "attrValue": "0",
                              "id": 365,
                              "metaType": "NOINDEX",
                              "categoryId": 9091
                            }
                          ]
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/categories/{categoryId}": {
      "get": {
        "tags": [
          "agent",
          "Categories",
          "supplier"
        ],
        "summary": "Get category",
        "description": "Load an existing category by Id",
        "operationId": "getCategory",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "description": "Category ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Get category",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseCategory"
                },
                "examples": {
                  "Get category": {
                    "description": "Get category `9091`: `https://api.rezdy-staging.com/v1/categories/9091?apiKey=69f708868ddc45eaa1f9b9fad1ddeba5`",
                    "value": {
                      "requestStatus": {
                        "success": true,
                        "version": "v1"
                      },
                      "category": {
                        "id": 9091,
                        "name": "Demo supplier products",
                        "description": "",
                        "visible": true,
                        "image": {
                          "id": 22654,
                          "itemUrl": "https://img.rezdy-staging.com/PRODUCT_IMAGE/13398/IMG_5098__1_.jpg",
                          "thumbnailUrl": "https://img.rezdy-staging.com/PRODUCT_IMAGE/13398/IMG_5098__1__tb.jpg",
                          "mediumSizeUrl": "https://img.rezdy-staging.com/PRODUCT_IMAGE/13398/IMG_5098__1__med.jpg",
                          "largeSizeUrl": "https://img.rezdy-staging.com/PRODUCT_IMAGE/13398/IMG_5098__1__lg.jpg"
                        },
                        "categorySeoTags": [
                          {
                            "attrKey": "noindex",
                            "attrValue": "0",
                            "id": 365,
                            "metaType": "NOINDEX",
                            "categoryId": 9091
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/categories/{categoryId}/products": {
      "get": {
        "tags": [
          "agent",
          "Categories",
          "supplier"
        ],
        "summary": "List category products",
        "description": "Load all products within a category.",
        "operationId": "getCategoryProducts",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "description": "The category id.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit how many results are returned per request. Maximum is 100, which is also the default, when not specified.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset of the first result to return. Default to 0.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "default": {
            "description": "List category products",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseProductList"
                },
                "examples": {
                  "List category products": {
                    "description": "List category `9091` products: `https://api.rezdy-staging.com/v1/categories/9091/products?apiKey=69f708868ddc45eaa1f9b9fad1ddeba5`",
                    "value": {
                      "requestStatus": {
                        "success": true,
                        "version": "v1"
                      },
                      "products": [
                        {
                          "productType": "TICKET",
                          "name": "National Park pass",
                          "shortDescription": "National park multiday pass",
                          "description": "National park multiday entry pass, which can be used any time within 2 years from the purchase date for a single entry.",
                          "productCode": "P00TNX",
                          "internalCode": "TICKET",
                          "supplierId": 13398,
                          "supplierAlias": "apispecificationdemosupplierdonotedit",
                          "supplierName": "API specification demo supplier (DO NOT EDIT)",
                          "timezone": "Australia/Sydney",
                          "advertisedPrice": 15,
                          "priceOptions": [
                            {
                              "price": 30,
                              "label": "Adult",
                              "id": 929162,
                              "seatsUsed": 1,
                              "productCode": "P00TNX"
                            },
                            {
                              "price": 15,
                              "label": "Child",
                              "id": 929161,
                              "seatsUsed": 1,
                              "productCode": "P00TNX"
                            }
                          ],
                          "currency": "AUD",
                          "unitLabel": "Participant",
                          "unitLabelPlural": "Participants",
                          "quantityRequired": true,
                          "quantityRequiredMin": 1,
                          "images": [
                            {
                              "id": 22654,
                              "itemUrl": "https://img.rezdy-staging.com/PRODUCT_IMAGE/13398/IMG_5098__1_.jpg",
                              "thumbnailUrl": "https://img.rezdy-staging.com/PRODUCT_IMAGE/13398/IMG_5098__1__tb.jpg",
                              "mediumSizeUrl": "https://img.rezdy-staging.com/PRODUCT_IMAGE/13398/IMG_5098__1__med.jpg",
                              "largeSizeUrl": "https://img.rezdy-staging.com/PRODUCT_IMAGE/13398/IMG_5098__1__lg.jpg"
                            },
                            {
                              "id": 22655,
                              "itemUrl": "https://img.rezdy-staging.com/PRODUCT_IMAGE/13398/IMG_5176.jpg",
                              "thumbnailUrl": "https://img.rezdy-staging.com/PRODUCT_IMAGE/13398/IMG_5176_tb.jpg",
                              "mediumSizeUrl": "https://img.rezdy-staging.com/PRODUCT_IMAGE/13398/IMG_5176_med.jpg",
                              "largeSizeUrl": "https://img.rezdy-staging.com/PRODUCT_IMAGE/13398/IMG_5176_lg.jpg"
                            },
                            {
                              "id": 22656,
                              "itemUrl": "https://img.rezdy-staging.com/PRODUCT_IMAGE/13398/IMG_5022.jpg",
                              "thumbnailUrl": "https://img.rezdy-staging.com/PRODUCT_IMAGE/13398/IMG_5022_tb.jpg",
                              "mediumSizeUrl": "https://img.rezdy-staging.com/PRODUCT_IMAGE/13398/IMG_5022_med.jpg",
                              "largeSizeUrl": "https://img.rezdy-staging.com/PRODUCT_IMAGE/13398/IMG_5022_lg.jpg"
                            },
                            {
                              "id": 22658,
                              "itemUrl": "https://img.rezdy-staging.com/PRODUCT_IMAGE/13398/a6ab4016937d4f82b8bc0d9c3cb82bf6IMG_20190415_172800.jpg",
                              "thumbnailUrl": "https://img.rezdy-staging.com/PRODUCT_IMAGE/13398/a6ab4016937d4f82b8bc0d9c3cb82bf6IMG_20190415_172800_tb.jpg",
                              "mediumSizeUrl": "https://img.rezdy-staging.com/PRODUCT_IMAGE/13398/a6ab4016937d4f82b8bc0d9c3cb82bf6IMG_20190415_172800_med.jpg",
                              "largeSizeUrl": "https://img.rezdy-staging.com/PRODUCT_IMAGE/13398/a6ab4016937d4f82b8bc0d9c3cb82bf6IMG_20190415_172800_lg.jpg"
                            }
                          ],
                          "bookingMode": "NO_DATE",
                          "charter": false,
                          "terms": "",
                          "bookingFields": [
                            {
                              "label": "First Name",
                              "requiredPerParticipant": false,
                              "requiredPerBooking": false,
                              "visiblePerParticipant": true,
                              "visiblePerBooking": true,
                              "fieldType": "String"
                            },
                            {
                              "label": "Last Name",
                              "requiredPerParticipant": false,
                              "requiredPerBooking": false,
                              "visiblePerParticipant": true,
                              "visiblePerBooking": true,
                              "fieldType": "String"
                            },
                            {
                              "label": "Mobile",
                              "requiredPerParticipant": false,
                              "requiredPerBooking": false,
                              "visiblePerParticipant": false,
                              "visiblePerBooking": true,
                              "fieldType": "Phone"
                            },
                            {
                              "label": "Email",
                              "requiredPerParticipant": false,
                              "requiredPerBooking": false,
                              "visiblePerParticipant": false,
                              "visiblePerBooking": true,
                              "fieldType": "String"
                            },
                            {
                              "label": "Country",
                              "requiredPerParticipant": false,
                              "requiredPerBooking": false,
                              "visiblePerParticipant": false,
                              "visiblePerBooking": true,
                              "fieldType": "List"
                            },
                            {
                              "label": "Special Requirements",
                              "requiredPerParticipant": false,
                              "requiredPerBooking": false,
                              "visiblePerParticipant": false,
                              "visiblePerBooking": true,
                              "fieldType": "String"
                            }
                          ],
                          "latitude": 28.2062873,
                          "longitude": 85.62292959999999,
                          "confirmMode": "AUTOCONFIRM",
                          "confirmModeMinParticipants": 0,
                          "commissionIncludesExtras": false,
                          "cancellationPolicyDays": 7,
                          "dateCreated": "2025-08-31T00:17:05Z",
                          "minimumNoticeMinutes": 0,
                          "durationMinutes": 1440,
                          "dateUpdated": "2025-08-31T01:02:28Z",
                          "locationAddress": {
                            "addressLine": "Langtang valley",
                            "postCode": "",
                            "city": "",
                            "state": "",
                            "countryCode": "np",
                            "latitude": 28.2062873,
                            "longitude": 85.62292959999999
                          },
                          "languages": [
                            "en_au"
                          ],
                          "waitListingEnabled": false,
                          "barcodeOutputType": "ORDER",
                          "isApiBookingSupported": true
                        },
                        {
                          "productType": "ACTIVITY",
                          "name": "Double dive with sharks",
                          "shortDescription": "Double dive with grey nurse or leopard sharks, depending on the season.",
                          "description": "Double dive with grey nurse or leopard sharks, depending on the season. Boat dive with a snack provided during the break between the dives. The dive site is suitable for open water divers.",
                          "productCode": "PWQF1Y",
                          "internalCode": "DIVING",
                          "supplierId": 13398,
                          "supplierAlias": "apispecificationdemosupplierdonotedit",
                          "supplierName": "API specification demo supplier (DO NOT EDIT)",
                          "timezone": "Australia/Sydney",
                          "advertisedPrice": 200,
                          "priceOptions": [
                            {
                              "price": 250,
                              "label": "Adult",
                              "id": 929159,
                              "seatsUsed": 1,
                              "productCode": "PWQF1Y"
                            },
                            {
                              "price": 200,
                              "label": "Student",
                              "id": 929160,
                              "seatsUsed": 1,
                              "productCode": "PWQF1Y"
                            }
                          ],
                          "currency": "AUD",
                          "unitLabel": "Participant",
                          "unitLabelPlural": "Participants",
                          "quantityRequired": true,
                          "quantityRequiredMin": 1,
                          "quantityRequiredMax": 50,
                          "images": [
                            {
                              "id": 22650,
                              "itemUrl": "https://img.rezdy-staging.com/PRODUCT_IMAGE/13398/DSCN8351.jpg",
                              "thumbnailUrl": "https://img.rezdy-staging.com/PRODUCT_IMAGE/13398/DSCN8351_tb.jpg",
                              "mediumSizeUrl": "https://img.rezdy-staging.com/PRODUCT_IMAGE/13398/DSCN8351_med.jpg",
                              "largeSizeUrl": "https://img.rezdy-staging.com/PRODUCT_IMAGE/13398/DSCN8351_lg.jpg"
                            },
                            {
                              "id": 22651,
                              "itemUrl": "https://img.rezdy-staging.com/PRODUCT_IMAGE/13398/DSCN8378.jpg",
                              "thumbnailUrl": "https://img.rezdy-staging.com/PRODUCT_IMAGE/13398/DSCN8378_tb.jpg",
                              "mediumSizeUrl": "https://img.rezdy-staging.com/PRODUCT_IMAGE/13398/DSCN8378_med.jpg",
                              "largeSizeUrl": "https://img.rezdy-staging.com/PRODUCT_IMAGE/13398/DSCN8378_lg.jpg"
                            },
                            {
                              "id": 22652,
                              "itemUrl": "https://img.rezdy-staging.com/PRODUCT_IMAGE/13398/DSCN1387.jpg",
                              "thumbnailUrl": "https://img.rezdy-staging.com/PRODUCT_IMAGE/13398/DSCN1387_tb.jpg",
                              "mediumSizeUrl": "https://img.rezdy-staging.com/PRODUCT_IMAGE/13398/DSCN1387_med.jpg",
                              "largeSizeUrl": "https://img.rezdy-staging.com/PRODUCT_IMAGE/13398/DSCN1387_lg.jpg"
                            },
                            {
                              "id": 22653,
                              "itemUrl": "https://img.rezdy-staging.com/PRODUCT_IMAGE/13398/DSCN1402.jpg",
                              "thumbnailUrl": "https://img.rezdy-staging.com/PRODUCT_IMAGE/13398/DSCN1402_tb.jpg",
                              "mediumSizeUrl": "https://img.rezdy-staging.com/PRODUCT_IMAGE/13398/DSCN1402_med.jpg",
                              "largeSizeUrl": "https://img.rezdy-staging.com/PRODUCT_IMAGE/13398/DSCN1402_lg.jpg"
                            }
                          ],
                          "bookingMode": "INVENTORY",
                          "charter": false,
                          "terms": "",
                          "bookingFields": [
                            {
                              "label": "First Name",
                              "requiredPerParticipant": false,
                              "requiredPerBooking": false,
                              "visiblePerParticipant": true,
                              "visiblePerBooking": true,
                              "fieldType": "String"
                            },
                            {
                              "label": "Last Name",
                              "requiredPerParticipant": false,
                              "requiredPerBooking": false,
                              "visiblePerParticipant": true,
                              "visiblePerBooking": true,
                              "fieldType": "String"
                            },
                            {
                              "label": "Mobile",
                              "requiredPerParticipant": false,
                              "requiredPerBooking": false,
                              "visiblePerParticipant": false,
                              "visiblePerBooking": true,
                              "fieldType": "Phone"
                            },
                            {
                              "label": "Email",
                              "requiredPerParticipant": false,
                              "requiredPerBooking": false,
                              "visiblePerParticipant": false,
                              "visiblePerBooking": true,
                              "fieldType": "String"
                            },
                            {
                              "label": "Special Requirements",
                              "requiredPerParticipant": false,
                              "requiredPerBooking": false,
                              "visiblePerParticipant": false,
                              "visiblePerBooking": true,
                              "fieldType": "String"
                            },
                            {
                              "label": "Certification level",
                              "requiredPerParticipant": false,
                              "requiredPerBooking": false,
                              "visiblePerParticipant": true,
                              "visiblePerBooking": false,
                              "fieldType": "String"
                            },
                            {
                              "label": "Certification number",
                              "requiredPerParticipant": false,
                              "requiredPerBooking": false,
                              "visiblePerParticipant": true,
                              "visiblePerBooking": false,
                              "fieldType": "String"
                            },
                            {
                              "label": "Certification agency",
                              "requiredPerParticipant": false,
                              "requiredPerBooking": false,
                              "visiblePerParticipant": true,
                              "visiblePerBooking": false,
                              "listOptions": "PADI\r\nSSI\r\nSDI",
                              "fieldType": "List"
                            }
                          ],
                          "latitude": -28.6113488,
                          "longitude": 153.629085,
                          "confirmMode": "AUTOCONFIRM",
                          "confirmModeMinParticipants": 0,
                          "commissionIncludesExtras": false,
                          "cancellationPolicyDays": 7,
                          "dateCreated": "2025-08-30T23:49:55Z",
                          "minimumNoticeMinutes": 1440,
                          "durationMinutes": 180,
                          "dateUpdated": "2025-08-31T00:12:33Z",
                          "pickupId": 475,
                          "locationAddress": {
                            "addressLine": "Julien rocks",
                            "postCode": "",
                            "city": "Byron Bay",
                            "state": "",
                            "countryCode": "au",
                            "latitude": -28.6113488,
                            "longitude": 153.629085
                          },
                          "languages": [
                            "en_au"
                          ],
                          "waitListingEnabled": false,
                          "barcodeOutputType": "ORDER",
                          "isApiBookingSupported": true
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/categories/{categoryId}/products/{productCode}": {
      "put": {
        "tags": [
          "agent",
          "Categories",
          "supplier"
        ],
        "summary": "Add product to category",
        "description": "Adds a product to an existing category",
        "operationId": "addProduct_1",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "productCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Add product to category",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseRate"
                },
                "examples": {
                  "Add product to category": {
                    "description": "Add product `P00TNX` to category `9091` responds with category products, or 406 status if product already is in this category: `PUT https://api.rezdy-staging.com/v1/categories/9091/products/P00TNX?apiKey=69f708868ddc45eaa1f9b9fad1ddeba5`",
                    "value": {
                      "requestStatus": {
                        "success": true,
                        "version": "v1"
                      },
                      "rate": {
                        "rateId": 9091,
                        "name": "Demo supplier products",
                        "productRates": [
                          {
                            "productCode": "PWQF1Y"
                          },
                          {
                            "productCode": "P00TNX"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "agent",
          "Categories",
          "supplier"
        ],
        "summary": "Remove product from category",
        "description": "Removes a product from an existing category",
        "operationId": "removeProduct_1",
        "parameters": [
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "productCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Remove product from category",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseRate"
                },
                "examples": {
                  "Remove product from category": {
                    "description": "Remove product `P00TNX` from category `9091`, responds with remaining category products: `DELETE https://api.rezdy-staging.com/v1/categories/9091/products/P00TNX?apiKey=69f708868ddc45eaa1f9b9fad1ddeba5`",
                    "value": {
                      "requestStatus": {
                        "success": true,
                        "version": "v1"
                      },
                      "rate": {
                        "rateId": 9091,
                        "name": "Demo supplier products",
                        "productRates": [
                          {
                            "productCode": "PWQF1Y"
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/companies/alias/{companyAlias}": {
      "get": {
        "tags": [
          "agent",
          "supplier",
          "Companies"
        ],
        "summary": "Get company by alias",
        "description": "Load an existing Company by it's alias in Rezdy. Company alias is not a permanent identifier and can change over time.",
        "operationId": "getCompanyByAlias",
        "parameters": [
          {
            "name": "companyAlias",
            "in": "path",
            "description": "Company alias to search for",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Get company",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseCompany"
                },
                "examples": {
                  "Get company": {
                    "description": "Get company 'API specification demo supplier' by their alias: `https://api.rezdy-staging.com/v1/companies/apispecificationdemosupplierdonotedit?apiKey=69f708868ddc45eaa1f9b9fad1ddeba5`",
                    "value": {
                      "requestStatus": {
                        "success": true,
                        "version": "v1"
                      },
                      "companies": [
                        {
                          "alias": "apispecificationdemosupplierdonotedit",
                          "companyName": "API specification demo supplier (DO NOT EDIT)",
                          "firstName": "Dusan",
                          "lastName": "Zahoransky",
                          "address": {
                            "addressLine": "123 CommonwWealth Street",
                            "postCode": "2000",
                            "city": "Sydney",
                            "state": "NSW",
                            "countryCode": "au",
                            "latitude": -33.880562,
                            "longitude": 151.2106793
                          },
                          "destinationName": "Sydney",
                          "destinationCountryCode": "au",
                          "destinationPath": "South Pacific,Australia,New South Wales,Sydney",
                          "currency": "AUD",
                          "locale": "en_au",
                          "timezone": "Australia/Sydney",
                          "category": "Eco-Tours",
                          "companyDescription": "Rezdy API demo supplier.",
                          "phone": "+61484123456",
                          "mobile": "+61484123456",
                          "fax": "",
                          "skype": "",
                          "openingHours": "08:00 - 17:00",
                          "facebookPage": "",
                          "yelp": "",
                          "instagram": "",
                          "pinterest": "",
                          "youtubeChannel": "",
                          "tripAdvisor": "",
                          "twitter": "",
                          "website": "",
                          "bookingSystem": "rezdy.com"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/companies/name/{companyName}": {
      "get": {
        "tags": [
          "agent",
          "supplier",
          "Companies"
        ],
        "summary": "Get company by name",
        "description": "Load an existing Company by it's name in Rezdy. Company name must be given in full name.",
        "operationId": "getCompanyByName",
        "parameters": [
          {
            "name": "companyName",
            "in": "path",
            "description": "Company name to search for",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Get company",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseCompany"
                },
                "examples": {
                  "Get company": {
                    "description": "Get company 'API specification demo supplier (DO NOT EDIT)' by their name: `https://api.rezdy-staging.com/v1/companies/name/API%20specification%20demo%20supplier?apiKey=69f708868ddc45eaa1f9b9fad1ddeba5`",
                    "value": {
                      "requestStatus": {
                        "success": true,
                        "version": "v1"
                      },
                      "companies": [
                        {
                          "alias": "apispecificationdemosupplierdonotedit",
                          "companyName": "API specification demo supplier (DO NOT EDIT)",
                          "firstName": "Dusan",
                          "lastName": "Zahoransky",
                          "address": {
                            "addressLine": "123 CommonwWealth Street",
                            "postCode": "2000",
                            "city": "Sydney",
                            "state": "NSW",
                            "countryCode": "au",
                            "latitude": -33.880562,
                            "longitude": 151.2106793
                          },
                          "destinationName": "Sydney",
                          "destinationCountryCode": "au",
                          "destinationPath": "South Pacific,Australia,New South Wales,Sydney",
                          "currency": "AUD",
                          "locale": "en_au",
                          "timezone": "Australia/Sydney",
                          "category": "Eco-Tours",
                          "companyDescription": "Rezdy API demo supplier.",
                          "phone": "+61484123456",
                          "mobile": "+61484123456",
                          "fax": "",
                          "skype": "",
                          "openingHours": "08:00 - 17:00",
                          "facebookPage": "",
                          "yelp": "",
                          "instagram": "",
                          "pinterest": "",
                          "youtubeChannel": "",
                          "tripAdvisor": "",
                          "twitter": "",
                          "website": "",
                          "bookingSystem": "rezdy.com"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/customers": {
      "get": {
        "tags": [
          "agent",
          "Customers",
          "supplier"
        ],
        "summary": "Search customers",
        "description": "Search customers in your account",
        "operationId": "searchCustomers",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "String to search for. It will be searched in First & Last name, company name and email.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "How many results are returned per request. Maximum is 100, which also a default, when not specified.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset of the first result to return. Default to 0.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Search customers",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseCustomerList"
                },
                "examples": {
                  "Search customers": {
                    "description": "Search customers with name 'Rick Sanchez': `https://api.rezdy-staging.com/v1/customers?apiKey=69f708868ddc45eaa1f9b9fad1ddeba5&search=Rick Sanchez`",
                    "value": {
                      "requestStatus": {
                        "success": true,
                        "version": "v1"
                      },
                      "customers": [
                        {
                          "id": 29647,
                          "firstName": "Rick",
                          "lastName": "Sanchez",
                          "name": "Rick Sanchez",
                          "phone": "+61484123456"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "agent",
          "Customers",
          "supplier"
        ],
        "summary": "Create customer",
        "description": "Create a new customer",
        "operationId": "createCustomer",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Customer"
              },
              "examples": {
                "Create customer": {
                  "description": "Create a new customer",
                  "value": {
                    "email": "morthysmith@test.com",
                    "firstName": "Morty",
                    "lastName": "Smith",
                    "mobile": "+6148123456"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "Create customer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseCustomer"
                },
                "examples": {
                  "Create customer": {
                    "description": "Create customer",
                    "value": {
                      "requestStatus": {
                        "success": true,
                        "version": "v1"
                      },
                      "customer": {
                        "id": 29705,
                        "firstName": "Morty",
                        "lastName": "Smith",
                        "name": "Morty Smith",
                        "email": "morthysmith@test.com",
                        "mobile": "+6148123456"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/customers/{customerId}": {
      "get": {
        "tags": [
          "agent",
          "Customers",
          "supplier"
        ],
        "summary": "Get customer",
        "description": "Load an existing customer by Id",
        "operationId": "getCustomer",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "Id to search for",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Get customer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseCustomer"
                },
                "examples": {
                  "Get customer": {
                    "description": "Get customer: `https://api.rezdy-staging.com/v1/customers/29705?apiKey=69f708868ddc45eaa1f9b9fad1ddeba5`",
                    "value": {
                      "requestStatus": {
                        "success": true,
                        "version": "v1"
                      },
                      "customer": {
                        "id": 29705,
                        "firstName": "Morty",
                        "lastName": "Smith",
                        "name": "Morty Smith",
                        "email": "morthysmith@test.com",
                        "mobile": "+6148123456"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "agent",
          "Customers",
          "supplier"
        ],
        "summary": "Delete customer",
        "description": "Delete a customer",
        "operationId": "deleteCustomer",
        "parameters": [
          {
            "name": "customerId",
            "in": "path",
            "description": "Customer Id to delete",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "Delete customer",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseNoData"
                },
                "examples": {
                  "Delete customer": {
                    "description": "Delete customer: `DELETE https://api.rezdy-staging.com/v1/customers/29705?apiKey=69f708868ddc45eaa1f9b9fad1ddeba5`",
                    "value": {
                      "requestStatus": {
                        "success": true,
                        "version": "v1"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/extra": {
      "get": {
        "tags": [
          "Extra",
          "supplier"
        ],
        "summary": "Search extra",
        "description": "Searches extra. To retrieve all extras, omit the searchString parameter",
        "operationId": "searchExtras",
        "parameters": [
          {
            "name": "searchString",
            "in": "query",
            "description": "Search string of extra name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseExtraList"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseExtraList"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Extra",
          "supplier"
        ],
        "summary": "Create extra",
        "description": "Creates a new extra.",
        "operationId": "createExtra",
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ExtraCreateRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExtraCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseExtra"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseExtra"
                }
              }
            }
          }
        }
      }
    },
    "/v1/extra/{extraId}": {
      "get": {
        "tags": [
          "Extra",
          "supplier"
        ],
        "summary": "Retrieve an extra",
        "description": "Retrieve an extra by Id",
        "operationId": "getExtraById",
        "parameters": [
          {
            "name": "extraId",
            "in": "path",
            "description": "Extra ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseExtra"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseExtra"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Extra",
          "supplier"
        ],
        "summary": "Update extra",
        "description": "Updates an extra. The extra ID can change when updating it, since there are business rules to protect the Order and Product consistency.",
        "operationId": "updateExtraById",
        "parameters": [
          {
            "name": "extraId",
            "in": "path",
            "description": "Extra ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ExtraRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExtraRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseExtra"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseExtra"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Extra",
          "supplier"
        ],
        "summary": "Delete extra",
        "description": "Deletes an extra",
        "operationId": "deleteExtra",
        "parameters": [
          {
            "name": "extraId",
            "in": "path",
            "description": "Extra ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseNoData"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseNoData"
                }
              }
            }
          }
        }
      }
    },
    "/v1/manifest/checkinOrderSession": {
      "get": {
        "tags": [
          "supplier",
          "Manifest"
        ],
        "summary": "Get order item check-in status",
        "description": "Retrieves the Check-in status. Checks if everyone in the whole session was checked in. The session is identified by product code and start time (or start time local).<br>\nOnly available for the supplier API.<br>",
        "operationId": "checkinOrderSessionStatus",
        "parameters": [
          {
            "name": "orderNumber",
            "in": "query",
            "description": "Order number : optional, is specified, only the status of the order item session from the specified order will be retrieved.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productCode",
            "in": "query",
            "description": "Product code in format P12345.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "Session start time in ISO 8601 format, e.g. 2014-03-01T00:00:00Z. It is required to have either startTime or startTimeLocal defined.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startTimeLocal",
            "in": "query",
            "description": " Session start time in supplier's local timezone, format is yyyy-MM-dd HH:mm:ss, e.g. 2014-03-01 00:00:00. It is required to have either startTime or startTimeLocal defined.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseCheckIn"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseCheckIn"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "supplier",
          "Manifest"
        ],
        "summary": "Check-in order item",
        "description": "Place Check-in a / No show flag for the specified order item. The order item is identified by order number, product code and start time (or start time local).<br>\nOnly available for the supplier API.<br>",
        "operationId": "checkinOrderSession",
        "parameters": [
          {
            "name": "orderNumber",
            "in": "query",
            "description": "Order number",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productCode",
            "in": "query",
            "description": "Product code in format P12345.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "Session start time in ISO 8601 format, e.g. 2014-03-01T00:00:00Z. It is required to have either startTime or startTimeLocal defined.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startTimeLocal",
            "in": "query",
            "description": "Session start time in supplier's local timezone, format is yyyy-MM-dd HH:mm:ss, e.g. 2014-03-01 00:00:00. It is required to have either startTime or startTimeLocal defined.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "checkin",
            "in": "query",
            "description": "Specifies a Check-in (true) or No show (false) flag to use",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseNoData"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseNoData"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "supplier",
          "Manifest"
        ],
        "summary": "Remove order item check-in",
        "description": "Retrieves the Check-in status. Checks if everyone in the whole session was checked in. The session is identified by product code and start time (or start time local).<br>\nOnly available for the supplier API.<br>",
        "operationId": "cancelCheckinOrderSession",
        "parameters": [
          {
            "name": "orderNumber",
            "in": "query",
            "description": "Order number",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productCode",
            "in": "query",
            "description": "Product code in format P12345.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "Session start time in ISO 8601 format, e.g. 2014-03-01T00:00:00Z. It is required to have either startTime or startTimeLocal defined.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startTimeLocal",
            "in": "query",
            "description": "Session start time in supplier's local timezone, format is yyyy-MM-dd HH:mm:ss, e.g. 2014-03-01 00:00:00. It is required to have either startTime or startTimeLocal defined.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "checkin",
            "in": "query",
            "description": "Specifies a Check-in (true) or No show (false) flag to use",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseNoData"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseNoData"
                }
              }
            }
          }
        }
      }
    },
    "/v1/manifest/checkinSession": {
      "get": {
        "tags": [
          "supplier",
          "Manifest"
        ],
        "summary": "Get session check-in status",
        "description": "Retrieves the Check-in status. Checks if everyone in the whole session was checked in. The session is identified by product code and start time (or start time local).<br>\nOnly available for the supplier API.<br>",
        "operationId": "checkinSessionStatus",
        "parameters": [
          {
            "name": "productCode",
            "in": "query",
            "description": "Product code in format P12345.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "Session start time in ISO 8601 format, e.g. 2014-03-01T00:00:00Z. It is required to have either startTime or startTimeLocal defined.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startTimeLocal",
            "in": "query",
            "description": "Session start time in supplier's local timezone, format is yyyy-MM-dd HH:mm:ss, e.g. 2014-03-01 00:00:00. It is required to have either startTime or startTimeLocal defined.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseCheckIn"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseCheckIn"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "supplier",
          "Manifest"
        ],
        "summary": "Check-in session",
        "description": "Store Check-in / No show flag for everyone in a specified session. The session is identified by product code and start time (or start time local).\n<br>Only available for the supplier API.<br>",
        "operationId": "checkinSession",
        "parameters": [
          {
            "name": "productCode",
            "in": "query",
            "description": "productCode Product code in format P12345.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "Session start time in ISO 8601 format, e.g. 2014-03-01T00:00:00Z. It is required to have either startTime or startTimeLocal defined.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startTimeLocal",
            "in": "query",
            "description": "Session start time in supplier's local timezone, format is yyyy-MM-dd HH:mm:ss, e.g. 2014-03-01 00:00:00. It is required to have either startTime or startTimeLocal defined.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "checkin",
            "in": "query",
            "description": "Specifies a Check-in (true) or No show (false) flag to use",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseNoData"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseNoData"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "supplier",
          "Manifest"
        ],
        "summary": "Remove session check-in",
        "description": "Remove Check-in / No show flag from everyone in the whole session. The session is identified by product code and start time (or start time local).<br>\nOnly available for the supplier API.<br>",
        "operationId": "cancelCheckinSession",
        "parameters": [
          {
            "name": "productCode",
            "in": "query",
            "description": "Product code in format P12345.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "Session start time in ISO 8601 format, e.g. 2014-03-01T00:00:00Z. It is required to have either startTime or startTimeLocal defined.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startTimeLocal",
            "in": "query",
            "description": "Session start time in supplier's local timezone, format is yyyy-MM-dd HH:mm:ss, e.g. 2014-03-01 00:00:00. It is required to have either startTime or startTimeLocal defined.",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseNoData"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseNoData"
                }
              }
            }
          }
        }
      }
    },
    "/v1/pickups": {
      "get": {
        "tags": [
          "PickupList",
          "supplier"
        ],
        "summary": "Search pickup list",
        "description": "Searches pickup lists. To retrieve all pick up lists, omit the searchString parameter",
        "operationId": "searchPickupLists",
        "parameters": [
          {
            "name": "searchString",
            "in": "query",
            "description": "Search string of pickup list name or location name",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponsePickupListList"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResponsePickupListList"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "PickupList",
          "supplier"
        ],
        "summary": "Create pickup list",
        "description": "Creates a new pickup list",
        "operationId": "createPickupList",
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/PickupList"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PickupList"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponsePickupList"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResponsePickupList"
                }
              }
            }
          }
        }
      }
    },
    "/v1/pickups/{pickupListId}": {
      "get": {
        "tags": [
          "PickupList",
          "supplier"
        ],
        "summary": "Retrieve pickup list",
        "description": "Retrieves a pickup list",
        "operationId": "getPickupList",
        "parameters": [
          {
            "name": "pickupListId",
            "in": "path",
            "description": "Pickup list ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponsePickupList"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResponsePickupList"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "PickupList",
          "supplier"
        ],
        "summary": "Update pickup list",
        "description": "Updates a pickup list. This service should not be used for partial updates. A full pickup list object with the desired pick up locations should be passed as input",
        "operationId": "updatePickupList",
        "parameters": [
          {
            "name": "pickupListId",
            "in": "path",
            "description": "Pickup list ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/PickupList"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PickupList"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponsePickupList"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResponsePickupList"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "PickupList",
          "supplier"
        ],
        "summary": "Delete pickup list",
        "description": "Deletes a pickup list",
        "operationId": "deletePickupList",
        "parameters": [
          {
            "name": "pickupListId",
            "in": "path",
            "description": "Pickup ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseNoData"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseNoData"
                }
              }
            }
          }
        }
      }
    },
    "/v1/products": {
      "get": {
        "tags": [
          "Products",
          "supplier"
        ],
        "summary": "Search products",
        "description": "Searches a product that matches a search string.<br> Load all products matching a search string. If the search string is empty, all your products will be returned.<br>\nUse this service when acting as a supplier, to load your own products.<br>\nIf you're acting as an agent, use the /products/marketplace service<br>",
        "operationId": "searchProducts",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "search String to search for. It will be searched in product name, product code and internal code.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit how many results are returned per request. Maximum is 100, which is also the default, when not specified.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset of the first result to return. Default to 0.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseProductList"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseProductList"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Products",
          "supplier"
        ],
        "summary": "Create product",
        "description": "",
        "operationId": "createProduct",
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ProductCreateRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductCreateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseProduct"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseProduct"
                }
              }
            }
          }
        }
      }
    },
    "/v1/products/marketplace": {},
    "/v1/products/{productCode}": {
      "get": {
        "tags": [
          "agent",
          "Products",
          "supplier"
        ],
        "summary": "Get product",
        "description": "Load an existing product by Product Code",
        "operationId": "getProduct",
        "parameters": [
          {
            "name": "productCode",
            "in": "path",
            "description": "Product Code to search for",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "P12345"
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseProduct"
                },
                "examples": {
                  "Product `PWQF1Y` details": {
                    "description": "Product `PWQF1Y` details `https://api.rezdy-staging.com/v1/products/PWQF1Y?apiKey=69f708868ddc45eaa1f9b9fad1ddeba5`",
                    "value": {
                      "requestStatus": {
                        "success": true,
                        "version": "v1"
                      },
                      "product": {
                        "productType": "ACTIVITY",
                        "name": "Double dive with sharks",
                        "shortDescription": "Double dive with grey nurse or leopard sharks, depending on the season.",
                        "description": "Double dive with grey nurse or leopard sharks, depending on the season. Boat dive with a snack provided during the break between the dives. The dive site is suitable for open water divers.",
                        "productCode": "PWQF1Y",
                        "internalCode": "DIVING",
                        "supplierId": 13398,
                        "supplierAlias": "apispecificationdemosupplierdonotedit",
                        "supplierName": "API specification demo supplier (DO NOT EDIT)",
                        "timezone": "Australia/Sydney",
                        "advertisedPrice": 200,
                        "priceOptions": [
                          {
                            "price": 250,
                            "label": "Adult",
                            "id": 929159,
                            "seatsUsed": 1,
                            "productCode": "PWQF1Y"
                          },
                          {
                            "price": 200,
                            "label": "Student",
                            "id": 929160,
                            "seatsUsed": 1,
                            "productCode": "PWQF1Y"
                          }
                        ],
                        "currency": "AUD",
                        "unitLabel": "Participant",
                        "unitLabelPlural": "Participants",
                        "quantityRequired": true,
                        "quantityRequiredMin": 1,
                        "quantityRequiredMax": 50,
                        "images": [
                          {
                            "id": 22650,
                            "itemUrl": "https://img.rezdy-staging.com/PRODUCT_IMAGE/13398/DSCN8351.jpg",
                            "thumbnailUrl": "https://img.rezdy-staging.com/PRODUCT_IMAGE/13398/DSCN8351_tb.jpg",
                            "mediumSizeUrl": "https://img.rezdy-staging.com/PRODUCT_IMAGE/13398/DSCN8351_med.jpg",
                            "largeSizeUrl": "https://img.rezdy-staging.com/PRODUCT_IMAGE/13398/DSCN8351_lg.jpg"
                          },
                          {
                            "id": 22651,
                            "itemUrl": "https://img.rezdy-staging.com/PRODUCT_IMAGE/13398/DSCN8378.jpg",
                            "thumbnailUrl": "https://img.rezdy-staging.com/PRODUCT_IMAGE/13398/DSCN8378_tb.jpg",
                            "mediumSizeUrl": "https://img.rezdy-staging.com/PRODUCT_IMAGE/13398/DSCN8378_med.jpg",
                            "largeSizeUrl": "https://img.rezdy-staging.com/PRODUCT_IMAGE/13398/DSCN8378_lg.jpg"
                          },
                          {
                            "id": 22652,
                            "itemUrl": "https://img.rezdy-staging.com/PRODUCT_IMAGE/13398/DSCN1387.jpg",
                            "thumbnailUrl": "https://img.rezdy-staging.com/PRODUCT_IMAGE/13398/DSCN1387_tb.jpg",
                            "mediumSizeUrl": "https://img.rezdy-staging.com/PRODUCT_IMAGE/13398/DSCN1387_med.jpg",
                            "largeSizeUrl": "https://img.rezdy-staging.com/PRODUCT_IMAGE/13398/DSCN1387_lg.jpg"
                          },
                          {
                            "id": 22653,
                            "itemUrl": "https://img.rezdy-staging.com/PRODUCT_IMAGE/13398/DSCN1402.jpg",
                            "thumbnailUrl": "https://img.rezdy-staging.com/PRODUCT_IMAGE/13398/DSCN1402_tb.jpg",
                            "mediumSizeUrl": "https://img.rezdy-staging.com/PRODUCT_IMAGE/13398/DSCN1402_med.jpg",
                            "largeSizeUrl": "https://img.rezdy-staging.com/PRODUCT_IMAGE/13398/DSCN1402_lg.jpg"
                          }
                        ],
                        "videos": [],
                        "bookingMode": "INVENTORY",
                        "charter": false,
                        "terms": "",
                        "extras": [
                          {
                            "name": "Underwater camera rental",
                            "description": "An underwater camera rental for the dive. Choice of GoPro or Nikon Coolpix AW130. Select the number of cameras up to the number of participants, that you would like to rent for this booking.",
                            "price": 15,
                            "extraPriceType": "ANY"
                          }
                        ],
                        "bookingFields": [
                          {
                            "label": "First Name",
                            "requiredPerParticipant": false,
                            "requiredPerBooking": false,
                            "visiblePerParticipant": true,
                            "visiblePerBooking": true,
                            "fieldType": "String"
                          },
                          {
                            "label": "Last Name",
                            "requiredPerParticipant": false,
                            "requiredPerBooking": false,
                            "visiblePerParticipant": true,
                            "visiblePerBooking": true,
                            "fieldType": "String"
                          },
                          {
                            "label": "Mobile",
                            "requiredPerParticipant": false,
                            "requiredPerBooking": false,
                            "visiblePerParticipant": false,
                            "visiblePerBooking": true,
                            "fieldType": "Phone"
                          },
                          {
                            "label": "Email",
                            "requiredPerParticipant": false,
                            "requiredPerBooking": false,
                            "visiblePerParticipant": false,
                            "visiblePerBooking": true,
                            "fieldType": "String"
                          },
                          {
                            "label": "Special Requirements",
                            "requiredPerParticipant": false,
                            "requiredPerBooking": false,
                            "visiblePerParticipant": false,
                            "visiblePerBooking": true,
                            "fieldType": "String"
                          },
                          {
                            "label": "Certification level",
                            "requiredPerParticipant": false,
                            "requiredPerBooking": false,
                            "visiblePerParticipant": true,
                            "visiblePerBooking": false,
                            "fieldType": "String"
                          },
                          {
                            "label": "Certification number",
                            "requiredPerParticipant": false,
                            "requiredPerBooking": false,
                            "visiblePerParticipant": true,
                            "visiblePerBooking": false,
                            "fieldType": "String"
                          },
                          {
                            "label": "Certification agency",
                            "requiredPerParticipant": false,
                            "requiredPerBooking": false,
                            "visiblePerParticipant": true,
                            "visiblePerBooking": false,
                            "listOptions": "PADI\r\nSSI\r\nSDI",
                            "fieldType": "List"
                          }
                        ],
                        "latitude": -28.6113488,
                        "longitude": 153.629085,
                        "confirmMode": "AUTOCONFIRM",
                        "confirmModeMinParticipants": 0,
                        "agentPaymentType": "FULL_AGENT",
                        "maxCommissionPercent": 10,
                        "commissionIncludesExtras": true,
                        "dateCreated": "2021-08-30T23:49:55Z",
                        "minimumNoticeMinutes": 1440,
                        "durationMinutes": 180,
                        "dateUpdated": "2021-09-13T04:13:35Z",
                        "pickupId": 475,
                        "locationAddress": {
                          "addressLine": "Julien rocks",
                          "postCode": "",
                          "city": "Byron Bay",
                          "state": "",
                          "countryCode": "au",
                          "latitude": -28.6113488,
                          "longitude": 153.629085
                        },
                        "languages": [
                          "en_au"
                        ],
                        "tags": [
                          "TYPE:Activity"
                        ],
                        "waitListingEnabled": false,
                        "isApiBookingSupported": true
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Products",
          "supplier"
        ],
        "summary": "Update product",
        "description": "Updates a product.\n\nWhen updating price options, the full list of existing price options must be supplied in the update. Otherwise the system will remove any missing price options in the request from the product.\n\nFor instance, if a product has 2 price options Adult and Child but the update request only contains Adult, the Child price option will be removed from the product.<br>\nAdding a price option works the same way. If the update request contains an extra price option, it will be added to the product.\n\nWhen price option values are updated via API, this will override all existing price in availability (session) to reflect the product price. \nIf a different price in calendar/session is required to the product price, please make the changes to the product directly in your Rezdy account and select `do not change session price` in the page that follows after saving your changes.,\n           ",
        "operationId": "updateProduct",
        "parameters": [
          {
            "name": "productCode",
            "in": "path",
            "description": "product's product code to be updated",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ProductUpdateRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductUpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseProduct"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseProduct"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Products",
          "supplier"
        ],
        "summary": "Delete product",
        "description": "Deletes a product.",
        "operationId": "deleteProduct",
        "parameters": [
          {
            "name": "productCode",
            "in": "path",
            "description": "product's product code to be deleted",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseNoData"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseNoData"
                }
              }
            }
          }
        }
      }
    },
    "/v1/products/{productCode}/images": {
      "post": {
        "tags": [
          "Products",
          "supplier"
        ],
        "summary": "Add product image",
        "description": "First, a product has to be created using```POST /products```, the response contain a product object upon a successful creation. Use the product code to for the add/delete images URLs.\n\nUse a standard file upload request (multipart form data) with a file attachment, parameter name is `file` as the call payload, and also a mandatory filename. If you have multiple images, you need to make one separate call for each image.\n\nA successful response contains generated image URLs including different image dimension and the image Id. Use the image Id to delete the image, if you want to remove it from the product.\n\n### Request example\n\nFile has to be specified either in the attachment, part of the form-data parameter 'file', or in the attachment, as a form-data parameter 'filename', which is common format for PHP frameworks, which are sending an array of attachments.\n\nRequest:\n```\nPOST https://api.rezdy.com/latest/products/P12345/images?apiKey=123456789XYZ\n```\ncontent-type=[multipart/form-data; boundary=----WebKitFormBoundarymDtt4W0lhmAsKFkZ]\n\n```\n------WebKitFormBoundarymDtt4W0lhmAsKFkZ\nContent-Disposition: form-data; name=\"file\"; filename=\"myImage.png\"\nContent-Type: image/png\n...\nIMAGE BINARY DATA\n...\n------WebKitFormBoundarymDtt4W0lhmAsKFkZ--\n```\n\n",
        "operationId": "addProductImage",
        "parameters": [
          {
            "name": "productCode",
            "in": "path",
            "description": "product to add the image to",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/FileUploadForm"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseImage"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseImage"
                }
              }
            }
          }
        }
      }
    },
    "/v1/products/{productCode}/images/{mediaId}": {
      "delete": {
        "tags": [
          "Products",
          "supplier"
        ],
        "summary": "Remove product Image",
        "description": "Removes product Image. Filename is mandatory. It has to be specified either in the attachment, part of the form-data parameter 'file', or in the attachment, as a form-data parameter 'filename', which is common format for PHP frameworks, which are sending an array of attachments.",
        "operationId": "deleteProductImage",
        "parameters": [
          {
            "name": "productCode",
            "in": "path",
            "description": "product's product code for the image to be uploaded to",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "mediaId",
            "in": "path",
            "description": "image's id to be uploaded",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseNoData"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseNoData"
                }
              }
            }
          }
        }
      }
    },
    "/v1/products/{productCode}/pickups": {
      "get": {
        "tags": [
          "agent",
          "Products",
          "supplier"
        ],
        "summary": "Get product pickups",
        "description": "Gets a list of pickup locations configured for this product.",
        "operationId": "getProductPickupLocations",
        "parameters": [
          {
            "name": "productCode",
            "in": "path",
            "description": "productCode Product Code to search for",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "P12345"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit how many results are returned per request. Maximum is 100, which is also the default, when not specified.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset of the first result to return. Default to 0.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponsePickupLocationList"
                },
                "examples": {
                  "Product's `PWQF1Y` (Double dive with sharks) pickups": {
                    "description": "Product's `PWQF1Y` (Double dive with sharks) pickups: `https://api.rezdy-staging.com/v1/products/PWQF1Y/pickups?apiKey=69f708868ddc45eaa1f9b9fad1ddeba5`",
                    "value": {
                      "requestStatus": {
                        "success": true,
                        "version": "v1"
                      },
                      "pickupLocations": [
                        {
                          "locationName": "Divers hotel",
                          "address": "Cape Byron, Byron Bay NSW, Australia",
                          "latitude": -28.6473671,
                          "longitude": 153.601977,
                          "minutesPrior": 30,
                          "additionalInstructions": "Please be ready 15 minute before the pickup time in the hotel lobby area."
                        },
                        {
                          "locationName": "Seaside hostel",
                          "address": "Main Beach, Byron Bay NSW, Australia",
                          "latitude": -28.6412831,
                          "longitude": 153.6166691,
                          "minutesPrior": 20,
                          "additionalInstructions": "Please be ready 15 minute before the pickup time in front of the hostel."
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/rates/search": {
      "get": {
        "tags": [
          "Rates",
          "supplier"
        ],
        "summary": "Search rates",
        "description": "Searches rates based on rate name and product code. If rateName and productCode are not specified, then it will return all rates belonging to the supplier",
        "operationId": "searchRatesByNameAndProductCode",
        "parameters": [
          {
            "name": "rateName",
            "in": "query",
            "description": "Rate name",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productCode",
            "in": "query",
            "description": "Product's product code",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseRateList"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseRateList"
                }
              }
            }
          }
        }
      }
    },
    "/v1/rates/{rateId}": {
      "get": {
        "tags": [
          "Rates",
          "supplier"
        ],
        "summary": "Get rate",
        "description": "Retrieves a rate based on its ID",
        "operationId": "getRatesById",
        "parameters": [
          {
            "name": "rateId",
            "in": "path",
            "description": "Rate ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseRate"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseRate"
                }
              }
            }
          }
        }
      }
    },
    "/v1/rates/{rateId}/products/{productCode}": {
      "put": {
        "tags": [
          "Rates",
          "supplier"
        ],
        "summary": "Add product",
        "description": "Adds a product to the specified rate",
        "operationId": "addProduct",
        "parameters": [
          {
            "name": "rateId",
            "in": "path",
            "description": "Rate ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "productCode",
            "in": "path",
            "description": "Product's product code",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/ProductRate"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductRate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseRate"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseRate"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Rates",
          "supplier"
        ],
        "summary": "Remove product",
        "description": "Removes a product from the specified rate",
        "operationId": "removeProduct",
        "parameters": [
          {
            "name": "rateId",
            "in": "path",
            "description": "Rate ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "productCode",
            "in": "path",
            "description": "Product's product code",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseRate"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseRate"
                }
              }
            }
          }
        }
      }
    },
    "/v1/resources": {
      "get": {
        "tags": [
          "supplier",
          "Resources"
        ],
        "summary": "List resources",
        "description": "Retrieve all supplier resources. Pagination using limit and offset is applied to the result list.",
        "operationId": "getAllSupplierResources",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "limit how many results are returned per request. Maximum is 100, which is also the default, when not specified.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset of the first result to return. Default to 0.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseResourceList"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseResourceList"
                }
              }
            }
          }
        }
      }
    },
    "/v1/resources/session": {
      "get": {
        "tags": [
          "supplier",
          "Resources"
        ],
        "summary": "Get session resources",
        "description": "Retrieve resources assigned to the session. Session has to be specified either by sessionId or by product code and start time (or start time local).",
        "operationId": "getResourcesForSession",
        "parameters": [
          {
            "name": "sessionId",
            "in": "query",
            "description": "Session ID",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "productCode",
            "in": "query",
            "description": "Product code in format P12345.",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "Session start time in ISO 8601 format, e.g. 2014-03-01T00:00:00Z",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startTimeLocal",
            "in": "query",
            "description": "Session start time in supplier's local timezone, format is yyyy-MM-dd HH:mm:ss, e.g. 2014-03-01 00:00:00",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "How many results are returned per request. Maximum is 100, which also a default, when not specified.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset of the first result to return. Default to 0.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseResourceList"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseResourceList"
                }
              }
            }
          }
        }
      }
    },
    "/v1/resources/{resourceId}/session/{sessionId}": {
      "put": {
        "tags": [
          "supplier",
          "Resources"
        ],
        "summary": "Add session resource",
        "description": "Add the resource to the session.",
        "operationId": "addToSession",
        "parameters": [
          {
            "name": "resourceId",
            "in": "path",
            "description": "Resource ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "sessionId",
            "in": "path",
            "description": "Session ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "resourceOrder",
            "in": "query",
            "description": "Order of the resource in the session. Optional, if not specified, will by calculated by the system to fill the first gap if gap is found, or the highest number among existing resources.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseResource"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseResource"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "supplier",
          "Resources"
        ],
        "summary": "Remove session resource",
        "description": "Removes the resource from the session.",
        "operationId": "removeFromSession",
        "parameters": [
          {
            "name": "resourceId",
            "in": "path",
            "description": "Resource ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "sessionId",
            "in": "path",
            "description": "Session ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseResource"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseResource"
                }
              }
            }
          }
        }
      }
    },
    "/v1/resources/{resourceId}/sessions": {
      "get": {
        "tags": [
          "supplier",
          "Resources"
        ],
        "summary": "Get resource sessions",
        "description": "Retrieves all sessions for the specified resource within the start/end datetime range. Pagination using limit and offset is applied to the result list.",
        "operationId": "getSessionsForResource",
        "parameters": [
          {
            "name": "resourceId",
            "in": "path",
            "description": "Resource ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "startTime",
            "in": "query",
            "description": "Session start time in ISO 8601 format, e.g. 2014-03-01T00:00:00Z",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endTime",
            "in": "query",
            "description": "Session end time in ISO 8601 format, e.g. 2014-03-01T00:00:00Z",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startTimeLocal",
            "in": "query",
            "description": "Session start time in supplier's local timezone, format is yyyy-MM-dd HH:mm:ss, e.g. 2014-03-01 00:00:00",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "endTimeLocal",
            "in": "query",
            "description": "Session end time in supplier's local timezone, format is yyyy-MM-dd HH:mm:ss, e.g. 2014-03-01 00:00:00",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit how many results are returned per request. Maximum is 100, which is also the default, when not specified.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset of the first result to return. Default to 0.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSessionList"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseSessionList"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vouchers": {
      "get": {
        "tags": [
          "Vouchers",
          "supplier"
        ],
        "summary": "Search vouchers",
        "description": "Search vouchers in your account",
        "operationId": "searchVouchers",
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "String to search for. It will be searched in voucher codes ",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "limit how many results are returned per request. Maximum is 100, which is also the default, when not specified.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Offset of the first result to return. Default to 0.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseVoucherList"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseVoucherList"
                }
              }
            }
          }
        }
      }
    },
    "/v1/vouchers/{voucherCode}": {
      "get": {
        "tags": [
          "Vouchers",
          "supplier"
        ],
        "summary": "Get voucher",
        "description": "Load an existing voucher by Voucher Code",
        "operationId": "getVoucher",
        "parameters": [
          {
            "name": "voucherCode",
            "in": "path",
            "description": "Voucher code to search for.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "default response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseVoucher"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseVoucher"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Error": {
        "required": [
          "errorCode"
        ],
        "type": "object",
        "properties": {
          "errorCode": {
            "type": "string"
          },
          "errorMessage": {
            "type": "string"
          },
          "seatsAvailable": {
            "type": "integer",
            "format": "int32"
          },
          "fields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SrcErrFieldsParameter"
            }
          },
          "quantityRequiredMin": {
            "type": "integer",
            "format": "int32"
          },
          "quantityRequiredMax": {
            "type": "integer",
            "format": "int32"
          },
          "priceOptions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SrcErrPriceOptionsParameter"
            }
          }
        }
      },
      "RequestStatus": {
        "required": [
          "success"
        ],
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "error": {
            "$ref": "#/components/schemas/Error"
          },
          "warning": {
            "$ref": "#/components/schemas/Warning"
          },
          "version": {
            "type": "string"
          }
        }
      },
      "Resource": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Rezdy internal id of the resource.",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "description": "Resource name"
          },
          "type": {
            "type": "string",
            "description": "Resource type",
            "enum": [
              "RESOURCE",
              "BUS",
              "COACH",
              "COASTER",
              "VAN",
              "CAR",
              "MOTORCYCLE",
              "BOAT",
              "VEHICLE",
              "KAYAK",
              "GUIDE",
              "DRIVER",
              "PILOT",
              "INSTRUCTOR",
              "ROOM",
              "VENUE",
              "HORSE",
              "HELICOPTER",
              "PLANE",
              "RAFT",
              "BALLOON",
              "TRACK",
              "FIELD",
              "RING",
              "CAMEL",
              "BIKE",
              "SEGWAY",
              "SKI",
              "SNOWBOARD",
              "PADDLEBOARD",
              "EQUIPMENT",
              "SKIPPER",
              "CREW"
            ]
          },
          "seats": {
            "type": "integer",
            "description": "Availability of the resource",
            "format": "int32"
          }
        },
        "description": "Supplier resource - e.g. raft, bus, tour guide, venue which has a limited capacity. The resources can be shared between different supplier's products. If the resource does not have any spare availability, the booking of any of the product sessions, where the resource is used will not be possible.",
        "xml": {
          "name": "resource",
          "namespace": "https://api.rezdy.com/v1"
        }
      },
      "ResponseResource": {
        "required": [
          "requestStatus"
        ],
        "type": "object",
        "properties": {
          "requestStatus": {
            "$ref": "#/components/schemas/RequestStatus"
          },
          "resource": {
            "$ref": "#/components/schemas/Resource"
          }
        },
        "xml": {
          "name": "response",
          "namespace": "https://api.rezdy.com/v1"
        }
      },
      "SrcErrFieldsParameter": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "reason": {
            "type": "string"
          }
        }
      },
      "SrcErrPriceOptionsParameter": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "min": {
            "type": "integer",
            "format": "int32"
          },
          "max": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Warning": {
        "type": "object",
        "properties": {
          "warningMessage": {
            "type": "string"
          }
        }
      },
      "NetRate": {
        "type": "object",
        "properties": {
          "priceOptionLabel": {
            "type": "string",
            "description": "Label of the price option e.g. Adult, Child etc"
          },
          "netPrice": {
            "type": "number",
            "description": "Value of the rate for the given price option label",
            "format": "float"
          }
        },
        "description": "A Product with its associated price options net rates",
        "xml": {
          "name": "NetRate",
          "namespace": "https://api.rezdy.com/v1"
        }
      },
      "ProductRate": {
        "type": "object",
        "properties": {
          "productCode": {
            "type": "string",
            "description": "Product's product code"
          },
          "commissionType": {
            "type": "string",
            "description": "Commission type: PERCENTAGE, NET_RATE",
            "enum": [
              "NET_RATE",
              "PERCENT"
            ]
          },
          "percentageCommission": {
            "type": "number",
            "description": "Percentage value of the commission. This should be mandatory if Commission Type is PERCENTAGE",
            "format": "float"
          },
          "percentageIncludeExtras": {
            "type": "boolean",
            "description": "Includes extras, This is mandatory if Commission Type is PERCENTAGE. If true, the product's extras will be included in the agent commission, otherwise the commission will be calculated based on the product price only."
          },
          "netRates": {
            "type": "array",
            "description": "List of Net rates with its associated price option label e.g. Adult $20, Child $10 etc. This is mandatory if Commission Type is NET_RATE",
            "xml": {
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/NetRate"
            }
          }
        },
        "description": "A ProductRate is used to map a product and its associated value commission",
        "xml": {
          "name": "ProductRate",
          "namespace": "https://api.rezdy.com/v1"
        }
      },
      "Rate": {
        "type": "object",
        "properties": {
          "rateId": {
            "type": "integer",
            "description": "Rate ID",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "description": "Rate name"
          },
          "productRates": {
            "type": "array",
            "description": "Products associated with this Rate (Catalog)",
            "xml": {
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/ProductRate"
            }
          }
        },
        "description": "A Rate is used to group products with its corresponding shared rate",
        "xml": {
          "name": "Rate",
          "namespace": "https://api.rezdy.com/v1"
        }
      },
      "ResponseRate": {
        "required": [
          "requestStatus"
        ],
        "type": "object",
        "properties": {
          "requestStatus": {
            "$ref": "#/components/schemas/RequestStatus"
          },
          "rate": {
            "$ref": "#/components/schemas/Rate"
          }
        },
        "xml": {
          "name": "response",
          "namespace": "https://api.rezdy.com/v1"
        }
      },
      "BookingFieldCreate": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string",
            "description": "Field label that can be shown to customers"
          },
          "requiredPerParticipant": {
            "type": "boolean",
            "description": "true if this field must be populated for each participant. It should be in Booking.BookingItem.Participant.fields.<p><i>Currently, required fields are not validated when a booking is created though public API, however it's a good practice to support them on in your client code. <b>However, soon the required fields will be enforced for public API booking.</b></i></p>"
          },
          "requiredPerBooking": {
            "type": "boolean",
            "description": "true if this field must be populated once per booking, regardless of the number of items or participants. It should be in Booking.fields<p><i>Currently, required fields are not validated when a booking is created though public API, however it's a good practice to support them on in your client code <b>However, soon the required fields will be enforced for public API booking.</b>.</i></p>"
          },
          "visiblePerParticipant": {
            "type": "boolean",
            "description": "true if this field should be asked for each participant when doing a booking. It should be in Booking.BookingItem.Participant.fields."
          },
          "visiblePerBooking": {
            "type": "boolean",
            "description": "true if this field should be asked once per booking, regardless of the number of items or participants. It should be in Booking.fields"
          },
          "fieldType": {
            "type": "string",
            "description": "Type of a custom booking field. This type does not apply on the Rezdy build-in booking fields. See the section <a href=\"/guides/API%20Related%20Articles/Create%20products\">Product booking fields</a>",
            "enum": [
              "String",
              "List",
              "Boolean",
              "Hidden"
            ]
          },
          "listOptions": {
            "type": "string",
            "description": "If this field only allows limited values to be selected from a list, they'll be included in this string, separated by \\r\\n"
          }
        },
        "description": "An information about a booking or a participant.",
        "xml": {
          "name": "field",
          "namespace": "https://api.rezdy.com/v1"
        }
      },
      "PriceOptionCreate": {
        "type": "object",
        "properties": {
          "price": {
            "type": "number",
            "description": "Price amount (I.e. \"200.00\")",
            "format": "float"
          },
          "label": {
            "type": "string",
            "description": "Label for this price (I.e. \"Adult\", \"Child\")"
          },
          "seatsUsed": {
            "type": "integer",
            "description": "How many seats one quantity of this price willuse. Used for availability calculations. For example 1 quantity of \"Family of 4\" will use 4 seats.",
            "format": "int32"
          },
          "minQuantity": {
            "type": "integer",
            "description": "Min booking quantity for the product price option. Can be specified, if the price option is fixed or a group type. For a successful booking of the product, the number of participants for this price option have to be greater or equal than this value.",
            "format": "int32"
          },
          "maxQuantity": {
            "type": "integer",
            "description": "Max booking quantity for the product price option. Can be specified, if the price option is fixed or a grouptype. For a successful booking of the product, the number of participants for this price option have to be lesser or equal than this value.",
            "format": "int32"
          },
          "priceGroupType": {
            "type": "string",
            "description": "If this price is for a group, is the price for the whole group (TOTAL) or per quantity (EACH)",
            "enum": [
              "EACH",
              "TOTAL"
            ]
          },
          "productCode": {
            "type": "string",
            "description": "Product code to which the price options belongs to. Since Rezdy introduced shared availability option for products, the product sessions can contain price overrides for all of the products, which share the sessions. Therefore it is necessary to filer only the price options matching the chosen product code on the client side, when processing /availability service responses."
          }
        },
        "description": "A Price Option belongs to a product or products session. It holds the price details for a specific price type.Products can have one or many price options (I.e. Adult, Child, Family, etc.)",
        "xml": {
          "name": "priceOption",
          "namespace": "https://api.rezdy.com/v1"
        }
      },
      "ProductUpdateRequest": {
        "required": [
          "bookingFields",
          "confirmMode",
          "description",
          "shortDescription"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Product name "
          },
          "shortDescription": {
            "type": "string",
            "description": "Product description is between 15 and 240 characters."
          },
          "description": {
            "type": "string",
            "description": "Long product description, is between 100 and 15000 characters."
          },
          "advertisedPrice": {
            "type": "number",
            "description": "General price indication for this product. It represents a display price only, therefore it does not affect a real booking price, which is calculated based on the price options.",
            "format": "float"
          },
          "terms": {
            "type": "string",
            "description": "Specific terms and conditions for this product."
          },
          "confirmMode": {
            "type": "string",
            "description": "Confirmation mode. Determines if bookings are automatically confirmed or it they are pending.",
            "enum": [
              "MANUAL",
              "AUTOCONFIRM",
              "MANUAL_THEN_AUTO",
              "AUTO_THEN_MANUAL"
            ]
          },
          "confirmModeMinParticipants": {
            "type": "integer",
            "description": "If confirmMode is MANUAL_THEN_AUTO or AUTO_THEN_MANUAL, determines the minimum number of participants per booking to trigger the change.",
            "format": "int32"
          },
          "minimumNoticeMinutes": {
            "type": "integer",
            "description": "Minimum book ahead interval for he product in minutes.",
            "format": "int64"
          },
          "durationMinutes": {
            "type": "integer",
            "description": "Duration of the product in minutes.",
            "format": "int64"
          },
          "pickupId": {
            "type": "integer",
            "description": "Pickup ID for this product.",
            "format": "int64"
          },
          "bookingFields": {
            "type": "array",
            "description": "List of booking fields required for this product.",
            "xml": {
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/BookingFieldCreate"
            }
          },
          "priceOptions": {
            "type": "array",
            "description": "List of price options for this product.",
            "items": {
              "$ref": "#/components/schemas/PriceOptionCreate"
            }
          },
          "internalCode": {
            "type": "string",
            "description": "Supplier-defined product code, used internally by the supplier."
          },
          "barcodeOutputType": {
            "type": "string",
            "description": "Specifies how to output the barcodes when this product is booked. Valid types are:<br><li>PARTICIPANT: Barcodes will be generated by rezdy for each participant when an booking is created for this product</li><li>ORDER: Barcodes will be generated by rezdy per booking</li>",
            "enum": [
              "PARTICIPANT",
              "ORDER"
            ]
          }
        },
        "description": "updated product",
        "xml": {
          "name": "product",
          "namespace": "https://api.rezdy.com/v1"
        }
      },
      "Address": {
        "type": "object",
        "properties": {
          "addressLine": {
            "type": "string",
            "description": "Address line "
          },
          "addressLine2": {
            "type": "string",
            "description": "Address line 2"
          },
          "postCode": {
            "type": "string",
            "description": "Post Code"
          },
          "city": {
            "type": "string",
            "description": "City name"
          },
          "state": {
            "type": "string",
            "description": "State name"
          },
          "countryCode": {
            "type": "string",
            "description": "Country code"
          },
          "latitude": {
            "type": "number",
            "description": "Geolocation - latitude",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "description": "Geolocation - longitude",
            "format": "double"
          }
        },
        "description": "Address of a company, customer or product location."
      },
      "BookingField": {
        "type": "object",
        "properties": {
          "label": {
            "type": "string",
            "description": "Field label that can be shown to customers"
          },
          "value": {
            "type": "string",
            "description": "Value entered by the customer for this field"
          },
          "requiredPerParticipant": {
            "type": "boolean",
            "description": "true if this field must be populated for each participant. It should be in Booking.BookingItem.Participant.fields.<p><i>Currently, required fields are not validated when a booking is created through public API, however, it's a good practice to support them in your client code. <b>However, soon the required fields will be enforced for public API booking.</b></i></p>"
          },
          "requiredPerBooking": {
            "type": "boolean",
            "description": "true if this field must be populated once per booking, regardless of the number of items or participants. It should be in Booking.fields<p><i>Currently, required fields are not validated when a booking is created though public API, however, it's a good practice to support them in your client code <b>However, soon the required fields will be enforced for public API booking.</b>.</i></p>"
          },
          "visiblePerParticipant": {
            "type": "boolean",
            "description": "true if this field should be asked for each participant when doing a booking. It should be in Booking.BookingItem.Participant.fields."
          },
          "visiblePerBooking": {
            "type": "boolean",
            "description": "true if this field should be asked once per booking, regardless of the number of items or participants. It should be in Booking.fields"
          },
          "listOptions": {
            "type": "string",
            "description": "If this field only allows limited values to be selected from a list, they'll be included in this string, separated by \\r\\n"
          },
          "fieldType": {
            "type": "string",
            "description": "Booking field type which determines its format. See <a href=\"/guides/API%20Related%20Articles/Booking%20Fields%20Format\">Booking Fields Format</a>",
            "enum": [
              "String",
              "List",
              "Boolean",
              "Phone",
              "Date",
              "Hidden"
            ]
          }
        },
        "description": "An information about a booking or a participant, based on context - either nested in a booking or a participant object (I.e. \"First Name\", \"Dietary requirements\", \"Hotel Pickup\").<p><ul>How to handle the booking fields:\t<li>requiredPerXXX is true: the fields is mandatory for the booking, a booking with missing required field will fail</li> \t<li>visiblePerXXX is true: the fields is optional, a customer should be asked to fill it up, but the booking will not fail if it's empty or not sent</li>\t<li>visiblePerXXX is false AND requiredPerXXX is false: the field for this product is not visible, nor required, you can skip it - do not display it to a user</li></ul><ul>How to send the booking fields in a booking request:\t<li>fields XXXperParticipant are sent for each pax in the participants array, as \"fields\"</li> \t<li>fields XXXperBooking are sent only once, in the root booking object, as \"fields\"</li></ul></p>",
        "xml": {
          "name": "field",
          "namespace": "https://api.rezdy.com/v1"
        }
      },
      "Extra": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID of the extra",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "description": "Name of the extra"
          },
          "description": {
            "type": "string",
            "description": "Description of the extra"
          },
          "price": {
            "type": "number",
            "description": "Price for a single quantity of this extra",
            "format": "float"
          },
          "extraPriceType": {
            "type": "string",
            "description": "Price type for this extra. Defines what quantities are allowed and how their price is calculated",
            "enum": [
              "ANY",
              "FIXED",
              "QUANTITY"
            ]
          },
          "quantity": {
            "type": "integer",
            "description": "Quantity booked",
            "format": "int32"
          },
          "image": {
            "$ref": "#/components/schemas/Image"
          }
        },
        "description": "Optional service or item that can be purchased when booking a specific product",
        "xml": {
          "name": "extra",
          "namespace": "https://api.rezdy.com/v1"
        }
      },
      "Image": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Id of the image. Can be used for DELETE /{productCode}/image/{mediaId} service",
            "format": "int64"
          },
          "itemUrl": {
            "type": "string",
            "description": "Full size image link"
          },
          "thumbnailUrl": {
            "type": "string",
            "description": "Thumbnail image link (240px)"
          },
          "mediumSizeUrl": {
            "type": "string",
            "description": "Medium size image link (480px)"
          },
          "largeSizeUrl": {
            "type": "string",
            "description": "Large size image link (1280px)"
          }
        },
        "description": "Image links.",
        "xml": {
          "name": "image",
          "namespace": "https://api.rezdy.com/v1"
        }
      },
      "PriceOption": {
        "type": "object",
        "properties": {
          "price": {
            "type": "number",
            "description": "Price amount (I.e. \"200.00\")",
            "format": "float"
          },
          "label": {
            "type": "string",
            "description": "Label for this price (I.e. \"Adult\", \"Child\")"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "deprecated": true
          },
          "seatsUsed": {
            "type": "integer",
            "description": "How many seats one quantity of this price willuse. Used for availability calculations. For example 1 quantity of \"Family of 4\" will use 4 seats.",
            "format": "int32"
          },
          "minQuantity": {
            "type": "integer",
            "description": "Min booking quantity for the product price option. Can be specified, if the price option is fixed or a group type. For a successful booking of the product, the number of participants for this price option have to be greater or equal than this value.",
            "format": "int32"
          },
          "maxQuantity": {
            "type": "integer",
            "description": "Max booking quantity for the product price option. Can be specified, if the price option is fixed or a grouptype. For a successful booking of the product, the number of participants for this price option have to be lesser or equal than this value.",
            "format": "int32"
          },
          "priceGroupType": {
            "type": "string",
            "description": "If this price is for a group, is the price for the whole group (TOTAL) or per quantity (EACH)",
            "enum": [
              "EACH",
              "TOTAL"
            ]
          },
          "productCode": {
            "type": "string",
            "description": "Product code to which the price options belongs to. Since Rezdy introduced shared availability option for products, the product sessions can contain price overrides for all of the products, which share the sessions. Therefore it is necessary to filer only the price options matching the chosen product code on the client side, when processing /availability service responses."
          }
        },
        "description": "A Price Option belongs to a product or products session. It holds the price details for a specific price type.Products can have one or many price options (I.e. Adult, Child, Family, etc.)",
        "xml": {
          "name": "priceOption",
          "namespace": "https://api.rezdy.com/v1"
        }
      },
      "Product": {
        "required": [
          "bookingFields",
          "bookingMode",
          "confirmMode",
          "description",
          "priceOptions",
          "productCode",
          "quantityRequired",
          "shortDescription",
          "supplierId",
          "supplierName",
          "timezone",
          "unitLabel",
          "unitLabelPlural"
        ],
        "type": "object",
        "properties": {
          "productType": {
            "type": "string",
            "description": "Type of this product",
            "enum": [
              "ACTIVITY",
              "DAYTOUR",
              "MULTIDAYTOUR",
              "PRIVATE_TOUR",
              "TICKET",
              "RENTAL",
              "CHARTER",
              "EVENT",
              "GIFT_CARD",
              "TRANSFER",
              "LESSON",
              "MERCHANDISE",
              "CUSTOM"
            ]
          },
          "name": {
            "type": "string",
            "description": "Product name "
          },
          "shortDescription": {
            "type": "string",
            "description": "Product description is between 15 and 240 characters "
          },
          "description": {
            "type": "string",
            "description": "Long product description, is between 100 and 15000 characters "
          },
          "productCode": {
            "type": "string",
            "description": "Rezdy-generated unique Product code. Used by agents and for API calls"
          },
          "internalCode": {
            "type": "string",
            "description": "Supplier-defined product code, used internally by the ther supplier"
          },
          "supplierId": {
            "type": "integer",
            "description": "Rezdy internal ID of the company supplying this product",
            "format": "int64"
          },
          "supplierAlias": {
            "type": "string",
            "description": "Alias of the company supplying this product. Company alias is a unique key and should be used to retrieve company details or in filters"
          },
          "supplierName": {
            "type": "string",
            "description": "Name of the company supplying this product"
          },
          "timezone": {
            "type": "string",
            "description": "Timezone used by this product and supplier. All Times must be converted to this timezone before being displayed to customers"
          },
          "advertisedPrice": {
            "type": "number",
            "description": "General price indication for this product. It represents a display price only, therefore it does not affect a real booking price, which is calculated based on the price options.",
            "format": "float"
          },
          "priceOptions": {
            "type": "array",
            "description": "List of price options belonging to this product. ",
            "xml": {
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/PriceOption"
            }
          },
          "currency": {
            "type": "string",
            "description": "Product prices Currency",
            "enum": [
              "AED",
              "ANG",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BGN",
              "BHD",
              "BOB",
              "BRL",
              "BYR",
              "CAD",
              "CHF",
              "CLP",
              "CNY",
              "COP",
              "CZK",
              "DKK",
              "EGP",
              "EUR",
              "FJD",
              "GBP",
              "GEL",
              "HKD",
              "HRK",
              "HUF",
              "IDR",
              "ILS",
              "INR",
              "ISK",
              "JOD",
              "JPY",
              "KES",
              "KRW",
              "KWD",
              "KZT",
              "LTL",
              "LVL",
              "MAD",
              "MKD",
              "MUR",
              "MXN",
              "MYR",
              "NGN",
              "NOK",
              "NZD",
              "PGK",
              "PHP",
              "OMR",
              "PEN",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "SAR",
              "SBD",
              "SEK",
              "SGD",
              "SRD",
              "SYP",
              "THB",
              "TOP",
              "TRY",
              "TWD",
              "UAH",
              "USD",
              "UYU",
              "VEF",
              "VUV",
              "WST",
              "XAF",
              "XOF",
              "XPF",
              "YER",
              "ZAR",
              "AFA",
              "ALL",
              "DZD",
              "AMD",
              "BSD",
              "BDT",
              "BBD",
              "BZD",
              "BMD",
              "BWP",
              "BND",
              "BIF",
              "KHR",
              "CVE",
              "KYD",
              "KMF",
              "BAM",
              "CRC",
              "CUP",
              "CYP",
              "DJF",
              "DOP",
              "XCD",
              "ECS",
              "SVC",
              "ERN",
              "EEK",
              "ETB",
              "FKP",
              "CDF",
              "GMD",
              "GHS",
              "GIP",
              "GTQ",
              "GNF",
              "GWP",
              "GYD",
              "HTG",
              "HNL",
              "IRR",
              "IQD",
              "JMD",
              "AOA",
              "KGS",
              "KIP",
              "LAK",
              "LBP",
              "LRD",
              "LYD",
              "LSL",
              "MOP",
              "MGF",
              "MGA",
              "MWK",
              "MVR",
              "MTL",
              "MRO",
              "MDL",
              "MNT",
              "MZM",
              "MMK",
              "NAD",
              "NPR",
              "NIO",
              "KPW",
              "PKR",
              "PAB",
              "RWF",
              "STD",
              "SCR",
              "SLL",
              "SKK",
              "SIT",
              "SOS",
              "LKR",
              "SHP",
              "SDD",
              "SZL",
              "TJS",
              "TZS",
              "TTD",
              "TND",
              "TMM",
              "UGX",
              "UZS",
              "VND",
              "YUM",
              "ZMK",
              "ZWD",
              "AFN",
              "MZN",
              "UYI",
              "ZMW",
              "GHC",
              "GGP",
              "IMP",
              "JEP",
              "TRL",
              "TVD"
            ]
          },
          "unitLabel": {
            "type": "string",
            "description": "What a quantity for this product is. It can be people (I.e. participant, passenger, diver) or objects (Kayak, Helicopter, etc.)"
          },
          "unitLabelPlural": {
            "type": "string",
            "description": "Plural version of unitLabel "
          },
          "quantityRequired": {
            "type": "boolean",
            "description": "Does this product require a quantity to be booked? True for most products. Can be false if the supplier can only provide one quantity at any single time. (I.e. private charters)"
          },
          "quantityRequiredMin": {
            "type": "integer",
            "description": "Represent the min booking quantity for the product. It can be setup for a supplier product. For a successful booking of the product, the total number of participants (regardless of pricing options), per booking item in the booking request, have to be greater or equal than this value.",
            "format": "int32"
          },
          "quantityRequiredMax": {
            "type": "integer",
            "description": "Represent the max booking quantity for the product. It can be setup for a supplier product. For a successful booking of the product, the total number of participants (regardless of pricing options), per booking item in the booking request, have to be lesser or equal than this value.",
            "format": "int32"
          },
          "images": {
            "type": "array",
            "description": "List of images showcasing this product",
            "xml": {
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/Image"
            }
          },
          "videos": {
            "type": "array",
            "description": "<p>List of videos showcasing this product <br/>Videos will only be returned when a single product is loaded.</p>",
            "xml": {
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/Video"
            }
          },
          "bookingMode": {
            "type": "string",
            "description": "Booking mode. Determines if this product needs availability or can be booked for any date.",
            "enum": [
              "NO_DATE",
              "DATE_ENQUIRY",
              "INVENTORY"
            ]
          },
          "charter": {
            "type": "boolean",
            "description": "A charter product means each session can only have a single booking, whatever the number of seats booked.  "
          },
          "terms": {
            "type": "string",
            "description": "Specific terms and conditions for this product"
          },
          "generalTerms": {
            "type": "string",
            "description": "General terms and conditions for all products from this supplier"
          },
          "extras": {
            "type": "array",
            "description": "List of extras that can be booked with this product",
            "xml": {
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/Extra"
            }
          },
          "bookingFields": {
            "type": "array",
            "description": "List of booking fields required for this product",
            "xml": {
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/BookingField"
            }
          },
          "xeroAccount": {
            "type": "string",
            "description": "Supplier Xero account for this product"
          },
          "confirmMode": {
            "type": "string",
            "description": "Confirmation mode. Determines if bookings are automatically confirmed or it they are pending",
            "enum": [
              "MANUAL",
              "AUTOCONFIRM",
              "MANUAL_THEN_AUTO",
              "AUTO_THEN_MANUAL"
            ]
          },
          "confirmModeMinParticipants": {
            "type": "integer",
            "description": "If confirmMode is MANUAL_THEN_AUTO or AUTO_THEN_MANUAL, determines the minimum number of participants per booking to trigger the change",
            "format": "int32"
          },
          "agentPaymentType": {
            "type": "string",
            "description": "If you are an agent, payment rules setup by the supplier for you to book this product ",
            "enum": [
              "PAYOUTS",
              "FULL_AGENT",
              "DOWNPAYMENT",
              "FULL_SUPPLIER",
              "NONE"
            ]
          },
          "maxCommissionPercent": {
            "type": "number",
            "description": "Maximum commission % you can receive as an agent, when the supplier setup a percentage (Automated payments Rezdy fee is not included in the amount)",
            "format": "float"
          },
          "maxCommissionNetRate": {
            "type": "number",
            "description": "Maximum commission amount you can receive as an agent, when the supplier setup a net rate (Automated payments Rezdy fee is not included in the amount)",
            "format": "float"
          },
          "commissionIncludesExtras": {
            "type": "boolean",
            "description": "True if agent receive commission from extras, false otherwise."
          },
          "cancellationPolicyDays": {
            "type": "integer",
            "description": " Supplier's Cancellation policy. Number of days before the tour a cancellation is allowed with full refund.<br>This is only used for automated payments (PAYOUTS) bookings",
            "format": "int32"
          },
          "dateCreated": {
            "type": "string",
            "description": "The product creation date",
            "format": "date-time"
          },
          "minimumNoticeMinutes": {
            "type": "integer",
            "description": "* Minimum book ahead internal before session start time in minutes.",
            "format": "int64"
          },
          "durationMinutes": {
            "type": "integer",
            "description": "* Duration of the product in minutes. ",
            "format": "int64"
          },
          "dateUpdated": {
            "type": "string",
            "description": "* The date of the last product update",
            "format": "date-time"
          },
          "pickupId": {
            "type": "integer",
            "description": "* If pickups are configured for this product, the field will contain the id of the pickup location list created by the supplier.",
            "format": "int64"
          },
          "locationAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional information for the product, that should be sent after a booking is completed (i.e. by email) to the customer. Useful for integration, when manual control of the entire customer booking experience is wanted, and the automatic confirmation e-mail from Rezdy had been suppressed.  "
          },
          "languages": {
            "uniqueItems": true,
            "type": "array",
            "description": "List of product languages. The format of the language is ISO 639 two-letter code with BCP 47 language variants, separated by underscore e.g. en_au.",
            "items": {
              "type": "string",
              "description": "List of product languages. The format of the language is ISO 639 two-letter code with BCP 47 language variants, separated by underscore e.g. en_au."
            }
          },
          "tags": {
            "uniqueItems": true,
            "type": "array",
            "description": "List of tags related to the product. The format is [TAG_TYPE]:[TAG_VALUE] e.g. TYPE:ACTIVITY, CATEGORY:ABSEILING, INTENSITY:RELAXED, ACCESSIBILITY:VISION_IMPAIRED",
            "items": {
              "type": "string",
              "description": "List of tags related to the product. The format is [TAG_TYPE]:[TAG_VALUE] e.g. TYPE:ACTIVITY, CATEGORY:ABSEILING, INTENSITY:RELAXED, ACCESSIBILITY:VISION_IMPAIRED"
            }
          },
          "taxes": {
            "type": "array",
            "description": "List of taxes/fees associated with the product",
            "items": {
              "$ref": "#/components/schemas/Tax"
            }
          },
          "productSeoTags": {
            "type": "array",
            "description": "This will store product meta data such as title and description",
            "items": {
              "$ref": "#/components/schemas/ProductSeoTag"
            }
          },
          "waitListingEnabled": {
            "type": "boolean",
            "description": "Signifies that customers will still be able to book this product even when there is not enough availability. Orders will have \"On Hold\" status, and no payment will be processed"
          },
          "qrCodeType": {
            "type": "string",
            "description": "Specifies the method how QR Codes will be generated for this product. Valid types are:<br><li>INTERNAL: QR Codes will be generated by rezdy for each participant when an order is created for this product</li><li>EXTERNAL: QR Codes will be randomly taken from a list of imported QR Codes</li><p>If nothing is specified, then no QR Codes will be generated when an order is created for this product",
            "enum": [
              "INTERNAL",
              "EXTERNAL"
            ]
          },
          "barcodeOutputType": {
            "type": "string",
            "description": "Specifies how to output the barcodes when this product is booked. Valid types are:<br><li>PARTICIPANT: Barcodes will be generated by rezdy for each participant when an booking is created for this product</li><li>ORDER: Barcodes will be generated by rezdy per booking</li>",
            "enum": [
              "PARTICIPANT",
              "ORDER"
            ]
          },
          "bookingUrl": {
            "type": "string",
            "description": "The URL for booking this product."
          },
          "apiBookingSupported": {
            "type": "boolean"
          },
          "multiProductBookingSupported": {
            "type": "boolean"
          }
        },
        "description": "Product object. Holds general details and settings of a specific tour, activity or event.",
        "xml": {
          "name": "product",
          "namespace": "https://api.rezdy.com/v1"
        }
      },
      "ProductSeoTag": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID of Tag",
            "format": "int64"
          },
          "metaType": {
            "type": "string",
            "description": "Type of Tag",
            "enum": [
              "META_NAME",
              "META_PROPERTY",
              "LINK_REL",
              "TITLE",
              "NOINDEX",
              "REL_CANONICAL"
            ]
          },
          "attrKey": {
            "type": "string",
            "description": "Value to put in the \"key\" attribute (depending on type it could be name, property or rel)"
          },
          "attrValue": {
            "type": "string",
            "description": "Value to put in the \"value\" attribute (depending on type it could be content or href)"
          },
          "productCode": {
            "type": "string",
            "description": "Product's code this seo tag belongs to"
          }
        },
        "description": "Product Seo tags.",
        "xml": {
          "name": "ProductSeoTag",
          "namespace": "https://api.rezdy.com/v1"
        }
      },
      "ResponseProduct": {
        "required": [
          "requestStatus"
        ],
        "type": "object",
        "properties": {
          "requestStatus": {
            "$ref": "#/components/schemas/RequestStatus"
          },
          "product": {
            "$ref": "#/components/schemas/Product"
          }
        },
        "xml": {
          "name": "response",
          "namespace": "https://api.rezdy.com/v1"
        }
      },
      "Tax": {
        "type": "object",
        "properties": {
          "supplierId": {
            "type": "integer",
            "description": "Rezdy internal ID of the company applying this tax",
            "format": "int64"
          },
          "label": {
            "type": "string",
            "description": "Name/description of the tax"
          },
          "taxFeeType": {
            "type": "string",
            "description": "Indicate Fee or Tax",
            "enum": [
              "TAX",
              "FEE"
            ]
          },
          "taxType": {
            "type": "string",
            "description": "<b>PERCENT: </b>The tax will be a percentage of the order total.<br><b>FIXED_PER_QUANTITY: </b>The tax will be a fixed amount e.g. $10 per quantity.<br><b>FIXED_PER_ORDER: </b>The tax will be a fixed amount e.g. $10 per booking item.<br><b>FIXED_PER_DURATION: </b>The tax will be a fixed amount e.g. $10 per duration unit.<br>",
            "enum": [
              "PERCENT",
              "FIXED_PER_QUANTITY",
              "FIXED_PER_ORDER",
              "FIXED_PER_DURATION"
            ]
          },
          "taxPercent": {
            "type": "number",
            "description": "Percentage value of the fee/tax. This field will only contain a value if the taxType is PERCENT",
            "format": "float"
          },
          "taxAmount": {
            "type": "number",
            "description": "The tax amount. This field will only contain a value if the taxType is one of the following: FIXED_PER_QUANTITY, FIXED_PER_ORDER, FIXED_PER_DURATION",
            "format": "float"
          },
          "priceInclusive": {
            "type": "boolean",
            "description": "Whether the tax is included in the price or not. This field will be displayed if the taxType is PERCENT <br>E.g. A $100 item with price INCLUSIVE tax of 10% will result in a $10 tax as part of the $100. A $100 item with price EXCLUSIVE tax of 10% will result in a $10 tax on top of the $100."
          },
          "compound": {
            "type": "boolean",
            "description": "Whether a stacked tax with the specified percent is applied. <br> e.g. A $100 item with an exclusive tax of %10 will result in the price being $110. If compound is true, then an addition %10 of $110 will be added as tax."
          }
        },
        "description": "Tax object. Holds information such as the tax amount applied to an order",
        "xml": {
          "name": "Tax",
          "namespace": "https://api.rezdy.com/v1"
        }
      },
      "Video": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "video id"
          },
          "platform": {
            "type": "string",
            "description": "Video platform (youtube, vimeo, etc …)"
          },
          "url": {
            "type": "string",
            "description": "Video url"
          }
        },
        "description": "Video links.",
        "xml": {
          "name": "video",
          "namespace": "https://api.rezdy.com/v1"
        }
      },
      "PickupList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID of this pickup",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "description": "Name of the pickup location list"
          },
          "additionalNotes": {
            "type": "string",
            "description": "Global additional instructions for this pick up list"
          },
          "otherLocationInstructions": {
            "type": "string",
            "description": "Instructions for other locations that are not available in the pickupLocations list. E.g. For customer pick up location requests, a sample instruction for this field would be: 'We will contact you to confirm your pickup location'"
          },
          "pickupLocations": {
            "type": "array",
            "description": "List of all associated pickup locations for this list",
            "items": {
              "$ref": "#/components/schemas/PickupLocation"
            }
          }
        },
        "description": "PickupList object. Contains a list of pickup locations.",
        "xml": {
          "name": "pickupList",
          "namespace": "https://api.rezdy.com/v1"
        }
      },
      "PickupLocation": {
        "type": "object",
        "properties": {
          "locationName": {
            "type": "string",
            "description": "<p>Pickup location name - free text name for the location.</p>In a booking item object, it represents customer's pickup location name (if configured on product). It can be one name from pickup locations list of the booked product, or free text in case of the other pickup location option.<p>The value will be ignored, if the product does not allow pickups or if the location name does not match one of the product's pickup locations and 'other' pickup option is not enabled for the product pickup.</p>"
          },
          "address": {
            "type": "string",
            "description": "Address of the pickup location<br>In a booking item object, it represents a chosen pickup address for the booked item."
          },
          "latitude": {
            "type": "number",
            "description": "google maps calculated latitude of the pickup address",
            "format": "double"
          },
          "longitude": {
            "type": "number",
            "description": "google maps calculated latitude of the pickup address",
            "format": "double"
          },
          "minutesPrior": {
            "type": "integer",
            "description": "Pickup time in minutes, prior to the tour start time.",
            "format": "int32"
          },
          "additionalInstructions": {
            "type": "string",
            "description": "Additional instructions for the pickup location."
          },
          "pickupTime": {
            "type": "string",
            "description": "<p>Present only in booking service response</p>In a booking item object, it represents a calculated pickup time, in supplier's local timezone. Shown when the pickup was chosen for the booked item and pickup location contains duration."
          },
          "pickupInstructions": {
            "type": "string",
            "description": "<p>Present only in booking service response</p>Chosen pickup instructions (general and location specific). Shown when the pickup was chosen for the booked item."
          }
        },
        "description": "PickupLocation object. Holds information about the a pickup location from the pickup list configured for the product.",
        "xml": {
          "name": "pickupLocation",
          "namespace": "https://api.rezdy.com/v1"
        }
      },
      "ResponsePickupList": {
        "required": [
          "requestStatus"
        ],
        "type": "object",
        "properties": {
          "requestStatus": {
            "$ref": "#/components/schemas/RequestStatus"
          },
          "pickupList": {
            "$ref": "#/components/schemas/PickupList"
          }
        },
        "xml": {
          "name": "response",
          "namespace": "https://api.rezdy.com/v1"
        }
      },
      "ResponseNoData": {
        "required": [
          "requestStatus"
        ],
        "type": "object",
        "properties": {
          "requestStatus": {
            "$ref": "#/components/schemas/RequestStatus"
          }
        },
        "xml": {
          "name": "response",
          "namespace": "https://api.rezdy.com/v1"
        }
      },
      "ExtraRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID of the extra",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "description": "Name of the extra"
          },
          "description": {
            "type": "string",
            "description": "Description of the extra"
          },
          "price": {
            "type": "number",
            "description": "Price for a single quantity of this extra",
            "format": "float"
          },
          "extraPriceType": {
            "type": "string",
            "description": "Price type for this extra. Defines what quantities are allowed and how their price is calculated",
            "enum": [
              "ANY",
              "FIXED",
              "QUANTITY"
            ]
          }
        },
        "description": "Partial optional service or item that can be purchased when booking a specific product",
        "xml": {
          "name": "extra",
          "namespace": "https://api.rezdy.com/v1"
        }
      },
      "ResponseExtra": {
        "required": [
          "requestStatus"
        ],
        "type": "object",
        "properties": {
          "requestStatus": {
            "$ref": "#/components/schemas/RequestStatus"
          },
          "extra": {
            "$ref": "#/components/schemas/ExtraRequest"
          }
        },
        "xml": {
          "name": "response",
          "namespace": "https://api.rezdy.com/v1"
        }
      },
      "Booking update": {
        "type": "object",
        "properties": {
          "orderNumber": {
            "type": "string",
            "description": "Order number. This is the number you should give to customers and print on booking confirmations. Order number is generated by the system, therefore, even if it is specified in the booking request, it will be overwritten."
          },
          "status": {
            "type": "string",
            "description": "Status of this booking",
            "enum": [
              "PROCESSING",
              "NEW",
              "ON_HOLD",
              "PENDING_SUPPLIER",
              "PENDING_CUSTOMER",
              "CONFIRMED",
              "CANCELLED",
              "ABANDONED_CART"
            ]
          },
          "createdBy": {
            "$ref": "#/components/schemas/User"
          },
          "resellerId": {
            "type": "integer",
            "description": "Rezdy internal ID of the agent company attached to this booking",
            "format": "int64"
          },
          "resellerUser": {
            "$ref": "#/components/schemas/User"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "items": {
            "type": "array",
            "description": "List of items in this booking. A booking can contain multiple products. Each BookingItem is a separate product with its own set of quantities and participant details.",
            "xml": {
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/BookingItemCreate"
            }
          },
          "internalNotes": {
            "type": "string",
            "description": "Comments only visible internally by the supplier"
          },
          "fields": {
            "type": "array",
            "description": "List of custom fields that are required \"once per booking\" by all the products in this booking ",
            "xml": {
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/BookingField"
            }
          },
          "resellerReference": {
            "type": "string",
            "description": "External reseller reference, can be used to pass internal booking number. This reference will be shown to a supplier, also it will appear on reports and can be used to filter orders. Maxiumum number of characters is 30"
          },
          "resellerComments": {
            "type": "string",
            "description": "Comments only visible by the agent and the supplier. This should be used by the agent to send voucher numbers/redemption codes to suppliers."
          }
        },
        "description": "Booking update object used to update a booking in Rezdy's system.",
        "xml": {
          "name": "booking",
          "namespace": "https://api.rezdy.com/v1"
        }
      },
      "BookingItemCreate": {
        "type": "object",
        "properties": {
          "productCode": {
            "type": "string",
            "description": "Unique Rezdy code of the product in this BookingItem"
          },
          "startTime": {
            "type": "string",
            "description": "Start time of the session for this BookingItem",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "description": "End time of the session for this BookingItem",
            "format": "date-time"
          },
          "startTimeLocal": {
            "type": "string",
            "description": "Start time of the session for this BookingItem in supplier's local timezone."
          },
          "endTimeLocal": {
            "type": "string",
            "description": "End time of the session for this BookingItem in supplier's local timezone."
          },
          "quantities": {
            "type": "array",
            "description": "List of quantities booked by this item. Each Quantity must be linked to a Product price option via its label or ID.If the product only has one price option, only 'Quantity.value' is required.",
            "xml": {
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/Quantity"
            }
          },
          "amount": {
            "type": "number",
            "description": "Amount charged for this BookingItem. This is automatically generated based on quantities, but you can override the amount by entering a value. If automated payment method is used for the booked product, the Amount of the booked item<br>has to be grater than Net Rate sum of the booked quantities and Rezdy processing fee.",
            "format": "float"
          },
          "extras": {
            "type": "array",
            "description": "List of Extras booked with this product",
            "xml": {
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/Extra"
            }
          },
          "participants": {
            "type": "array",
            "description": "List of participants. Each participant object contains all the booking fields for a single participant. ",
            "xml": {
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/Participant"
            }
          },
          "subtotal": {
            "type": "number",
            "description": "Subtotal is the BookingItem.amount plus extras costs plus taxes and fees",
            "format": "float"
          },
          "pickupLocation": {
            "$ref": "#/components/schemas/PickupLocation"
          }
        },
        "description": "An item inside a booking request to specify a unique product/startTime combination",
        "xml": {
          "name": "item",
          "namespace": "https://api.rezdy.com/v1"
        }
      },
      "Customer": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Rezdy internal ID of the customer",
            "format": "int64"
          },
          "firstName": {
            "type": "string",
            "description": "First name"
          },
          "middleName": {
            "type": "string",
            "description": "Middle name"
          },
          "lastName": {
            "type": "string",
            "description": "Last Name"
          },
          "name": {
            "type": "string",
            "description": "Full name - generated from first/middle/last names"
          },
          "email": {
            "type": "string",
            "description": "Email"
          },
          "companyName": {
            "type": "string",
            "description": "Company name"
          },
          "phone": {
            "type": "string",
            "description": "Preferred Phone number"
          },
          "mobile": {
            "type": "string",
            "description": "Mobile phone number"
          },
          "fax": {
            "type": "string",
            "description": "Fax number"
          },
          "skype": {
            "type": "string",
            "description": "Skype alias"
          },
          "dob": {
            "type": "string",
            "description": "Date of birth",
            "format": "date-time"
          },
          "preferredLanguage": {
            "type": "string",
            "description": "Preferred language. Should be a 2 letter ISO country code"
          },
          "newsletter": {
            "type": "boolean",
            "description": "Subscribe to the newsletter"
          },
          "marketing": {
            "type": "boolean",
            "description": "Agree to receive marketing emails"
          },
          "aboutUs": {
            "type": "string",
            "description": "How did you hear about us?"
          },
          "title": {
            "type": "string",
            "description": "Title",
            "enum": [
              "MR",
              "MS",
              "MRS",
              "MISS"
            ]
          },
          "gender": {
            "type": "string",
            "description": "Gender: MALE or FEMALE",
            "enum": [
              "MALE",
              "FEMALE"
            ]
          },
          "addressLine": {
            "type": "string",
            "description": "Address"
          },
          "addressLine2": {
            "type": "string",
            "description": "Extended Address"
          },
          "postCode": {
            "type": "string",
            "description": "Postcode / ZIP"
          },
          "city": {
            "type": "string",
            "description": "City/Town/Suburb"
          },
          "state": {
            "type": "string",
            "description": "State/County/Region"
          },
          "countryCode": {
            "type": "string",
            "description": "2 letter ISO country code"
          }
        },
        "description": "The customer is the person making the booking, and most of the time paying for it.<br>It differs from Participants, who are the people attending a tour",
        "xml": {
          "name": "customer",
          "namespace": "https://api.rezdy.com/v1"
        }
      },
      "Participant": {
        "type": "object",
        "properties": {
          "fields": {
            "type": "array",
            "description": "List of BookingField for this participant",
            "xml": {
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/BookingField"
            }
          }
        },
        "description": "Details about a single participant for a single BookingItem.<br>The participant is a person attending a tour. It differs from the Customer, who is the person making the booking and most of the time paying for it. ",
        "xml": {
          "name": "participant",
          "namespace": "https://api.rezdy.com/v1"
        }
      },
      "Quantity": {
        "required": [
          "value"
        ],
        "type": "object",
        "properties": {
          "optionId": {
            "type": "integer",
            "description": "Price option ID",
            "format": "int64"
          },
          "optionLabel": {
            "type": "string",
            "description": "Price option label"
          },
          "optionPrice": {
            "type": "number",
            "description": "Price option price for a single quantity",
            "format": "float"
          },
          "value": {
            "type": "integer",
            "description": "Quantity actually booked",
            "format": "int32"
          },
          "commissionType": {
            "type": "string",
            "description": "Commission type used for this booking item quantity",
            "enum": [
              "NET",
              "COMMISSION"
            ]
          },
          "commissionValue": {
            "type": "number",
            "description": "If commissionType is NET, commissionValue is net amount, if commissionType is COMMISSION, commissionValue is percentage commission",
            "format": "float"
          }
        },
        "description": "Quantity of a single price option attached to a BookingItem.<ul><li>If the product only has 1 price option, only \"Quantity.value\" is required.</li><li>If the product has multiple price options, \"Quantity.optionLabel\" is also required.</li><li>It is recommended to use \"Quantity.optionLabel\" and optionally \"Quantity.optionPrice\" instead of \"Quantity.optionId\" because the latter can vary depending on the session booked.</li></ul>I.e. enter optionLabel = \"Adult\", optionPrice = 100 and value = \"2\" to book for 2 x Adults ticket for 100",
        "xml": {
          "name": "quantity",
          "namespace": "https://api.rezdy.com/v1"
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Unique Rezdy user code"
          },
          "firstName": {
            "type": "string",
            "description": "First name"
          },
          "lastName": {
            "type": "string",
            "description": "Last name"
          },
          "email": {
            "type": "string",
            "description": "Email"
          }
        },
        "description": "Internal Rezdy user details. This is a Rezdy application user who belongs to a Rezdy agent or supplier company.",
        "xml": {
          "name": "user",
          "namespace": "https://api.rezdy.com/v1"
        }
      },
      "Booking": {
        "type": "object",
        "properties": {
          "orderNumber": {
            "type": "string",
            "description": "Order number. This is the number you should give to customers and print on booking confirmations. Order number is generated by the system, therefore, even if it is specified in the booking request, it will be overwritten."
          },
          "status": {
            "type": "string",
            "description": "Status of this booking",
            "enum": [
              "PROCESSING",
              "NEW",
              "ON_HOLD",
              "PENDING_SUPPLIER",
              "PENDING_CUSTOMER",
              "CONFIRMED",
              "CANCELLED",
              "ABANDONED_CART"
            ]
          },
          "supplierId": {
            "type": "integer",
            "description": "Rezdy internal ID of the company supplying this product",
            "format": "int64"
          },
          "supplierName": {
            "type": "string",
            "description": "Name of the company supplying this product"
          },
          "supplierAlias": {
            "type": "string",
            "description": "Alias of the company supplying this product"
          },
          "createdBy": {
            "$ref": "#/components/schemas/User"
          },
          "resellerId": {
            "type": "integer",
            "description": "Rezdy internal ID of the agent company attached to this booking",
            "format": "int64"
          },
          "resellerName": {
            "type": "string",
            "description": "Name of the agent company attached to this booking"
          },
          "resellerAlias": {
            "type": "string",
            "description": "Alias of the agent company attached to this booking"
          },
          "resellerUser": {
            "$ref": "#/components/schemas/User"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "items": {
            "type": "array",
            "description": "List of items in this booking. A booking can contain multiple products. Each BookingItem is a separate product with its own set of quantities and participant details.",
            "xml": {
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/BookingItem"
            }
          },
          "totalAmount": {
            "type": "number",
            "description": "Total booking amount",
            "format": "float"
          },
          "totalCurrency": {
            "type": "string",
            "description": "Booking Currency",
            "enum": [
              "AED",
              "ANG",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BGN",
              "BHD",
              "BOB",
              "BRL",
              "BYR",
              "CAD",
              "CHF",
              "CLP",
              "CNY",
              "COP",
              "CZK",
              "DKK",
              "EGP",
              "EUR",
              "FJD",
              "GBP",
              "GEL",
              "HKD",
              "HRK",
              "HUF",
              "IDR",
              "ILS",
              "INR",
              "ISK",
              "JOD",
              "JPY",
              "KES",
              "KRW",
              "KWD",
              "KZT",
              "LTL",
              "LVL",
              "MAD",
              "MKD",
              "MUR",
              "MXN",
              "MYR",
              "NGN",
              "NOK",
              "NZD",
              "PGK",
              "PHP",
              "OMR",
              "PEN",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "SAR",
              "SBD",
              "SEK",
              "SGD",
              "SRD",
              "SYP",
              "THB",
              "TOP",
              "TRY",
              "TWD",
              "UAH",
              "USD",
              "UYU",
              "VEF",
              "VUV",
              "WST",
              "XAF",
              "XOF",
              "XPF",
              "YER",
              "ZAR",
              "AFA",
              "ALL",
              "DZD",
              "AMD",
              "BSD",
              "BDT",
              "BBD",
              "BZD",
              "BMD",
              "BWP",
              "BND",
              "BIF",
              "KHR",
              "CVE",
              "KYD",
              "KMF",
              "BAM",
              "CRC",
              "CUP",
              "CYP",
              "DJF",
              "DOP",
              "XCD",
              "ECS",
              "SVC",
              "ERN",
              "EEK",
              "ETB",
              "FKP",
              "CDF",
              "GMD",
              "GHS",
              "GIP",
              "GTQ",
              "GNF",
              "GWP",
              "GYD",
              "HTG",
              "HNL",
              "IRR",
              "IQD",
              "JMD",
              "AOA",
              "KGS",
              "KIP",
              "LAK",
              "LBP",
              "LRD",
              "LYD",
              "LSL",
              "MOP",
              "MGF",
              "MGA",
              "MWK",
              "MVR",
              "MTL",
              "MRO",
              "MDL",
              "MNT",
              "MZM",
              "MMK",
              "NAD",
              "NPR",
              "NIO",
              "KPW",
              "PKR",
              "PAB",
              "RWF",
              "STD",
              "SCR",
              "SLL",
              "SKK",
              "SIT",
              "SOS",
              "LKR",
              "SHP",
              "SDD",
              "SZL",
              "TJS",
              "TZS",
              "TTD",
              "TND",
              "TMM",
              "UGX",
              "UZS",
              "VND",
              "YUM",
              "ZMK",
              "ZWD",
              "AFN",
              "MZN",
              "UYI",
              "ZMW",
              "GHC",
              "GGP",
              "IMP",
              "JEP",
              "TRL",
              "TVD"
            ]
          },
          "totalPaid": {
            "type": "number",
            "description": "Amount already paid",
            "format": "float"
          },
          "totalDue": {
            "type": "number",
            "description": "Amount still due for this booking",
            "format": "float"
          },
          "dateCreated": {
            "type": "string",
            "description": "Date this booking was created",
            "format": "date-time"
          },
          "dateUpdated": {
            "type": "string",
            "description": "Date this booking was last updated",
            "format": "date-time"
          },
          "dateConfirmed": {
            "type": "string",
            "description": "Date this booking was confirmed",
            "format": "date-time"
          },
          "datePaid": {
            "type": "string",
            "description": "Date this booking was fully paid",
            "format": "date-time"
          },
          "dateReconciled": {
            "type": "string",
            "description": "Date this booking was reconciled with the agent",
            "format": "date-time"
          },
          "comments": {
            "type": "string",
            "description": "Special requirements entered by the customer. Visible to both customer and supplier."
          },
          "internalNotes": {
            "type": "string",
            "description": "Comments only visible internally by the supplier"
          },
          "payments": {
            "type": "array",
            "description": "List of payments recorded for this booking",
            "xml": {
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/BookingPayment"
            }
          },
          "creditCard": {
            "$ref": "#/components/schemas/CreditCard"
          },
          "fields": {
            "type": "array",
            "description": "List of custom fields that are required \"once per booking\" by all the products in this booking ",
            "xml": {
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/BookingField"
            }
          },
          "source": {
            "type": "string",
            "description": "Source of this booking viewed from the supplier",
            "enum": [
              "ONLINE",
              "INTERNAL",
              "PARTNERS",
              "COMMUNITY",
              "MARKETPLACE",
              "MARKETPLACE_PREF_RATE",
              "API",
              "GOOGLE"
            ]
          },
          "sourceReferrer": {
            "type": "string",
            "description": "Referrer code "
          },
          "resellerSource": {
            "type": "string",
            "description": "Source of this booking viewed from the agent",
            "enum": [
              "ONLINE",
              "INTERNAL",
              "PARTNERS",
              "COMMUNITY",
              "MARKETPLACE",
              "MARKETPLACE_PREF_RATE",
              "API",
              "GOOGLE"
            ]
          },
          "sourceChannel": {
            "type": "string",
            "description": "Agent code defined by the supplier"
          },
          "resellerComments": {
            "type": "string",
            "description": "Comments only visible by the agent and the supplier. This should be used by the agent to send voucher numbers/redemption codes to suppliers."
          },
          "surcharge": {
            "type": "number",
            "description": "Credit card surcharge calculated for this booking",
            "format": "float"
          },
          "commission": {
            "type": "number",
            "description": "Calculated commission that the agent should receive for this booking ",
            "format": "float"
          },
          "vouchers": {
            "type": "array",
            "description": "List of vouchers (Gift cards) that have been redeemed to pay for this booking",
            "xml": {
              "wrapped": true
            },
            "items": {
              "type": "string",
              "description": "List of vouchers (Gift cards) that have been redeemed to pay for this booking",
              "xml": {
                "name": "voucher"
              }
            }
          },
          "coupon": {
            "type": "string",
            "description": "Promo code that has been applied to this booking"
          },
          "paymentOption": {
            "type": "string",
            "description": "Payment option selected by the customer when making an online booking",
            "enum": [
              "CREDITCARD",
              "PAYPAL",
              "BANKTRANSFER",
              "CASH",
              "INVOICE",
              "EXTERNAL",
              "ALIPAY"
            ]
          },
          "sendNotifications": {
            "type": "boolean",
            "description": "Flag to control if a booking confirmation email should be send to the customer after this booking is created.<br>This will also send other types of customer notifications when setup by the supplier (I.e. SMS, Gift cards) ",
            "default": true
          },
          "resellerReference": {
            "type": "string",
            "description": "External reseller reference, can be used to pass internal booking number. This reference will be shown to a supplier, also it will appear on reports and can be used to filter orders. Maxiumum number of characters is 30"
          },
          "barcodeType": {
            "type": "string",
            "description": "Declares the redemption code format customers will receive if the booking was created with barcodes.",
            "enum": [
              "TEXT",
              "CODE_39",
              "CODE_128",
              "QR_CODE",
              "EAN_8",
              "EAN_13",
              "ITF"
            ]
          }
        },
        "description": "Booking object. Lists all the possible fields for all product types and scenarios. Most of them are not required when sending a new booking.<br>A single Booking can be used to book multiple products, each of them being a BookingItem. All the products of one booking have to be from the same supplier.",
        "xml": {
          "name": "booking",
          "namespace": "https://api.rezdy.com/v1"
        }
      },
      "BookingItem": {
        "type": "object",
        "properties": {
          "productName": {
            "type": "string",
            "description": "Name of the product in this BookingItem "
          },
          "productCode": {
            "type": "string",
            "description": "Unique Rezdy code of the product in this BookingItem"
          },
          "startTime": {
            "type": "string",
            "description": "Start time of the session for this BookingItem",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "description": "End time of the session for this BookingItem",
            "format": "date-time"
          },
          "startTimeLocal": {
            "type": "string",
            "description": "Start time of the session for this BookingItem in supplier's local timezone."
          },
          "endTimeLocal": {
            "type": "string",
            "description": "End time of the session for this BookingItem in supplier's local timezone."
          },
          "quantities": {
            "type": "array",
            "description": "List of quantities booked by this item. Each Quantity must be linked to a Product price option via its label or ID.If the product only has one price option, only 'Quantity.value' is required.",
            "xml": {
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/Quantity"
            }
          },
          "totalQuantity": {
            "type": "integer",
            "description": "Total quantity booked by all the Quantity. For example if the booking is for 2 Adults and 1 Child, totalQuantity will be 3.",
            "format": "int32"
          },
          "amount": {
            "type": "number",
            "description": "Amount charged for this BookingItem. This is automatically generated based on quantities, but you can override the amount by entering a value. If automated payment method is used for the booked product, the Amount of the booked item<br>has to be grater than Net Rate sum of the booked quantities and Rezdy processing fee.",
            "format": "float"
          },
          "extras": {
            "type": "array",
            "description": "List of Extras booked with this product",
            "xml": {
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/Extra"
            }
          },
          "participants": {
            "type": "array",
            "description": "List of participants. Each participant object contains all the booking fields for a single participant. ",
            "xml": {
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/Participant"
            }
          },
          "transferFrom": {
            "type": "string",
            "description": "From location. Only used by Shuttle and Transfer products"
          },
          "transferTo": {
            "type": "string",
            "description": "To location. Only used by Shuttle and Transfer products"
          },
          "transferReturn": {
            "type": "boolean",
            "description": "Is this a one-way (false) or a return trip (true)? Only used by Shuttle and Transfer products"
          },
          "subtotal": {
            "type": "number",
            "description": "Subtotal is the BookingItem.amount plus extras costs plus taxes and fees",
            "format": "float"
          },
          "pickupLocation": {
            "$ref": "#/components/schemas/PickupLocation"
          },
          "vouchers": {
            "type": "array",
            "description": "List of vouchers created by this booking item - when the product is bought as a gift or is a gift card",
            "xml": {
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/Voucher"
            }
          },
          "totalItemTax": {
            "type": "number",
            "description": "Total tax applied to this booking item.",
            "format": "float"
          }
        },
        "description": "A BookingItem is a unique product/startTime combination in a booking",
        "xml": {
          "name": "item",
          "namespace": "https://api.rezdy.com/v1"
        }
      },
      "BookingPayment": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of payment",
            "enum": [
              "PAYPAL",
              "CASH",
              "CREDITCARD",
              "BANKTRANSFER",
              "BANKCHEQUE",
              "REFUND",
              "VOUCHER",
              "PROMO_CODE",
              "FREE",
              "OTHER",
              "INVOICE",
              "REZDY_PAYOUTS",
              "ALIPAY"
            ]
          },
          "amount": {
            "type": "number",
            "description": "Payment amount",
            "format": "float"
          },
          "currency": {
            "type": "string",
            "description": "Currency for this payment<br>Payments must be in the same currency than the order's totalCurrency.",
            "enum": [
              "AED",
              "ANG",
              "ARS",
              "AUD",
              "AWG",
              "AZN",
              "BGN",
              "BHD",
              "BOB",
              "BRL",
              "BYR",
              "CAD",
              "CHF",
              "CLP",
              "CNY",
              "COP",
              "CZK",
              "DKK",
              "EGP",
              "EUR",
              "FJD",
              "GBP",
              "GEL",
              "HKD",
              "HRK",
              "HUF",
              "IDR",
              "ILS",
              "INR",
              "ISK",
              "JOD",
              "JPY",
              "KES",
              "KRW",
              "KWD",
              "KZT",
              "LTL",
              "LVL",
              "MAD",
              "MKD",
              "MUR",
              "MXN",
              "MYR",
              "NGN",
              "NOK",
              "NZD",
              "PGK",
              "PHP",
              "OMR",
              "PEN",
              "PLN",
              "PYG",
              "QAR",
              "RON",
              "RSD",
              "RUB",
              "SAR",
              "SBD",
              "SEK",
              "SGD",
              "SRD",
              "SYP",
              "THB",
              "TOP",
              "TRY",
              "TWD",
              "UAH",
              "USD",
              "UYU",
              "VEF",
              "VUV",
              "WST",
              "XAF",
              "XOF",
              "XPF",
              "YER",
              "ZAR",
              "AFA",
              "ALL",
              "DZD",
              "AMD",
              "BSD",
              "BDT",
              "BBD",
              "BZD",
              "BMD",
              "BWP",
              "BND",
              "BIF",
              "KHR",
              "CVE",
              "KYD",
              "KMF",
              "BAM",
              "CRC",
              "CUP",
              "CYP",
              "DJF",
              "DOP",
              "XCD",
              "ECS",
              "SVC",
              "ERN",
              "EEK",
              "ETB",
              "FKP",
              "CDF",
              "GMD",
              "GHS",
              "GIP",
              "GTQ",
              "GNF",
              "GWP",
              "GYD",
              "HTG",
              "HNL",
              "IRR",
              "IQD",
              "JMD",
              "AOA",
              "KGS",
              "KIP",
              "LAK",
              "LBP",
              "LRD",
              "LYD",
              "LSL",
              "MOP",
              "MGF",
              "MGA",
              "MWK",
              "MVR",
              "MTL",
              "MRO",
              "MDL",
              "MNT",
              "MZM",
              "MMK",
              "NAD",
              "NPR",
              "NIO",
              "KPW",
              "PKR",
              "PAB",
              "RWF",
              "STD",
              "SCR",
              "SLL",
              "SKK",
              "SIT",
              "SOS",
              "LKR",
              "SHP",
              "SDD",
              "SZL",
              "TJS",
              "TZS",
              "TTD",
              "TND",
              "TMM",
              "UGX",
              "UZS",
              "VND",
              "YUM",
              "ZMK",
              "ZWD",
              "AFN",
              "MZN",
              "UYI",
              "ZMW",
              "GHC",
              "GGP",
              "IMP",
              "JEP",
              "TRL",
              "TVD"
            ]
          },
          "date": {
            "type": "string",
            "description": "Date this payment was processed",
            "format": "date-time"
          },
          "label": {
            "type": "string",
            "description": "Reference or transaction code"
          },
          "recipient": {
            "type": "string",
            "description": "Payment recipient.",
            "enum": [
              "SUPPLIER",
              "RESELLER",
              "REZDY"
            ]
          }
        },
        "description": "Record of an already processed payment.",
        "xml": {
          "name": "payment",
          "namespace": "https://api.rezdy.com/v1"
        }
      },
      "CreditCard": {
        "type": "object",
        "properties": {
          "cardName": {
            "type": "string",
            "description": "Full name on the credit card"
          },
          "cardType": {
            "type": "string",
            "description": "Type of card",
            "enum": [
              "VISA",
              "MASTERCARD",
              "AMEX",
              "DINERS",
              "DISCOVER",
              "JCB"
            ]
          },
          "expiryMonth": {
            "type": "string",
            "description": "<ul>Expiry month of the card<li>01 : January</li><li>02 : February</li><li>03 : March</li><li>04 : April</li><li>05 : May</li><li>06 : June</li><li>07 : July</li><li>08 : August</li><li>09 : September</li><li>10 : October</li><li>11 : November</li><li>12 : December</li></ul>"
          },
          "expiryYear": {
            "type": "string",
            "description": "Expiry year of the card in 4 digits<br>(i.e 2015 / 2016 ...)"
          },
          "cardNumber": {
            "type": "string",
            "description": "Full Credit card number, no spaces or special characters"
          },
          "cardSecurityNumber": {
            "type": "string",
            "description": "Credit Card CVV / CVN"
          },
          "cardToken": {
            "type": "string",
            "description": " Credit card Token generated by client libraries. Use instead of other card attributes for supported gateways.<br>For example when using Stripe.js, only send the cardToken attribute. Do not send cardNumber or any other attribute."
          },
          "cardCountry": {
            "type": "string"
          }
        },
        "description": " Credit card details.<p>Used to send payment details for a booking</p>",
        "xml": {
          "name": "creditCard",
          "namespace": "https://api.rezdy.com/v1"
        }
      },
      "ResponseBooking": {
        "required": [
          "requestStatus"
        ],
        "type": "object",
        "properties": {
          "requestStatus": {
            "$ref": "#/components/schemas/RequestStatus"
          },
          "booking": {
            "$ref": "#/components/schemas/Booking"
          }
        },
        "xml": {
          "name": "response",
          "namespace": "https://api.rezdy.com/v1"
        }
      },
      "Voucher": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Unique voucher code"
          },
          "status": {
            "type": "string",
            "description": "Current voucher status",
            "enum": [
              "ISSUED",
              "REDEEMED",
              "PARTIALLY_REDEEMED",
              "EXPIRED"
            ]
          },
          "internalReference": {
            "type": "string",
            "description": "Agent code attached to this vouche"
          },
          "internalNotes": {
            "type": "string",
            "description": "Internal notes only visible by the supplier of this voucher"
          },
          "issueDate": {
            "type": "string",
            "description": "Date this voucher was created",
            "format": "date-time"
          },
          "expiryDate": {
            "type": "string",
            "description": "Date this voucher will expire",
            "format": "date-time"
          },
          "value": {
            "type": "number",
            "description": "The value of the voucher. There are different representations of the value - nominal, percentage or empty - in case of the payment for the whole product, see valueType",
            "format": "float"
          },
          "valueType": {
            "type": "string",
            "description": "<dl><dt>VALUE_LIMITPRODUCT</dt><dd>Voucher nominal value discount, limited to a certain product</dd><dt>VALUE</dt><dd>Voucher nominal value discount for any product</dd><dt>VALUE_LIMITCATALOG</dt><dd>Voucher nominal value discount, limited to a certain product category</dd><dt>PERCENT_LIMITPRODUCT</dt><dd>Voucher percentage value discount, limited to a certain product</dd><dt>PERCENT</dt><dd>Voucher percentage value discount for any product</dd><dt>PERCENT_LIMITCATALOG</dt><dd>Voucher percentage value discount, limited to a certain product category</dd><dt>PRODUCT</dt><dd>Voucher can be used as a payment method for a specific product</dd></dl>",
            "enum": [
              "VALUE_LIMITPRODUCT",
              "VALUE",
              "VALUE_LIMITCATALOG",
              "PERCENT_LIMITPRODUCT",
              "PERCENT",
              "PERCENT_LIMITCATALOG",
              "PRODUCT"
            ]
          },
          "sourceOrder": {
            "type": "string",
            "description": "If the voucher was generated from an order - by purchasing a gift card or product as a gift card, it will contain the orderNumber which created the voucher. Null for vouchers manually created by user."
          }
        },
        "description": "A Voucher is a gift card that can be used to pay for a booking.<br>It can also be generated by a booking when a customer buys a Gift Card.<br>This is not a \"confirmation voucher\", you should use Booking.orderNumber as a confirmation code to show to customers.",
        "xml": {
          "name": "voucher",
          "namespace": "https://api.rezdy.com/v1"
        }
      },
      "SessionUpdateRequest": {
        "type": "object",
        "properties": {
          "seats": {
            "type": "integer",
            "description": "Update the total number of seats for this session. The total seats does not change after a booking is made. The total number of seats can not be less than 0.",
            "format": "int32"
          },
          "priceOptions": {
            "type": "array",
            "description": "List of price options, which will override the product level price. Price options have to be a subset of the product price options, thus you can not create new price options, use product update service to do so.",
            "items": {
              "$ref": "#/components/schemas/PriceOption"
            }
          },
          "seatsAvailable": {
            "type": "integer",
            "description": "Update the current availability for this session. The session total number of seats after updating the seats available can not be less than 0.",
            "format": "int32"
          },
          "allDay": {
            "type": "boolean",
            "description": "If true, this session lasts all day and no time should be shown to customers. Technically the session will be from midnight to midnight."
          }
        },
        "description": "Updates session request data.",
        "xml": {
          "name": "session",
          "namespace": "https://api.rezdy.com/v1"
        }
      },
      "ResponseSession": {
        "required": [
          "requestStatus"
        ],
        "type": "object",
        "properties": {
          "requestStatus": {
            "$ref": "#/components/schemas/RequestStatus"
          },
          "session": {
            "$ref": "#/components/schemas/Session"
          }
        },
        "xml": {
          "name": "response",
          "namespace": "https://api.rezdy.com/v1"
        }
      },
      "Session": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Rezdy internal ID for this session",
            "format": "int64"
          },
          "productCode": {
            "type": "string",
            "description": "Rezdy unique productCode linked to this session"
          },
          "startTime": {
            "type": "string",
            "description": "Start Time of this session. This time should be used when showing customers the booking date/time. It should be sent in BookingItem.startTime when making new bookings ",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "description": "End time of this session. Used to show the customer how long that tour will last",
            "format": "date-time"
          },
          "startTimeLocal": {
            "type": "string",
            "description": "Start Time of this session in supplier's local timezone. This time should be used when showing customers the booking date/time. It should be sent in BookingItem.startTimeLocal when making new bookings "
          },
          "endTimeLocal": {
            "type": "string",
            "description": "End time of this session in supplier's local timezone. Used to show the customer how long that tour will last"
          },
          "allDay": {
            "type": "boolean",
            "description": "If true, this session lasts all day and no time should be shown to customers. Technically the session will be from midnight to midnight."
          },
          "seats": {
            "type": "integer",
            "description": "Total number of seats for this session. Does not change after a booking is made",
            "format": "int32"
          },
          "seatsAvailable": {
            "type": "integer",
            "description": "Current availability for this session.",
            "format": "int32"
          },
          "priceOptions": {
            "type": "array",
            "description": "List of price options attached to this session. Most of the time they'll match the product's price options, but they can be used to change the price of specific dates/times (I.e. high/low season, weekday/weekend, etc.)",
            "items": {
              "$ref": "#/components/schemas/PriceOption"
            }
          }
        },
        "description": "A Session holds availability for a unique product / start time combination and also the rates for the session booking.",
        "xml": {
          "name": "session",
          "namespace": "https://api.rezdy.com/v1"
        }
      },
      "FileUploadForm": {
        "required": [
          "file"
        ],
        "type": "object",
        "properties": {
          "file": {
            "type": "object",
            "description": "Image file to be uploaded"
          },
          "filename": {
            "type": "string",
            "description": "Optional image name override"
          }
        },
        "description": "Data form for upload"
      },
      "ResponseImage": {
        "required": [
          "requestStatus"
        ],
        "type": "object",
        "properties": {
          "requestStatus": {
            "$ref": "#/components/schemas/RequestStatus"
          },
          "img": {
            "$ref": "#/components/schemas/Image"
          }
        },
        "xml": {
          "name": "response",
          "namespace": "https://api.rezdy.com/v1"
        }
      },
      "ProductCreateRequest": {
        "required": [
          "bookingFields",
          "bookingMode",
          "confirmMode",
          "description",
          "durationMinutes",
          "name",
          "priceOptions",
          "productType",
          "shortDescription",
          "unitLabel",
          "unitLabelPlural"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Product name"
          },
          "shortDescription": {
            "type": "string",
            "description": "Product description is between 15 and 240 characters."
          },
          "description": {
            "type": "string",
            "description": "Long product description, is between 100 and 15000 characters."
          },
          "advertisedPrice": {
            "type": "number",
            "description": "General price indication for this product. It represents a display price only, therefore it does not affect a real booking price, which is calculated based on the price options.",
            "format": "float"
          },
          "terms": {
            "type": "string",
            "description": "Specific terms and conditions for this product."
          },
          "bookingFields": {
            "type": "array",
            "description": "List of booking fields required for this product.",
            "xml": {
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/BookingFieldCreate"
            }
          },
          "productType": {
            "type": "string",
            "description": "Type of this product.",
            "enum": [
              "ACTIVITY",
              "DAYTOUR",
              "MULTIDAYTOUR",
              "PRIVATE_TOUR",
              "TICKET",
              "RENTAL",
              "CHARTER",
              "EVENT",
              "GIFT_CARD",
              "TRANSFER",
              "LESSON",
              "MERCHANDISE",
              "CUSTOM"
            ]
          },
          "internalCode": {
            "type": "string",
            "description": "Supplier-defined product code, used internally by the supplier."
          },
          "priceOptions": {
            "type": "array",
            "description": "List of price options belonging to this product. ",
            "xml": {
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/PriceOptionCreate"
            }
          },
          "unitLabel": {
            "type": "string",
            "description": "What a quantity for this product is. It can be people (I.e. participant, passenger, diver) or objects (Kayak, Helicopter, etc.)"
          },
          "unitLabelPlural": {
            "type": "string",
            "description": "Plural version of unitLabel."
          },
          "quantityRequired": {
            "type": "boolean",
            "description": "Does this product require a quantity to be booked? True for most products. Can be false if the supplier can only provide one quantity at any single time (I.e. private charters) or a price of a booking is fixed regardless of quantity"
          },
          "quantityRequiredMin": {
            "type": "integer",
            "description": "Represent the min booking quantity for the product. It can be setup for a supplier product. For a successful booking of the product, the total number of participants (regardless of pricing options), per booking item in the booking request, have to be greater or equal than this value.",
            "format": "int32"
          },
          "quantityRequiredMax": {
            "type": "integer",
            "description": "Represent the max booking quantity for the product. It can be setup for a supplier product. For a successful booking of the product, the total number of participants (regardless of pricing options), per booking item in the booking request, have to be lesser or equal than this value.",
            "format": "int32"
          },
          "bookingMode": {
            "type": "string",
            "description": "Booking mode. Determines if this product needs availability or can be booked for any date.",
            "enum": [
              "NO_DATE",
              "DATE_ENQUIRY",
              "INVENTORY"
            ]
          },
          "charter": {
            "type": "boolean",
            "description": "A charter product means each session can only have a single booking, whatever the number of seats booked."
          },
          "xeroAccount": {
            "type": "string",
            "description": "Supplier Xero account for this product."
          },
          "confirmMode": {
            "type": "string",
            "description": "Confirmation mode. Determines if bookings are automatically confirmed or it they are pending.",
            "enum": [
              "MANUAL",
              "AUTOCONFIRM",
              "MANUAL_THEN_AUTO",
              "AUTO_THEN_MANUAL"
            ]
          },
          "confirmModeMinParticipants": {
            "type": "integer",
            "description": "If confirmMode is MANUAL_THEN_AUTO or AUTO_THEN_MANUAL, determines the minimum number of participants per booking to trigger the change.",
            "format": "int32"
          },
          "minimumNoticeMinutes": {
            "type": "integer",
            "description": "Minimum book ahead interval for he product in minutes.",
            "format": "int64"
          },
          "durationMinutes": {
            "type": "integer",
            "description": "Duration of the product in minutes.",
            "format": "int64"
          },
          "pickupId": {
            "type": "integer",
            "description": "If pickups are configured for this product, the field will contain the id of the pickup location list created by the supplier.",
            "format": "int64"
          },
          "locationAddress": {
            "$ref": "#/components/schemas/Address"
          },
          "additionalInformation": {
            "type": "string",
            "description": "Additional information for the product, that should be sent after a booking is completed (i.e. by email) to the customer. Useful for integration, when manual control of the entire customer booking experience is wanted, and the automatic confirmation e-mail from Rezdy had been suppressed.  "
          },
          "languages": {
            "uniqueItems": true,
            "type": "array",
            "description": "List of product languages. The format of the language is ISO 639 two-letter code with BCP 47 language variants, separated by underscore e.g. en_au.",
            "items": {
              "type": "string",
              "description": "List of product languages. The format of the language is ISO 639 two-letter code with BCP 47 language variants, separated by underscore e.g. en_au."
            }
          },
          "extras": {
            "uniqueItems": true,
            "type": "array",
            "description": "List of extras IDs.",
            "items": {
              "$ref": "#/components/schemas/Extra"
            }
          },
          "barcodeOutputType": {
            "type": "string",
            "description": "Specifies how to output the barcodes when this product is booked. Valid types are:<br><li>PARTICIPANT: Barcodes will be generated by rezdy for each participant when an booking is created for this product</li><li>ORDER: Barcodes will be generated by rezdy per booking</li>",
            "enum": [
              "PARTICIPANT",
              "ORDER"
            ]
          }
        },
        "description": "new product",
        "xml": {
          "name": "product",
          "namespace": "https://api.rezdy.com/v1"
        }
      },
      "ExtraCreateRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the extra"
          },
          "description": {
            "type": "string",
            "description": "Description of the extra."
          },
          "price": {
            "type": "number",
            "description": "Price for a single quantity of this extra",
            "format": "float"
          },
          "extraPriceType": {
            "type": "string",
            "description": "Price type for this extra. Defines what quantities are allowed and how their price is calculated",
            "enum": [
              "ANY",
              "FIXED",
              "QUANTITY"
            ]
          }
        },
        "description": "New extra",
        "xml": {
          "name": "extra",
          "namespace": "https://api.rezdy.com/v1"
        }
      },
      "ResponseCustomer": {
        "required": [
          "requestStatus"
        ],
        "type": "object",
        "properties": {
          "requestStatus": {
            "$ref": "#/components/schemas/RequestStatus"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          }
        },
        "xml": {
          "name": "response",
          "namespace": "https://api.rezdy.com/v1"
        }
      },
      "Booking create": {
        "type": "object",
        "properties": {
          "orderNumber": {
            "type": "string",
            "description": "Order number. This is the number you should give to customers and print on booking confirmations. Order number is generated by the system, therefore, even if it is specified in the booking request, it will be overwritten."
          },
          "status": {
            "type": "string",
            "description": "Status of this booking",
            "enum": [
              "PROCESSING",
              "NEW",
              "ON_HOLD",
              "PENDING_SUPPLIER",
              "PENDING_CUSTOMER",
              "CONFIRMED",
              "CANCELLED",
              "ABANDONED_CART"
            ]
          },
          "resellerId": {
            "type": "integer",
            "description": "Rezdy internal ID of the agent company attached to this booking",
            "format": "int64"
          },
          "resellerUser": {
            "$ref": "#/components/schemas/User"
          },
          "customer": {
            "$ref": "#/components/schemas/Customer"
          },
          "items": {
            "type": "array",
            "description": "List of items in this booking. A booking can contain multiple products. Each BookingItem is a separate product with its own set of quantities and participant details.",
            "xml": {
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/BookingItemCreate"
            }
          },
          "totalAmount": {
            "type": "number",
            "description": "Total booking amount",
            "format": "float"
          },
          "datePaid": {
            "type": "string",
            "description": "Date this booking was fully paid",
            "format": "date-time"
          },
          "dateReconciled": {
            "type": "string",
            "description": "Date this booking was reconciled with the agent",
            "format": "date-time"
          },
          "comments": {
            "type": "string",
            "description": "Special requirements entered by the customer. Visible to both customer and supplier."
          },
          "internalNotes": {
            "type": "string",
            "description": "Comments only visible internally by the supplier"
          },
          "payments": {
            "type": "array",
            "description": "List of payments recorded for this booking",
            "xml": {
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/BookingPayment"
            }
          },
          "creditCard": {
            "$ref": "#/components/schemas/CreditCard"
          },
          "fields": {
            "type": "array",
            "description": "List of custom fields that are required \"once per booking\" by all the products in this booking ",
            "xml": {
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/BookingField"
            }
          },
          "source": {
            "type": "string",
            "description": "Source of this booking viewed from the supplier",
            "enum": [
              "ONLINE",
              "INTERNAL",
              "PARTNERS",
              "COMMUNITY",
              "MARKETPLACE",
              "MARKETPLACE_PREF_RATE",
              "API",
              "GOOGLE"
            ]
          },
          "sourceReferrer": {
            "type": "string",
            "description": "Referrer code "
          },
          "resellerSource": {
            "type": "string",
            "description": "Source of this booking viewed from the agent",
            "enum": [
              "ONLINE",
              "INTERNAL",
              "PARTNERS",
              "COMMUNITY",
              "MARKETPLACE",
              "MARKETPLACE_PREF_RATE",
              "API",
              "GOOGLE"
            ]
          },
          "sourceChannel": {
            "type": "string",
            "description": "Agent code defined by the supplier"
          },
          "resellerComments": {
            "type": "string",
            "description": "Comments only visible by the agent and the supplier. This should be used by the agent to send voucher numbers/redemption codes to suppliers."
          },
          "surcharge": {
            "type": "number",
            "description": "Credit card surcharge calculated for this booking",
            "format": "float"
          },
          "vouchers": {
            "type": "array",
            "description": "List of vouchers (Gift cards) that have been redeemed to pay for this booking",
            "xml": {
              "wrapped": true
            },
            "items": {
              "type": "string",
              "description": "List of vouchers (Gift cards) that have been redeemed to pay for this booking",
              "xml": {
                "name": "voucher"
              }
            }
          },
          "coupon": {
            "type": "string",
            "description": "Promo code that has been applied to this booking"
          },
          "paymentOption": {
            "type": "string",
            "description": "Payment option selected by the customer when making an online booking",
            "enum": [
              "CREDITCARD",
              "PAYPAL",
              "BANKTRANSFER",
              "CASH",
              "INVOICE",
              "EXTERNAL",
              "ALIPAY"
            ]
          },
          "sendNotifications": {
            "type": "boolean",
            "description": "Flag to control if a booking confirmation email should be send to the customer after this booking is created.<br>This will also send other types of customer notifications when setup by the supplier (I.e. SMS, Gift cards) ",
            "default": true
          },
          "resellerReference": {
            "type": "string",
            "description": "External reseller reference, can be used to pass internal booking number. This reference will be shown to a supplier, also it will appear on reports and can be used to filter orders. Maxiumum number of characters is 30"
          },
          "barcodeType": {
            "type": "string",
            "description": "Declares the redemption code format customers will receive if the booking was created with barcodes.",
            "enum": [
              "TEXT",
              "CODE_39",
              "CODE_128",
              "QR_CODE",
              "EAN_8",
              "EAN_13",
              "ITF"
            ]
          }
        },
        "description": "Booking create object used to create a booking in Rezdy's system. Lists all the possible fields for all product types and scenarios. Most of them are not required when sending a new booking.<br>A single Booking can be used to book multiple products, each of them being a BookingItem. All the products of one booking have to be from the same supplier.",
        "xml": {
          "name": "booking",
          "namespace": "https://api.rezdy.com/v1"
        }
      },
      "SessionUpdateBatchRequest": {
        "required": [
          "productCode"
        ],
        "type": "object",
        "properties": {
          "seats": {
            "type": "integer",
            "description": "Update the total number of seats for this session. The total seats does not change after a booking is made. The total number of seats can not be less than 0.",
            "format": "int32"
          },
          "priceOptions": {
            "type": "array",
            "description": "List of price options, which will override the product level price. Price options have to be a subset of the product price options, thus you can not create new price options, use product update service to do so.",
            "items": {
              "$ref": "#/components/schemas/PriceOption"
            }
          },
          "seatsAvailable": {
            "type": "integer",
            "description": "Update the current availability for this session. The session total number of seats after updating the seats available can not be less than 0.",
            "format": "int32"
          },
          "allDay": {
            "type": "boolean",
            "description": "If true, this session lasts all day and no time should be shown to customers. Technically the session will be from midnight to midnight."
          },
          "productCode": {
            "type": "string",
            "description": "Rezdy unique productCode linked to this session"
          },
          "startTime": {
            "type": "string",
            "description": "Batch update start interval",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "description": "Batch update end interval",
            "format": "date-time"
          },
          "startTimeLocal": {
            "type": "string",
            "description": "Batch update start interval in supplier's local timezone."
          },
          "endTimeLocal": {
            "type": "string",
            "description": "Batch update end interval in supplier's local timezone."
          }
        },
        "description": "Session data must only include one of seats, seatsAvailable or price options.",
        "xml": {
          "name": "session",
          "namespace": "https://api.rezdy.com/v1"
        }
      },
      "ResponseSessionList": {
        "required": [
          "requestStatus"
        ],
        "type": "object",
        "properties": {
          "requestStatus": {
            "$ref": "#/components/schemas/RequestStatus"
          },
          "sessions": {
            "type": "array",
            "xml": {
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/Session"
            }
          }
        },
        "xml": {
          "name": "response",
          "namespace": "https://api.rezdy.com/v1"
        }
      },
      "SessionCreateRequest": {
        "required": [
          "productCode",
          "seats"
        ],
        "type": "object",
        "properties": {
          "productCode": {
            "type": "string",
            "description": "Rezdy unique productCode linked to this session"
          },
          "startTime": {
            "type": "string",
            "description": "Start Time of this session. This time should be used when showing customers the booking date/time. It should be sent in BookingItem.startTime when making new bookings ",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "description": "End time of this session. Used to show the customer how long that tour will last",
            "format": "date-time"
          },
          "startTimeLocal": {
            "type": "string",
            "description": "Start Time of this session in supplier's local timezone. This time should be used when showing customers the booking date/time. It should be sent in BookingItem.startTimeLocal when making new bookings "
          },
          "endTimeLocal": {
            "type": "string",
            "description": "End time of this session in supplier's local timezone. Used to show the customer how long that tour will last"
          },
          "seats": {
            "type": "integer",
            "description": "Total number of seats for this session. Does not change after a booking is made",
            "format": "int32"
          },
          "priceOptions": {
            "type": "array",
            "description": "List of price options attached to this session. Most of the time they'll match the product's price options, but they can be used to change the price of specific dates/times (I.e. high/low season, weekday/weekend, etc.)",
            "items": {
              "$ref": "#/components/schemas/PriceOption"
            }
          },
          "allDay": {
            "type": "boolean",
            "description": "If true, this session lasts all day and no time should be shown to customers. Technically the session will be from midnight to midnight."
          }
        },
        "description": "Create session request data.",
        "xml": {
          "name": "session",
          "namespace": "https://api.rezdy.com/v1"
        }
      },
      "ResponseVoucher": {
        "required": [
          "requestStatus"
        ],
        "type": "object",
        "properties": {
          "requestStatus": {
            "$ref": "#/components/schemas/RequestStatus"
          },
          "voucher": {
            "$ref": "#/components/schemas/Voucher"
          }
        },
        "xml": {
          "name": "response",
          "namespace": "https://api.rezdy.com/v1"
        }
      },
      "ResponseVoucherList": {
        "required": [
          "requestStatus"
        ],
        "type": "object",
        "properties": {
          "requestStatus": {
            "$ref": "#/components/schemas/RequestStatus"
          },
          "vouchers": {
            "type": "array",
            "xml": {
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/Voucher"
            }
          }
        },
        "xml": {
          "name": "response",
          "namespace": "https://api.rezdy.com/v1"
        }
      },
      "ResponseResourceList": {
        "required": [
          "requestStatus"
        ],
        "type": "object",
        "properties": {
          "requestStatus": {
            "$ref": "#/components/schemas/RequestStatus"
          },
          "resources": {
            "type": "array",
            "xml": {
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/Resource"
            }
          }
        },
        "xml": {
          "name": "response",
          "namespace": "https://api.rezdy.com/v1"
        }
      },
      "ResponseRateList": {
        "required": [
          "requestStatus"
        ],
        "type": "object",
        "properties": {
          "requestStatus": {
            "$ref": "#/components/schemas/RequestStatus"
          },
          "rates": {
            "type": "array",
            "xml": {
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/Rate"
            }
          }
        },
        "xml": {
          "name": "response",
          "namespace": "https://api.rezdy.com/v1"
        }
      },
      "ResponsePickupLocationList": {
        "required": [
          "requestStatus"
        ],
        "type": "object",
        "properties": {
          "requestStatus": {
            "$ref": "#/components/schemas/RequestStatus"
          },
          "pickupLocations": {
            "type": "array",
            "xml": {
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/PickupLocation"
            }
          }
        },
        "xml": {
          "name": "response",
          "namespace": "https://api.rezdy.com/v1"
        }
      },
      "ResponseProductList": {
        "required": [
          "requestStatus"
        ],
        "type": "object",
        "properties": {
          "requestStatus": {
            "$ref": "#/components/schemas/RequestStatus"
          },
          "products": {
            "type": "array",
            "xml": {
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/Product"
            }
          }
        },
        "xml": {
          "name": "response",
          "namespace": "https://api.rezdy.com/v1"
        }
      },
      "ResponsePickupListList": {
        "required": [
          "requestStatus"
        ],
        "type": "object",
        "properties": {
          "requestStatus": {
            "$ref": "#/components/schemas/RequestStatus"
          },
          "pickupListList": {
            "type": "array",
            "xml": {
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/PickupList"
            }
          }
        },
        "xml": {
          "name": "response",
          "namespace": "https://api.rezdy.com/v1"
        }
      },
      "Checkin": {
        "type": "object",
        "properties": {
          "isCheckedIn": {
            "type": "boolean",
            "description": "Check-in status. True if the specified order item / everyone in a session (based on the request query), was checked in, false otherwise."
          }
        },
        "description": "Check-in information.",
        "xml": {
          "name": "checkin",
          "namespace": "https://api.rezdy.com/v1"
        }
      },
      "ResponseCheckIn": {
        "required": [
          "requestStatus"
        ],
        "type": "object",
        "properties": {
          "requestStatus": {
            "$ref": "#/components/schemas/RequestStatus"
          },
          "checkin": {
            "$ref": "#/components/schemas/Checkin"
          }
        },
        "xml": {
          "name": "response",
          "namespace": "https://api.rezdy.com/v1"
        }
      },
      "ResponseExtraList": {
        "required": [
          "requestStatus"
        ],
        "type": "object",
        "properties": {
          "requestStatus": {
            "$ref": "#/components/schemas/RequestStatus"
          },
          "extras": {
            "type": "array",
            "xml": {
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/ExtraRequest"
            }
          }
        },
        "xml": {
          "name": "response",
          "namespace": "https://api.rezdy.com/v1"
        }
      },
      "ResponseCustomerList": {
        "required": [
          "requestStatus"
        ],
        "type": "object",
        "properties": {
          "requestStatus": {
            "$ref": "#/components/schemas/RequestStatus"
          },
          "customers": {
            "type": "array",
            "xml": {
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/Customer"
            }
          }
        },
        "xml": {
          "name": "response",
          "namespace": "https://api.rezdy.com/v1"
        }
      },
      "Company": {
        "type": "object",
        "properties": {
          "alias": {
            "type": "string",
            "description": "Company alias. This is the unique identifier for this company"
          },
          "companyName": {
            "type": "string",
            "description": "Company name"
          },
          "firstName": {
            "type": "string",
            "description": "First name of company representative"
          },
          "lastName": {
            "type": "string",
            "description": "Last name of company representative"
          },
          "address": {
            "$ref": "#/components/schemas/Address"
          },
          "destinationName": {
            "type": "string",
            "description": "Company destination. Name of the area."
          },
          "destinationCountryCode": {
            "type": "string",
            "description": "Company destination. Country code."
          },
          "destinationPath": {
            "type": "string",
            "description": "Company destination. Destination path."
          },
          "companyLogoUrl": {
            "type": "string",
            "description": "URL of the company logo."
          },
          "currency": {
            "type": "string",
            "description": "Default currency used by this company."
          },
          "locale": {
            "type": "string",
            "description": "Locale of this company."
          },
          "timezone": {
            "type": "string",
            "description": "Timezone of this company."
          },
          "category": {
            "type": "string",
            "description": "Company category"
          },
          "companyDescription": {
            "type": "string",
            "description": "Company description"
          },
          "agentDescription": {
            "type": "string",
            "description": "Agent description, if the company is an agent."
          },
          "agentRegistrationLink": {
            "type": "string",
            "description": "Agent registration link, if the company is an agent"
          },
          "phone": {
            "type": "string",
            "description": "Company phone"
          },
          "mobile": {
            "type": "string",
            "description": "Company mobile"
          },
          "fax": {
            "type": "string",
            "description": "Company fax"
          },
          "skype": {
            "type": "string",
            "description": "Company skype"
          },
          "terms": {
            "type": "string",
            "description": "General terms and conditions"
          },
          "privacyPolicy": {
            "type": "string",
            "description": "Privacy Policy"
          },
          "openingHours": {
            "type": "string",
            "description": "Company opening hours"
          },
          "facebookPage": {
            "type": "string",
            "description": "Company facebook page"
          },
          "googlePlus": {
            "type": "string",
            "description": "Company google plus profile"
          },
          "yelp": {
            "type": "string",
            "description": "Company yelp profile"
          },
          "instagram": {
            "type": "string",
            "description": "Company instagram profile"
          },
          "pinterest": {
            "type": "string",
            "description": "Company pinterest profile"
          },
          "youtubeChannel": {
            "type": "string",
            "description": "Company youtube channel"
          },
          "tripAdvisor": {
            "type": "string",
            "description": "Company trip advisor profile"
          },
          "fbPageId": {
            "type": "string",
            "description": "Company facebook page id"
          },
          "twitter": {
            "type": "string",
            "description": "Company trip twitter profile"
          },
          "website": {
            "type": "string",
            "description": "Company website"
          },
          "bookingSystem": {
            "type": "string",
            "description": "Company Booking System"
          },
          "video": {
            "$ref": "#/components/schemas/Video"
          }
        },
        "description": "Company object. Holds general details and information about a specific company.",
        "xml": {
          "name": "Company",
          "namespace": "https://api.rezdy.com/v1"
        }
      },
      "ResponseCompany": {
        "required": [
          "requestStatus"
        ],
        "type": "object",
        "properties": {
          "requestStatus": {
            "$ref": "#/components/schemas/RequestStatus"
          },
          "company": {
            "$ref": "#/components/schemas/Company"
          }
        },
        "xml": {
          "name": "response",
          "namespace": "https://api.rezdy.com/v1"
        }
      },
      "Category": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Category ID",
            "format": "int64"
          },
          "name": {
            "type": "string",
            "description": "Category name"
          },
          "description": {
            "type": "string",
            "description": "Category description"
          },
          "visible": {
            "type": "boolean",
            "description": "Flag used to determine if the category is public or private.<br>Public categories appear as tabs on the company booking form"
          },
          "image": {
            "$ref": "#/components/schemas/Image"
          },
          "categorySeoTags": {
            "type": "array",
            "description": "This will store category meta data such as description",
            "items": {
              "$ref": "#/components/schemas/CategorySeoTag"
            }
          }
        },
        "description": "A Category is used to group products",
        "xml": {
          "name": "category",
          "namespace": "https://api.rezdy.com/v1"
        }
      },
      "CategorySeoTag": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "ID of Tag",
            "format": "int64"
          },
          "metaType": {
            "type": "string",
            "description": "Type of Tag",
            "enum": [
              "META_NAME",
              "META_PROPERTY",
              "LINK_REL",
              "TITLE",
              "NOINDEX",
              "REL_CANONICAL"
            ]
          },
          "attrKey": {
            "type": "string",
            "description": "Value to put in the \"key\" attribute (depending on type it could be name, property or rel)"
          },
          "attrValue": {
            "type": "string",
            "description": "Value to put in the \"value\" attribute (depending on type it could be content or href)"
          },
          "categoryId": {
            "type": "integer",
            "description": "Category ID this seo tag belongs to",
            "format": "int64"
          }
        },
        "description": "Category Seo tags.",
        "xml": {
          "name": "CategorySeoTag",
          "namespace": "https://api.rezdy.com/v1"
        }
      },
      "ResponseCategory": {
        "required": [
          "requestStatus"
        ],
        "type": "object",
        "properties": {
          "requestStatus": {
            "$ref": "#/components/schemas/RequestStatus"
          },
          "category": {
            "$ref": "#/components/schemas/Category"
          }
        },
        "xml": {
          "name": "response",
          "namespace": "https://api.rezdy.com/v1"
        }
      },
      "ResponseCategoryList": {
        "required": [
          "requestStatus"
        ],
        "type": "object",
        "properties": {
          "requestStatus": {
            "$ref": "#/components/schemas/RequestStatus"
          },
          "categories": {
            "type": "array",
            "xml": {
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/Category"
            }
          }
        },
        "xml": {
          "name": "response",
          "namespace": "https://api.rezdy.com/v1"
        }
      },
      "ResponseBookingList": {
        "required": [
          "requestStatus"
        ],
        "type": "object",
        "properties": {
          "requestStatus": {
            "$ref": "#/components/schemas/RequestStatus"
          },
          "bookings": {
            "type": "array",
            "xml": {
              "wrapped": true
            },
            "items": {
              "$ref": "#/components/schemas/Booking"
            }
          }
        },
        "xml": {
          "name": "response",
          "namespace": "https://api.rezdy.com/v1"
        }
      }
    }
  },
  "x-tagGroups": [
    {
      "name": "Agent API endpoints",
      "tags": [
        "Products",
        "Availability",
        "Bookings",
        "Categories",
        "Customers",
        "Companies"
      ]
    },
    {
      "name": "Supplier API endpoints",
      "tags": [
        "Availability",
        "Products",
        "Rates",
        "PickupList",
        "Extra",
        "Categories",
        "Customers",
        "Vouchers",
        "Companies",
        "Bookings",
        "Resources",
        "Manifest"
      ]
    }
  ]
}