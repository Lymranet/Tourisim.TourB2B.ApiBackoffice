@model TourManagementApi.Models.ViewModels.ActivityLocationViewModel

@{
    ViewData["Title"] = "Lokasyon Ekle/Düzenle";
}

<h2>Lokasyon Ekle/Düzenle</h2>
@Html.ValidationSummary(true, "", new { @class = "text-danger" })

<form asp-action="CreateLocation" method="post" autocomplete="off">
    <input type="hidden" asp-for="ActivityId" />
    <div class="form-group mb-3">
        <label asp-for="Address">Adres</label>
        <input asp-for="Address" class="form-control" />
        <span asp-validation-for="Address" class="text-danger"></span>
    </div>
    <div class="form-group mb-3">
        <label asp-for="City">Şehir</label>
        <input asp-for="City" class="form-control" />
        <span asp-validation-for="City" class="text-danger"></span>
    </div>
    <div class="form-group mb-3">
        <label asp-for="Country">Ülke</label>
        <input asp-for="Country" class="form-control" />
        <span asp-validation-for="Country" class="text-danger"></span>
    </div>
    <input asp-for="Latitude" id="Latitude" type="hidden" />
    <input asp-for="Longitude" id="Longitude" type="hidden" />
    <small class="form-text text-muted mb-3">Enlem ve boylam, harita veya adres arama ile otomatik doldurulacaktır.</small>

    <div class="card mb-4">
        <div class="card-header">Harita Üzerinde Konum Seç</div>
        <div class="card-body">
            <div class="input-group mb-2">
                <input type="text" id="addressSearch" class="form-control" placeholder="Adres veya yer arayın...">
                <button type="button" class="btn btn-primary" onclick="searchAddress()">Ara</button>
            </div>
            <div id="locationMap" style="height: 300px;"></div>
        </div>
    </div>

    <button type="submit" class="btn btn-primary">Kaydet</button>
    <a asp-action="Index" class="btn btn-secondary">İptal</a>
</form>

@section Scripts {
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css" />
    <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"></script>
    <script>
        let map, marker;
        function initMap() {
            const latInput = document.getElementById('Latitude');
            const lngInput = document.getElementById('Longitude');
            let lat = latInput.value;
            let lng = lngInput.value;
            if (!lat || !lng) {
                lat = 39.9208; // Türkiye merkez
                lng = 32.8541;
            }
            map = L.map('locationMap').setView([lat, lng], lat && lng ? 13 : 6);
            L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                maxZoom: 19,
                attribution: '© OpenStreetMap'
            }).addTo(map);
            if (lat && lng && (lat != 39.9208 || lng != 32.8541)) {
                marker = L.marker([lat, lng]).addTo(map);
            }
            map.on('click', function(e) {
                setMarker(e.latlng.lat, e.latlng.lng, true);
            });
        }
        function setMarker(lat, lng, doReverseGeocode = false) {
            if (marker) map.removeLayer(marker);
            marker = L.marker([lat, lng]).addTo(map);
            document.getElementById('Latitude').value = lat;
            document.getElementById('Longitude').value = lng;
            if (doReverseGeocode) {
                fetch(`https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lng}`)
                    .then(res => res.json())
                    .then(data => {
                        if (data && data.address) {
                            if (data.display_name) document.getElementById('Address').value = data.display_name;
                            if (data.address.city) document.getElementById('City').value = data.address.city;
                            else if (data.address.town) document.getElementById('City').value = data.address.town;
                            else if (data.address.village) document.getElementById('City').value = data.address.village;
                            if (data.address.country) document.getElementById('Country').value = data.address.country;
                        }
                    });
            }
        }
        function searchAddress() {
            const query = document.getElementById('addressSearch').value;
            if (!query) return;
            fetch(`https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(query)}`)
                .then(res => res.json())
                .then(data => {
                    if (data && data.length > 0) {
                        const place = data[0];
                        setMarker(place.lat, place.lon, false);
                        map.setView([place.lat, place.lon], 15);
                        document.getElementById('Address').value = place.display_name;
                        if (place.address) {
                            if (place.address.city) document.getElementById('City').value = place.address.city;
                            else if (place.address.town) document.getElementById('City').value = place.address.town;
                            else if (place.address.village) document.getElementById('City').value = place.address.village;
                            if (place.address.country) document.getElementById('Country').value = place.address.country;
                        }
                    }
                });
        }
        document.addEventListener('DOMContentLoaded', function() {
            initMap();
        });
    </script>
} 