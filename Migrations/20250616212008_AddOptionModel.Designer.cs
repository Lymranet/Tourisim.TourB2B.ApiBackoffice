// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TourManagementApi.Data;

#nullable disable

namespace TourManagementApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250616212008_AddOptionModel")]
    partial class AddOptionModel
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TourManagementApi.Models.Activity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdditionalNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CancellationPolicy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("Excluded")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Included")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Languages")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.Property<string>("Requirements")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Subcategory")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("TourManagementApi.Models.Option", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ActivityId")
                        .HasColumnType("int");

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("BaslangicSaati")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CutOffDakika")
                        .HasColumnType("int");

                    b.Property<string>("HaftaninGunleri")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HemenRezerveEdilebilir")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("SatisBaslangicTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("SatisBitisTarihi")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.ToTable("Options");
                });

            modelBuilder.Entity("TourManagementApi.Models.Activity", b =>
                {
                    b.OwnsMany("TourManagementApi.Models.Addon", "Addons", b1 =>
                        {
                            b1.Property<int>("ActivityId")
                                .HasColumnType("int");

                            b1.Property<string>("Id")
                                .HasColumnType("nvarchar(450)");

                            b1.Property<string>("Description")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Title")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Type")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ActivityId", "Id");

                            b1.ToTable("Addon");

                            b1.WithOwner()
                                .HasForeignKey("ActivityId");

                            b1.OwnsOne("TourManagementApi.Models.AddonPrice", "Price", b2 =>
                                {
                                    b2.Property<int>("AddonActivityId")
                                        .HasColumnType("int");

                                    b2.Property<string>("AddonId")
                                        .HasColumnType("nvarchar(450)");

                                    b2.Property<string>("Amount")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Currency")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("AddonActivityId", "AddonId");

                                    b2.ToTable("Addon");

                                    b2.WithOwner()
                                        .HasForeignKey("AddonActivityId", "AddonId");
                                });

                            b1.OwnsMany("TourManagementApi.Models.AddonTranslation", "Translations", b2 =>
                                {
                                    b2.Property<int>("AddonActivityId")
                                        .HasColumnType("int");

                                    b2.Property<string>("AddonId")
                                        .HasColumnType("nvarchar(450)");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("int");

                                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b2.Property<int>("Id"));

                                    b2.Property<string>("Description")
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Language")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Title")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("AddonActivityId", "AddonId", "Id");

                                    b2.ToTable("AddonTranslation");

                                    b2.WithOwner()
                                        .HasForeignKey("AddonActivityId", "AddonId");
                                });

                            b1.Navigation("Price");

                            b1.Navigation("Translations");
                        });

                    b.OwnsOne("TourManagementApi.Models.Common.ActivityPricing", "Pricing", b1 =>
                        {
                            b1.Property<int>("ActivityId")
                                .HasColumnType("int");

                            b1.Property<string>("DefaultCurrency")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<bool>("TaxIncluded")
                                .HasColumnType("bit");

                            b1.Property<decimal?>("TaxRate")
                                .HasPrecision(18, 2)
                                .HasColumnType("decimal(18,2)");

                            b1.Property<bool>("_isNull")
                                .HasColumnType("bit")
                                .HasColumnName("PricingIsNull");

                            b1.HasKey("ActivityId");

                            b1.ToTable("Activities");

                            b1.WithOwner()
                                .HasForeignKey("ActivityId");

                            b1.OwnsMany("TourManagementApi.Models.Common.PriceCategory", "Categories", b2 =>
                                {
                                    b2.Property<int>("ActivityPricingActivityId")
                                        .HasColumnType("int");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("int");

                                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b2.Property<int>("Id"));

                                    b2.Property<decimal>("Amount")
                                        .HasPrecision(18, 2)
                                        .HasColumnType("decimal(18,2)");

                                    b2.Property<string>("Currency")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Description")
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("DiscountType")
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<decimal?>("DiscountValue")
                                        .HasPrecision(18, 2)
                                        .HasColumnType("decimal(18,2)");

                                    b2.Property<int?>("MaxAge")
                                        .HasColumnType("int");

                                    b2.Property<int?>("MaxParticipants")
                                        .HasColumnType("int");

                                    b2.Property<int?>("MinAge")
                                        .HasColumnType("int");

                                    b2.Property<int?>("MinParticipants")
                                        .HasColumnType("int");

                                    b2.Property<string>("PriceType")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Type")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("ActivityPricingActivityId", "Id");

                                    b2.ToTable("PriceCategory");

                                    b2.WithOwner()
                                        .HasForeignKey("ActivityPricingActivityId");
                                });

                            b1.Navigation("Categories");
                        });

                    b.OwnsOne("TourManagementApi.Models.Common.Location", "Location", b1 =>
                        {
                            b1.Property<int>("ActivityId")
                                .HasColumnType("int");

                            b1.Property<string>("Address")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("City")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Country")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<bool>("_isNull")
                                .HasColumnType("bit")
                                .HasColumnName("LocationIsNull");

                            b1.HasKey("ActivityId");

                            b1.ToTable("Activities");

                            b1.WithOwner()
                                .HasForeignKey("ActivityId");

                            b1.OwnsOne("TourManagementApi.Models.Common.Coordinates", "Coordinates", b2 =>
                                {
                                    b2.Property<int>("LocationActivityId")
                                        .HasColumnType("int");

                                    b2.Property<double>("Latitude")
                                        .HasColumnType("float");

                                    b2.Property<double>("Longitude")
                                        .HasColumnType("float");

                                    b2.HasKey("LocationActivityId");

                                    b2.ToTable("Activities");

                                    b2.WithOwner()
                                        .HasForeignKey("LocationActivityId");
                                });

                            b1.Navigation("Coordinates");
                        });

                    b.OwnsOne("TourManagementApi.Models.Common.Media", "Media", b1 =>
                        {
                            b1.Property<int>("ActivityId")
                                .HasColumnType("int");

                            b1.Property<string>("Videos")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<bool>("_isNull")
                                .HasColumnType("bit")
                                .HasColumnName("MediaIsNull");

                            b1.HasKey("ActivityId");

                            b1.ToTable("Activities");

                            b1.WithOwner()
                                .HasForeignKey("ActivityId");

                            b1.OwnsOne("TourManagementApi.Models.Common.MediaImages", "Images", b2 =>
                                {
                                    b2.Property<int>("MediaActivityId")
                                        .HasColumnType("int");

                                    b2.Property<string>("Gallery")
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Header")
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Teaser")
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("MediaActivityId");

                                    b2.ToTable("Activities");

                                    b2.WithOwner()
                                        .HasForeignKey("MediaActivityId");
                                });

                            b1.Navigation("Images")
                                .IsRequired();
                        });

                    b.OwnsOne("TourManagementApi.Models.Common.PriceInfo", "PriceInfo", b1 =>
                        {
                            b1.Property<int>("ActivityId")
                                .HasColumnType("int");

                            b1.Property<decimal>("BasePrice")
                                .HasPrecision(18, 2)
                                .HasColumnType("decimal(18,2)");

                            b1.Property<string>("Currency")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int?>("MaxAge")
                                .HasColumnType("int");

                            b1.Property<int?>("MaximumParticipants")
                                .HasColumnType("int");

                            b1.Property<int?>("MinAge")
                                .HasColumnType("int");

                            b1.Property<int?>("MinimumParticipants")
                                .HasColumnType("int");

                            b1.Property<bool>("_isNull")
                                .HasColumnType("bit")
                                .HasColumnName("PriceInfoIsNull");

                            b1.HasKey("ActivityId");

                            b1.ToTable("Activities");

                            b1.WithOwner()
                                .HasForeignKey("ActivityId");
                        });

                    b.OwnsMany("TourManagementApi.Models.Common.TimeSlot", "TimeSlots", b1 =>
                        {
                            b1.Property<int>("ActivityId")
                                .HasColumnType("int");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<string>("DaysOfWeek")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("EndTime")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("StartTime")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ActivityId", "Id");

                            b1.ToTable("TimeSlot");

                            b1.WithOwner()
                                .HasForeignKey("ActivityId");
                        });

                    b.OwnsOne("TourManagementApi.Models.ContactInfo", "ContactInfo", b1 =>
                        {
                            b1.Property<int>("ActivityId")
                                .HasColumnType("int");

                            b1.Property<string>("Email")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Name")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Phone")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Role")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<bool>("_isNull")
                                .HasColumnType("bit")
                                .HasColumnName("ContactInfoIsNull");

                            b1.HasKey("ActivityId");

                            b1.ToTable("Activities");

                            b1.WithOwner()
                                .HasForeignKey("ActivityId");
                        });

                    b.OwnsMany("TourManagementApi.Models.GuestField", "GuestFields", b1 =>
                        {
                            b1.Property<int>("ActivityId")
                                .HasColumnType("int");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<string>("Code")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Label")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<bool>("Required")
                                .HasColumnType("bit");

                            b1.Property<string>("Type")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ActivityId", "Id");

                            b1.ToTable("GuestField");

                            b1.WithOwner()
                                .HasForeignKey("ActivityId");

                            b1.OwnsMany("TourManagementApi.Models.GuestFieldOption", "Options", b2 =>
                                {
                                    b2.Property<int>("GuestFieldActivityId")
                                        .HasColumnType("int");

                                    b2.Property<int>("GuestFieldId")
                                        .HasColumnType("int");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("int");

                                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b2.Property<int>("Id"));

                                    b2.Property<string>("Key")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Value")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("GuestFieldActivityId", "GuestFieldId", "Id");

                                    b2.ToTable("GuestFieldOption");

                                    b2.WithOwner()
                                        .HasForeignKey("GuestFieldActivityId", "GuestFieldId");

                                    b2.OwnsMany("TourManagementApi.Models.GuestFieldOptionTranslation", "Translations", b3 =>
                                        {
                                            b3.Property<int>("GuestFieldOptionGuestFieldActivityId")
                                                .HasColumnType("int");

                                            b3.Property<int>("GuestFieldOptionGuestFieldId")
                                                .HasColumnType("int");

                                            b3.Property<int>("GuestFieldOptionId")
                                                .HasColumnType("int");

                                            b3.Property<int>("Id")
                                                .ValueGeneratedOnAdd()
                                                .HasColumnType("int");

                                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b3.Property<int>("Id"));

                                            b3.Property<string>("Label")
                                                .IsRequired()
                                                .HasColumnType("nvarchar(max)");

                                            b3.Property<string>("Language")
                                                .IsRequired()
                                                .HasColumnType("nvarchar(max)");

                                            b3.Property<string>("Value")
                                                .IsRequired()
                                                .HasColumnType("nvarchar(max)");

                                            b3.HasKey("GuestFieldOptionGuestFieldActivityId", "GuestFieldOptionGuestFieldId", "GuestFieldOptionId", "Id");

                                            b3.ToTable("GuestFieldOptionTranslation");

                                            b3.WithOwner()
                                                .HasForeignKey("GuestFieldOptionGuestFieldActivityId", "GuestFieldOptionGuestFieldId", "GuestFieldOptionId");
                                        });

                                    b2.Navigation("Translations");
                                });

                            b1.OwnsMany("TourManagementApi.Models.GuestFieldTranslation", "Translations", b2 =>
                                {
                                    b2.Property<int>("GuestFieldActivityId")
                                        .HasColumnType("int");

                                    b2.Property<int>("GuestFieldId")
                                        .HasColumnType("int");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("int");

                                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b2.Property<int>("Id"));

                                    b2.Property<string>("Label")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Language")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("GuestFieldActivityId", "GuestFieldId", "Id");

                                    b2.ToTable("GuestFieldTranslation");

                                    b2.WithOwner()
                                        .HasForeignKey("GuestFieldActivityId", "GuestFieldId");
                                });

                            b1.Navigation("Options");

                            b1.Navigation("Translations");
                        });

                    b.OwnsMany("TourManagementApi.Models.MeetingPoint", "MeetingPoints", b1 =>
                        {
                            b1.Property<int>("ActivityId")
                                .HasColumnType("int");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<string>("Address")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Latitude")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Longitude")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ActivityId", "Id");

                            b1.ToTable("MeetingPoint");

                            b1.WithOwner()
                                .HasForeignKey("ActivityId");
                        });

                    b.OwnsOne("TourManagementApi.Models.SalesAvailability", "SalesAvailability", b1 =>
                        {
                            b1.Property<int>("ActivityId")
                                .HasColumnType("int");

                            b1.Property<DateTime>("EndDate")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime>("StartDate")
                                .HasColumnType("datetime2");

                            b1.Property<bool>("_isNull")
                                .HasColumnType("bit")
                                .HasColumnName("SalesAvailabilityIsNull");

                            b1.HasKey("ActivityId");

                            b1.ToTable("Activities");

                            b1.WithOwner()
                                .HasForeignKey("ActivityId");
                        });

                    b.OwnsOne("TourManagementApi.Models.SeasonalAvailability", "SeasonalAvailability", b1 =>
                        {
                            b1.Property<int>("ActivityId")
                                .HasColumnType("int");

                            b1.Property<string>("EndDate")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("StartDate")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<bool>("_isNull")
                                .HasColumnType("bit")
                                .HasColumnName("SeasonalAvailabilityIsNull");

                            b1.HasKey("ActivityId");

                            b1.ToTable("Activities");

                            b1.WithOwner()
                                .HasForeignKey("ActivityId");
                        });

                    b.Navigation("Addons");

                    b.Navigation("ContactInfo");

                    b.Navigation("GuestFields");

                    b.Navigation("Location");

                    b.Navigation("Media");

                    b.Navigation("MeetingPoints");

                    b.Navigation("PriceInfo");

                    b.Navigation("Pricing");

                    b.Navigation("SalesAvailability");

                    b.Navigation("SeasonalAvailability");

                    b.Navigation("TimeSlots");
                });

            modelBuilder.Entity("TourManagementApi.Models.Option", b =>
                {
                    b.HasOne("TourManagementApi.Models.Activity", "Activity")
                        .WithMany("Options")
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsMany("TourManagementApi.Models.OpeningHour", "AcilisSaatleri", b1 =>
                        {
                            b1.Property<int>("OptionId")
                                .HasColumnType("int");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<string>("Baslangic")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Bitis")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("OptionId", "Id");

                            b1.ToTable("OpeningHour");

                            b1.WithOwner()
                                .HasForeignKey("OptionId");
                        });

                    b.OwnsMany("TourManagementApi.Models.TicketCategory", "BiletKategorileri", b1 =>
                        {
                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<string>("Adi")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int>("MaxKoltuk")
                                .HasColumnType("int");

                            b1.Property<int>("MinKoltuk")
                                .HasColumnType("int");

                            b1.Property<int>("OptionId")
                                .HasColumnType("int");

                            b1.Property<string>("Tip")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("Id");

                            b1.HasIndex("OptionId");

                            b1.ToTable("TicketCategory");

                            b1.WithOwner()
                                .HasForeignKey("OptionId");

                            b1.OwnsOne("TourManagementApi.Models.TicketPrice", "Fiyat", b2 =>
                                {
                                    b2.Property<int>("TicketCategoryId")
                                        .HasColumnType("int");

                                    b2.Property<string>("ParaBirimi")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Tip")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Tutar")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("TicketCategoryId");

                                    b2.ToTable("TicketCategory");

                                    b2.WithOwner()
                                        .HasForeignKey("TicketCategoryId");
                                });

                            b1.OwnsOne("TourManagementApi.Models.YasSiniri", "YasSiniri", b2 =>
                                {
                                    b2.Property<int>("TicketCategoryId")
                                        .HasColumnType("int");

                                    b2.Property<int?>("MaxYas")
                                        .HasColumnType("int");

                                    b2.Property<int?>("MinYas")
                                        .HasColumnType("int");

                                    b2.HasKey("TicketCategoryId");

                                    b2.ToTable("TicketCategory");

                                    b2.WithOwner()
                                        .HasForeignKey("TicketCategoryId");
                                });

                            b1.Navigation("Fiyat")
                                .IsRequired();

                            b1.Navigation("YasSiniri");
                        });

                    b.Navigation("AcilisSaatleri");

                    b.Navigation("Activity");

                    b.Navigation("BiletKategorileri");
                });

            modelBuilder.Entity("TourManagementApi.Models.Activity", b =>
                {
                    b.Navigation("Options");
                });
#pragma warning restore 612, 618
        }
    }
}
