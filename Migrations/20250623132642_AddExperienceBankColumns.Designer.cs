// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TourManagementApi.Data;

#nullable disable

namespace TourManagementApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250623132642_AddExperienceBankColumns")]
    partial class AddExperienceBankColumns
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TourManagementApi.Models.Activity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdditionalNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("AverageRating")
                        .HasPrecision(4, 2)
                        .HasColumnType("decimal(4,2)");

                    b.Property<string>("CancellationPolicy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Categories")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValueSql("'[]'");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoverImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DestinationCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DestinationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DetailsUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("Exclusions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExclusionsJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ExclusionsJson");

                    b.Property<string>("GuestFields")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValueSql("'[]'");

                    b.Property<string>("GuestFieldsJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("GuestFieldsJson");

                    b.Property<string>("Highlights")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImportantInfo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValueSql("'[]'");

                    b.Property<string>("ImportantInfoJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ImportantInfoJson");

                    b.Property<string>("Included")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Inclusions")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValueSql("'[]'");

                    b.Property<string>("InclusionsJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("InclusionsJson");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFreeCancellation")
                        .HasColumnType("bit");

                    b.Property<string>("Itinerary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Languages")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartnerSupplierId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreviewImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.Property<string>("Requirements")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Subcategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TotalRatingCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("TourManagementApi.Models.OpeningHour", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FromTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OptionId")
                        .HasColumnType("int");

                    b.Property<string>("ToTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OptionId");

                    b.ToTable("OpeningHours");
                });

            modelBuilder.Entity("TourManagementApi.Models.Option", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ActivityId")
                        .HasColumnType("int");

                    b.Property<bool>("CanBeBookedAfterStartTime")
                        .HasColumnType("bit");

                    b.Property<int>("CutOff")
                        .HasColumnType("int");

                    b.Property<string>("Duration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("StartTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UntilDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Weekdays")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.ToTable("Options");
                });

            modelBuilder.Entity("TourManagementApi.Models.Reservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ActivityId")
                        .HasColumnType("int");

                    b.Property<string>("ContactEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExperienceBankBookingId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("GuestCount")
                        .HasColumnType("int");

                    b.Property<string>("MarketplaceBookingId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarketplaceId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OptionId")
                        .HasColumnType("int");

                    b.Property<string>("PartnerBookingId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartnerSupplierId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ReservationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ScheduledDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.HasIndex("ExperienceBankBookingId")
                        .IsUnique();

                    b.HasIndex("OptionId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("TourManagementApi.Models.ReservationGuest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdditionalFieldsJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddonsJson")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuestName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuestType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Occupancy")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReservationId")
                        .HasColumnType("int");

                    b.Property<string>("TicketCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TicketId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ReservationId");

                    b.ToTable("ReservationGuests");
                });

            modelBuilder.Entity("TourManagementApi.Models.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ExperienceBankTicketId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InternalTicketId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReservationId")
                        .HasColumnType("int");

                    b.Property<string>("TicketCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TicketCodeType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ReservationId");

                    b.ToTable("Ticket");
                });

            modelBuilder.Entity("TourManagementApi.Models.TicketCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaxAge")
                        .HasColumnType("int");

                    b.Property<int>("MaxSeats")
                        .HasColumnType("int");

                    b.Property<int?>("MinAge")
                        .HasColumnType("int");

                    b.Property<int>("MinSeats")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OptionId")
                        .HasColumnType("int");

                    b.Property<string>("PriceType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OptionId");

                    b.ToTable("TicketCategories");
                });

            modelBuilder.Entity("TourManagementApi.Models.Activity", b =>
                {
                    b.OwnsOne("TourManagementApi.Models.Common.ActivityPricing", "Pricing", b1 =>
                        {
                            b1.Property<int>("ActivityId")
                                .HasColumnType("int");

                            b1.Property<string>("DefaultCurrency")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<bool>("TaxIncluded")
                                .HasColumnType("bit");

                            b1.Property<decimal?>("TaxRate")
                                .HasPrecision(18, 2)
                                .HasColumnType("decimal(18,2)");

                            b1.Property<bool>("_isNull")
                                .HasColumnType("bit")
                                .HasColumnName("PricingIsNull");

                            b1.HasKey("ActivityId");

                            b1.ToTable("Activities");

                            b1.WithOwner()
                                .HasForeignKey("ActivityId");

                            b1.OwnsMany("TourManagementApi.Models.Common.PriceCategory", "Categories", b2 =>
                                {
                                    b2.Property<int>("ActivityPricingActivityId")
                                        .HasColumnType("int");

                                    b2.Property<int>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("int");

                                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b2.Property<int>("Id"));

                                    b2.Property<decimal>("Amount")
                                        .HasPrecision(18, 2)
                                        .HasColumnType("decimal(18,2)");

                                    b2.Property<string>("Currency")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Description")
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("DiscountType")
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<decimal?>("DiscountValue")
                                        .HasPrecision(18, 2)
                                        .HasColumnType("decimal(18,2)");

                                    b2.Property<int?>("MaxAge")
                                        .HasColumnType("int");

                                    b2.Property<int?>("MaxParticipants")
                                        .HasColumnType("int");

                                    b2.Property<int?>("MinAge")
                                        .HasColumnType("int");

                                    b2.Property<int?>("MinParticipants")
                                        .HasColumnType("int");

                                    b2.Property<string>("PriceType")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Type")
                                        .IsRequired()
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("ActivityPricingActivityId", "Id");

                                    b2.ToTable("PriceCategory");

                                    b2.WithOwner()
                                        .HasForeignKey("ActivityPricingActivityId");
                                });

                            b1.Navigation("Categories");
                        });

                    b.OwnsOne("TourManagementApi.Models.Common.Location", "Location", b1 =>
                        {
                            b1.Property<int>("ActivityId")
                                .HasColumnType("int");

                            b1.Property<string>("Address")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("City")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Country")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<bool>("_isNull")
                                .HasColumnType("bit")
                                .HasColumnName("LocationIsNull");

                            b1.HasKey("ActivityId");

                            b1.ToTable("Activities");

                            b1.WithOwner()
                                .HasForeignKey("ActivityId");

                            b1.OwnsOne("TourManagementApi.Models.Common.Coordinates", "Coordinates", b2 =>
                                {
                                    b2.Property<int>("LocationActivityId")
                                        .HasColumnType("int");

                                    b2.Property<double>("Latitude")
                                        .HasColumnType("float");

                                    b2.Property<double>("Longitude")
                                        .HasColumnType("float");

                                    b2.HasKey("LocationActivityId");

                                    b2.ToTable("Activities");

                                    b2.WithOwner()
                                        .HasForeignKey("LocationActivityId");
                                });

                            b1.Navigation("Coordinates");
                        });

                    b.OwnsOne("TourManagementApi.Models.Common.Media", "Media", b1 =>
                        {
                            b1.Property<int>("ActivityId")
                                .HasColumnType("int");

                            b1.PrimitiveCollection<string>("Videos")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<bool>("_isNull")
                                .HasColumnType("bit")
                                .HasColumnName("MediaIsNull");

                            b1.HasKey("ActivityId");

                            b1.ToTable("Activities");

                            b1.WithOwner()
                                .HasForeignKey("ActivityId");

                            b1.OwnsOne("TourManagementApi.Models.Common.MediaImages", "Images", b2 =>
                                {
                                    b2.Property<int>("MediaActivityId")
                                        .HasColumnType("int");

                                    b2.PrimitiveCollection<string>("Gallery")
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Header")
                                        .HasColumnType("nvarchar(max)");

                                    b2.Property<string>("Teaser")
                                        .HasColumnType("nvarchar(max)");

                                    b2.HasKey("MediaActivityId");

                                    b2.ToTable("Activities");

                                    b2.WithOwner()
                                        .HasForeignKey("MediaActivityId");
                                });

                            b1.Navigation("Images")
                                .IsRequired();
                        });

                    b.OwnsOne("TourManagementApi.Models.Common.PriceInfo", "PriceInfo", b1 =>
                        {
                            b1.Property<int>("ActivityId")
                                .HasColumnType("int");

                            b1.Property<decimal>("BasePrice")
                                .HasPrecision(18, 2)
                                .HasColumnType("decimal(18,2)");

                            b1.Property<string>("Currency")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<int?>("MaxAge")
                                .HasColumnType("int");

                            b1.Property<int?>("MaximumParticipants")
                                .HasColumnType("int");

                            b1.Property<int?>("MinAge")
                                .HasColumnType("int");

                            b1.Property<int?>("MinimumParticipants")
                                .HasColumnType("int");

                            b1.Property<bool>("_isNull")
                                .HasColumnType("bit")
                                .HasColumnName("PriceInfoIsNull");

                            b1.HasKey("ActivityId");

                            b1.ToTable("Activities");

                            b1.WithOwner()
                                .HasForeignKey("ActivityId");
                        });

                    b.OwnsMany("TourManagementApi.Models.Common.TimeSlot", "TimeSlots", b1 =>
                        {
                            b1.Property<int>("ActivityId")
                                .HasColumnType("int");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<string>("DaysOfWeek")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("EndTime")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("StartTime")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ActivityId", "Id");

                            b1.ToTable("TimeSlot");

                            b1.WithOwner()
                                .HasForeignKey("ActivityId");
                        });

                    b.OwnsOne("TourManagementApi.Models.ContactInfo", "ContactInfo", b1 =>
                        {
                            b1.Property<int>("ActivityId")
                                .HasColumnType("int");

                            b1.Property<string>("Email")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Name")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Phone")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Role")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<bool>("_isNull")
                                .HasColumnType("bit")
                                .HasColumnName("ContactInfoIsNull");

                            b1.HasKey("ActivityId");

                            b1.ToTable("Activities");

                            b1.WithOwner()
                                .HasForeignKey("ActivityId");
                        });

                    b.OwnsMany("TourManagementApi.Models.MeetingPoint", "MeetingPoints", b1 =>
                        {
                            b1.Property<int>("ActivityId")
                                .HasColumnType("int");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<string>("Address")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Latitude")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Longitude")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ActivityId", "Id");

                            b1.ToTable("MeetingPoint");

                            b1.WithOwner()
                                .HasForeignKey("ActivityId");
                        });

                    b.OwnsMany("TourManagementApi.Models.RoutePoint", "RoutePoints", b1 =>
                        {
                            b1.Property<int>("ActivityId")
                                .HasColumnType("int");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<string>("Latitude")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Longitude")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ActivityId", "Id");

                            b1.ToTable("RoutePoint");

                            b1.WithOwner()
                                .HasForeignKey("ActivityId");
                        });

                    b.OwnsOne("TourManagementApi.Models.SalesAvailability", "SalesAvailability", b1 =>
                        {
                            b1.Property<int>("ActivityId")
                                .HasColumnType("int");

                            b1.Property<DateTime>("EndDate")
                                .HasColumnType("datetime2");

                            b1.Property<DateTime>("StartDate")
                                .HasColumnType("datetime2");

                            b1.Property<bool>("_isNull")
                                .HasColumnType("bit")
                                .HasColumnName("SalesAvailabilityIsNull");

                            b1.HasKey("ActivityId");

                            b1.ToTable("Activities");

                            b1.WithOwner()
                                .HasForeignKey("ActivityId");
                        });

                    b.OwnsOne("TourManagementApi.Models.SeasonalAvailability", "SeasonalAvailability", b1 =>
                        {
                            b1.Property<int>("ActivityId")
                                .HasColumnType("int");

                            b1.Property<string>("EndDate")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("StartDate")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<bool>("_isNull")
                                .HasColumnType("bit")
                                .HasColumnName("SeasonalAvailabilityIsNull");

                            b1.HasKey("ActivityId");

                            b1.ToTable("Activities");

                            b1.WithOwner()
                                .HasForeignKey("ActivityId");
                        });

                    b.Navigation("ContactInfo");

                    b.Navigation("Location");

                    b.Navigation("Media");

                    b.Navigation("MeetingPoints");

                    b.Navigation("PriceInfo");

                    b.Navigation("Pricing");

                    b.Navigation("RoutePoints");

                    b.Navigation("SalesAvailability");

                    b.Navigation("SeasonalAvailability");

                    b.Navigation("TimeSlots");
                });

            modelBuilder.Entity("TourManagementApi.Models.OpeningHour", b =>
                {
                    b.HasOne("TourManagementApi.Models.Option", "Option")
                        .WithMany("OpeningHours")
                        .HasForeignKey("OptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Option");
                });

            modelBuilder.Entity("TourManagementApi.Models.Option", b =>
                {
                    b.HasOne("TourManagementApi.Models.Activity", "Activity")
                        .WithMany("Options")
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Activity");
                });

            modelBuilder.Entity("TourManagementApi.Models.Reservation", b =>
                {
                    b.HasOne("TourManagementApi.Models.Activity", "Activity")
                        .WithMany()
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TourManagementApi.Models.Option", "Option")
                        .WithMany()
                        .HasForeignKey("OptionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Activity");

                    b.Navigation("Option");
                });

            modelBuilder.Entity("TourManagementApi.Models.ReservationGuest", b =>
                {
                    b.HasOne("TourManagementApi.Models.Reservation", "Reservation")
                        .WithMany("Guests")
                        .HasForeignKey("ReservationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reservation");
                });

            modelBuilder.Entity("TourManagementApi.Models.Ticket", b =>
                {
                    b.HasOne("TourManagementApi.Models.Reservation", null)
                        .WithMany("Tickets")
                        .HasForeignKey("ReservationId");
                });

            modelBuilder.Entity("TourManagementApi.Models.TicketCategory", b =>
                {
                    b.HasOne("TourManagementApi.Models.Option", "Option")
                        .WithMany("TicketCategories")
                        .HasForeignKey("OptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Option");
                });

            modelBuilder.Entity("TourManagementApi.Models.Activity", b =>
                {
                    b.Navigation("Options");
                });

            modelBuilder.Entity("TourManagementApi.Models.Option", b =>
                {
                    b.Navigation("OpeningHours");

                    b.Navigation("TicketCategories");
                });

            modelBuilder.Entity("TourManagementApi.Models.Reservation", b =>
                {
                    b.Navigation("Guests");

                    b.Navigation("Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
